var MersenneTwister=function(e){null==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};MersenneTwister.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++){e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0}},MersenneTwister.prototype.init_by_array=function(e,t){var a,s,r;for(this.init_genrand(19650218),a=1,s=0,r=this.N>t?this.N:t;r;r--){var i=this.mt[a-1]^this.mt[a-1]>>>30;this.mt[a]=(this.mt[a]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+e[s]+s,this.mt[a]>>>=0,s++,++a>=this.N&&(this.mt[0]=this.mt[this.N-1],a=1),t<=s&&(s=0)}for(r=this.N-1;r;r--){i=this.mt[a-1]^this.mt[a-1]>>>30;this.mt[a]=(this.mt[a]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-a,this.mt[a]>>>=0,++a>=this.N&&(this.mt[0]=this.mt[this.N-1],a=1)}this.mt[0]=2147483648},MersenneTwister.prototype.genrand_int32=function(){var e,t,a=new Array(0,this.MATRIX_A);if(this.mti>=this.N){for(this.mti==this.N+1&&this.init_genrand(5489),t=0;t<this.N-this.M;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+this.M]^e>>>1^a[1&e];for(;t<this.N-1;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+(this.M-this.N)]^e>>>1^a[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^a[1&e],this.mti=0}return e=this.mt[this.mti++],(e=(e=(e=(e^=e>>>11)^e<<7&2636928640)^e<<15&4022730752)^e>>>18)>>>0},MersenneTwister.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},MersenneTwister.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},MersenneTwister.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},MersenneTwister.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},MersenneTwister.prototype.genrand_res53=function(){return 1/9007199254740992*(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))};class AbstractBaseballGameState{static restructure(e){switch(e.name){case"AwayPlayerAtBat":Object.setPrototypeOf(e,AwayPlayerAtBat.prototype);break;case"AwayPlayerStepsUpToBat":Object.setPrototypeOf(e,AwayPlayerStepsUpToBat.prototype);break;case"BottomOfTheInning":Object.setPrototypeOf(e,BottomOfTheInning.prototype);break;case"EndOfGame":Object.setPrototypeOf(e,EndOfGame.prototype);break;case"FinalMessage":Object.setPrototypeOf(e,FinalMessage.prototype);break;case"HomePlayerAtBat":Object.setPrototypeOf(e,HomePlayerAtBat.prototype);break;case"HomePlayerStepsUpToBat":Object.setPrototypeOf(e,HomePlayerStepsUpToBat.prototype);break;case"InningIsNowAnOuting":Object.setPrototypeOf(e,InningIsNowAnOuting.prototype);break;case"PlayBall":Object.setPrototypeOf(e,PlayBall.prototype);break;case"TopOfTheInning":Object.setPrototypeOf(e,TopOfTheInning.prototype)}return e}constructor(){if(this.name="AbstractBaseballGameState",void 0===this.handle)throw new Error("Must implement the method handle");if(void 0===this.nextState)throw new Error("Must implement the method nextState");if(void 0===this.previousState)throw new Error("Must implement the method previousState")}handle(e){throw new Error("Must implement the method handle")}nextState(e){throw new Error("Must implement the method nextState")}previousState(e){throw new Error("Must implement the method previousState")}}class AwayPlayerAtBat extends AbstractBaseballGameState{constructor(){super(),this.name="AwayPlayerAtBat"}handle(e){var t=e.nextPitch();return 3<=e.getOuts()?this.nextState(e):(3<=e.getStrikes()||4<=e.getBalls())&&(this.previousState(e),this.setCountToZero()),3<=e.getOuts()&&9<=e.getInning()&&e.scoreboard.getHomeScore()>e.scoreboard.getAwayScore()&&e.setGameState(new FinalMessage),t}nextState(e){e.setGameState(new BottomOfTheInning)}previousState(e){e.setGameState(new AwayPlayerStepsUpToBat)}}class AwayPlayerStepsUpToBat extends AbstractBaseballGameState{constructor(){super(),this.name="AwayPlayerStepsUpToBat"}handle(e){return this.nextState(e),e.nextBatter(),e.batter.getFullNameWithLink(20)+" steps up to bat for the "+e.awayTeam.getNameWithLink(20)+e.batter.modifyGameWithConditions(e)}nextState(e){e.setGameState(new AwayPlayerAtBat)}previousState(e){throw new Error("Cannot move back to previous state")}}class BottomOfTheInning extends AbstractBaseballGameState{constructor(){super(),this.name="BottomOfTheInning"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],this.nextState(e),this.setupBottomInning(e)}nextState(e){e.setGameState(new HomePlayerStepsUpToBat)}previousState(e){throw new Error("Cannot move back to previous state")}setupBottomInning(e){return e.setInningTop(!1),e.setOffenseTeam(),e.setCountToZero(),e.addBoxScoreInning(),e.awayTeam.pitcher.manager.notify(new GameEvent(GameEventType.INNINGS_PITCHED,e.awayTeam.leagueIdNumber,e.awayTeam.pitcher.leagueIdNumber)),"Bottom of inning "+e.getInning()+", "+e.offenseTeam.getNameWithLink(20)+" batting."}}class EndOfGame extends AbstractBaseballGameState{constructor(){super(),this.name="EndOfGame"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],e.setGameOver(),e.homeTeam.batterUpNumber=0,e.awayTeam.batterUpNumber=0,e.getWinningTeam().getNameWithLink(20)+" defeated "+e.getLosingTeam().getNameWithLink(20)}nextState(e){throw new Error("Cannot move to next state")}previousState(e){throw new Error("Cannot move back to previous state")}}class FinalMessage extends AbstractBaseballGameState{constructor(){super(),this.name="FinalMessage"}handle(e){return e.finalMessage=!0,this.nextState(e),e.getWinningTeam().manager.notify(new GameEvent(GameEventType.GAME_WINNER,e.getWinningTeam().leagueIdNumber)),e.getLosingTeam().manager.notify(new GameEvent(GameEventType.GAME_LOSER,e.getLosingTeam().leagueIdNumber)),e.getWinningTeam().getNameWithLink(20)+" defeated "+e.getLosingTeam().getNameWithLink(20)}nextState(e){e.setGameState(new EndOfGame)}previousState(e){throw new Error("Cannot move back to previous state")}}class HomePlayerAtBat extends AbstractBaseballGameState{constructor(){super(),this.name="HomePlayerAtBat"}handle(e){var t=e.nextPitch();return 3<=e.getOuts()?this.nextState(e):(3<=e.getStrikes()||4<=e.getBalls())&&(this.previousState(e),this.setCountToZero()),3<=e.getOuts()&&9<=e.getInning()&&e.scoreboard.getHomeScore()!=e.scoreboard.getAwayScore()&&e.setGameState(new FinalMessage),t}nextState(e){e.setGameState(new InningIsNowAnOuting)}previousState(e){e.setGameState(new HomePlayerStepsUpToBat)}}class HomePlayerStepsUpToBat extends AbstractBaseballGameState{constructor(){super(),this.name="HomePlayerStepsUpToBat"}handle(e){return this.nextState(e),e.nextBatter(),e.batter.getFullNameWithLink(20)+" steps up to bat for the "+e.homeTeam.getNameWithLink(20)+e.batter.modifyGameWithConditions(e)}nextState(e){e.setGameState(new HomePlayerAtBat)}previousState(e){throw new Error("Cannot move back to previous state")}}class InningIsNowAnOuting extends AbstractBaseballGameState{constructor(){super(),this.name="InningIsNowAnOuting"}handle(e){return this.nextState(e),"Inning "+e.getInning()+" is now an Outing."}nextState(e){e.setGameState(new TopOfTheInning)}previousState(e){throw new Error("Cannot move back to previous state")}}class PlayBall extends AbstractBaseballGameState{constructor(){super(),this.name="PlayBall"}handle(e){return e.defenseTeam=e.homeTeam,e.offenseTeam=e.awayTeam,e.homeTeam.batterUpNumber=0,e.awayTeam.batterUpNumber=0,e.pitcher=e.defenseTeam.getPitcher(),this.nextState(e),e.setGameStarted(),"PLAY BALL!"}nextState(e){e.setGameState(new TopOfTheInning)}previousState(e){throw new Error("Cannot move back to previous state")}}class TopOfTheInning extends AbstractBaseballGameState{constructor(){super(),this.name="TopOfTheInning"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],this.nextState(e),this.setupTopInning(e)}nextState(e){e.setGameState(new AwayPlayerStepsUpToBat)}previousState(e){throw new Error("Cannot move back to previous state")}setupTopInning(e){return e.setInningTop(!0),e.setOffenseTeam(),e.setCountToZero(),e.incrementInning(),e.addBoxScoreInning(),e.homeTeam.pitcher.manager.notify(new GameEvent(GameEventType.INNINGS_PITCHED,e.homeTeam.leagueIdNumber,e.homeTeam.pitcher.leagueIdNumber)),Model.rng.random()<.5?`${e.weather.getFlavorText()} It is the top of ${e.getInning()} and ${e.offenseTeam.getNameWithLink(20)} are batting.`:"Top of inning "+e.getInning()+", "+e.offenseTeam.getNameWithLink(20)+" batting."}}class AbstractWeather{static generateRandomWeather(e){return[new HeatwaveWeather,new CoolWeather,new RainDelayWeather,new UnrainDelayWeather][Name.getCharSum(e)%4]}constructor(e,t,a,s,r){if(null==e)throw new Error("null name");if(null==t)throw new Error("null desc");if(null==a)throw new Error("null icon");if(null==s)throw new Error("null alt");if(null==r)throw new Error("null flavorTextArray");this.name=e,this.description=t,this.icon=a,this.alt=s,this.flavorTextArray=r}addCondition(e){}getFlavorText(){return HelpMe.choice(this.flavorTextArray)}getHitScore(e){return e}getIcon(){return`<span class="tooltipContainer" data-tooltip="${this.name.toUpperCase()}: ${this.description}" ><img src="/images/weatherIcons/${this.icon}" class="weatherIcon" alt="${this.alt}" ></span>`}getPitchScore(e){return e}getRunAmount(e){return e}getSpecialPitchText(e){return"a fastball++"}getSpecialHitText(e){return""}setup(e){}}class CoolWeather extends AbstractWeather{constructor(){super("Cool Weather","Hits are 10% cooler","coolWeather.svg","An illustration of a snowflake",["This is brisk, cool baseball weather!","You can feel a bit of a chill in the air today.","The jackets and blankets are out in the stands.","The cool wind is cutting right through the ballpark!","It's the kind of cool day where pitchers might like the grip on the ball a bit more.","A crisp, cool breeze is blowing through the field.","Players are bundled up in the dugout!","Not the kind of weather for short sleeves, that's for sure!","You can see the players' breath out there!","This weather's perfect for a hot chocolate or some coffee in the stands.","The outfielders look like they're doing a little extra jogging to stay warm.","It's a chilly one, folks, but the action is heating up on the field!","These are the kind of conditions where defense can get tricky! Numb fingers don't help with grip!","It feels more like Hlockey weather than baseball weather tonight!","Brrr! It's a little cool in the stadium today."])}getHitScore(e){return Model.rng.random()<.1?27:1.1*e}getSpecialHitText(e,t){return 27==t?"<br>"+e.getFullNameWithLink(20)+" 🏒 TAKES A SLAPSHOT! 🏒":""}}class HeatwaveWeather extends AbstractWeather{constructor(){super("Heatwave","Pitches are 10% hotter","heatwaveWeather.svg","An illustration of hot steam",["Even the umpire is sweating buckets!","Hope the players are staying hydrated in this heat!","How about this heat?","It's a hot one, folks!","It's a scorcher today!","It's really heating up out there!","Not a cloud in the sky, and it feels like an oven out there!","The fans are melting in their seats!","The heat is going to test everyone's endurance today!","The ice cream vendors are doing great business today!","The sun is beating down on the field!","The sun is relentless! Shade is prime real estate in the stands!","This is the kind of heat that makes you appreciate the seventh-inning stretch!","You could fry an egg on the pitcher's mound!"])}getFastballSpeed(){return Math.floor(5*Math.random())+95}getSpecialPitchText(e){return 95<=e?`a 🔥 ${e} MPH HEATER 🔥`:"a fastball++"}getPitchScore(e){return Model.rng.random()<.1?this.getFastballSpeed():1.1*e}}class RainDelayWeather extends AbstractWeather{constructor(){super("Rain Delay","Game starts 2 innings later with inning 3","rainDelay.svg","An illustration of a cloud with raindrops",["The field looks great after the rain. Kudos to the grounds crew for their work.","The rain has stopped, but you can still feel the humidity out here.","Players might need a little time to get back into the rhythm after the rain delay.","The outfield could still be a bit slippery, so fielders will need to be careful.","Looks like the mound held up well during the delay. Pitchers should have no issues with footing.","Fans are drying off their rainy seats and are ready for more action!","It's always a challenge to stay loose after a rain delay, but the players look ready to go.","The air is a little cooler now after the rain. Perfect conditions for the rest of the game.","You can see the tarp lines in the infield, but the ground looks solid overall.","Batters will need to keep an eye out for any lingering wet spots near home plate.","The rain delay gave everyone a chance to regroup. Let's see who comes out sharper after the break.","It's always interesting to see how the momentum shifts after a rain delay.","The radar looks clear now, so we should be good for the rest of the day.","Nothing like a little rain to add some drama! Now let's get back to the game!"])}setup(e){e.inning=2}}class UnrainDelayWeather extends AbstractWeather{constructor(){super("Unrain Delay","Game starts 2 innings earlier with unning -1","unrainDelay.svg","An illustration of a cloud that is full of holes",["Well, folks, it's dry as a bone after that un-rain delay!","Everything is drier than a desert out there. It's as if the un-rain just soaked up all the moisture!","The infield looks like a sandpit now. It's bone-dry after that strange, un-rain weather phenomenon.","The un-rain has left the grass looking like it's been sunbaked for weeks!","The grounds crew worked fast to adjust, but I think even they were scratching their heads during the un-rain delay.","Pitchers will have to watch out. The mound is drier than ever, and the ball might feel like chalk.","The un-rain left the outfielders in a strange spot. Slipping isn't the issue anymore; now it's all about footing on this dry turf.","The humidity is gone, and the un-rain air feels so crisp it's almost unnatural!","There's not a drop of moisture in sight.","Players might need to adjust to the ball. It's not gripping the same way after the un-rain.","It's rare to have to hydrate just because the un-rain air is too dry, but that might be the case today.","The bats might get a little more pop with this dry un-rain air. It's practically a hitter's dream out there now.","The un-rain delay has left it's left its mark on the field and the atmosphere."])}setup(e){e.inning=-2}}class Name{static firstNameList=["Aaliyah","Aaron","Abby","Abigail","Abraham","Adam","Addison","Adrian","Adriana","Adrianna","Aidan","Aiden","Alan","Alana","Alejandro","Alex","Alexa","Alexander","Alexandra","Alexandria","Alexia","Alexis","Alicia","Allison","Alondra","Alyssa","Amanda","Amber","Amelia","Amy","Ana","Andrea","Andres","Andrew","Angel","Angela","Angelica","Angelina","Anna","Anthony","Antonio","Ariana","Arianna","Ashley","Ashlyn","Ashton","Aubrey","Audrey","Austin","Autumn","Ava","Avery","Ayden","Bailey","Benjamin","Bianca","Blake","Braden","Bradley","Brady","Brandon","Brayden","Breanna","Brendan","Brian","Briana","Brianna","Brittany","Brody","Brooke","Brooklyn","Bryan","Bryce","Bryson","Caden","Caitlin","Caitlyn","Caleb","Cameron","Camila","Carlos","Caroline","Carson","Carter","Cassandra","Cassidy","Catherine","Cesar","Charles","Charlotte","Chase","Chelsea","Cheyenne","Chloe","Christian","Christina","Christopher","Claire","Cody","Colby","Cole","Colin","Collin","Colton","Conner","Connor","Cooper","Courtney","Cristian","Crystal","Daisy","Dakota","Dalton","Damian","Daniel","Daniela","Danielle","David","Delaney","Derek","Destiny","Devin","Devon","Diana","Diego","Dominic","Donovan","Dylan","Edgar","Eduardo","Edward","Edwin","Eli","Elias","Elijah","Elizabeth","Ella","Ellie","Emily","Emma","Emmanuel","Eric","Erica","Erick","Erik","Erin","Ethan","Eva","Evan","Evelyn","Faith","Fernando","Francisco","Gabriel","Gabriela","Gabriella","Gabrielle","Gage","Garrett","Gavin","Genesis","George","Gianna","Giovanni","Giselle","Grace","Gracie","Grant","Gregory","Hailey","Haley","Hannah","Hayden","Hector","Henry","Hope","Hunter","Ian","Isaac","Isabel","Isabella","Isabelle","Isaiah","Ivan","Jack","Jackson","Jacob","Jacqueline","Jada","Jade","Jaden","Jake","Jalen","James","Jared","Jasmin","Jasmine","Jason","Javier","Jayden","Jayla","Jazmin","Jeffrey","Jenna","Jennifer","Jeremiah","Jeremy","Jesse","Jessica","Jesus","Jillian","Jocelyn","Joel","John","Johnathan","Jonah","Jonathan","Jordan","Jordyn","Jorge","Jose","Joseph","Joshua","Josiah","Juan","Julia","Julian","Juliana","Justin","Kaden","Kaitlyn","Kaleb","Karen","Karina","Kate","Katelyn","Katherine","Kathryn","Katie","Kayla","Kaylee","Kelly","Kelsey","Kendall","Kennedy","Kenneth","Kevin","Kiara","Kimberly","Kyle","Kylee","Kylie","Landon","Laura","Lauren","Layla","Leah","Leonardo","Leslie","Levi","Liam","Liliana","Lillian","Lilly","Lily","Lindsey","Logan","Lucas","Lucy","Luis","Luke","Lydia","Mackenzie","Madeline","Madelyn","Madison","Makayla","Makenzie","Malachi","Manuel","Marco","Marcus","Margaret","Maria","Mariah","Mario","Marissa","Mark","Martin","Mary","Mason","Matthew","Max","Maxwell","Maya","Mckenzie","Megan","Melanie","Melissa","Mia","Micah","Michael","Michelle","Miguel","Mikayla","Miranda","Molly","Morgan","Mya","Naomi","Natalia","Natalie","Nathan","Nathaniel","Nevaeh","Nicholas","Nicolas","Nicole","Noah","Nolan","Oliver","Olivia","Omar","Oscar","Owen","Paige","Parker","Patrick","Paul","Payton","Peter","Peyton","Preston","Rachel","Raymond","Reagan","Rebecca","Ricardo","Richard","Riley","Robert","Ruby","Ryan","Rylee","Sabrina","Sadie","Samantha","Samuel","Sara","Sarah","Savannah","Sean","Sebastian","Serenity","Sergio","Seth","Shane","Shawn","Shelby","Sierra","Skylar","Sofia","Sophia","Sophie","Spencer","Stephanie","Stephen","Steven","Summer","Sydney","Tanner","Taylor","Thomas","Tiffany","Timothy","Travis","Trenton","Trevor","Trinity","Tristan","Tyler","Valeria","Valerie","Vanessa","Veronica","Victor","Victoria","Vincent","Wesley","William","Wyatt","Xavier","Zachary","Zoe","Zoey"];static lastNameList=["Smith","Johnson","Williams","Brown","Jones","Miller","Davis","Garcia","Rodriguez","Wilson","Martinez","Anderson","Taylor","Thomas","Hernandez","Moore","Martin","Jackson","Thompson","White","Lopez","Lee","Gonzalez","Harris","Clark","Lewis","Robinson","Walker","Perez","Hall","Young","Allen","Sanchez","Wright","King","Scott","Green","Baker","Adams","Nelson","Hill","Ramirez","Campbell","Mitchell","Roberts","Carter","Phillips","Evans","Turner","Torres","Parker","Collins","Edwards","Stewart","Flores","Morris","Nguyen","Murphy","Rivera","Cook","Rogers","Morgan","Peterson","Cooper","Reed","Bailey","Bell","Gomez","Kelly","Howard","Ward","Cox","Diaz","Richardson","Wood","Watson","Brooks","Bennett","Gray","James","Reyes","Cruz","Hughes","Price","Myers","Long","Foster","Sanders","Ross","Morales","Powell","Sullivan","Russell","Ortiz","Jenkins","Gutierrez","Perry","Butler","Barnes","Fisher","Henderson","Coleman","Simmons","Patterson","Jordan","Reynolds","Hamilton","Graham","Kim","Gonzales","Alexander","Ramos","Wallace","Griffin","West","Cole","Hayes","Chavez","Gibson","Bryant","Ellis","Stevens","Murray","Ford","Marshall","Owens","Mcdonald","Harrison","Ruiz","Kennedy","Wells","Alvarez","Woods","Mendoza","Castillo","Olson","Webb","Washington","Tucker","Freeman","Burns","Henry","Vasquez","Snyder","Simpson","Crawford","Jimenez","Porter","Mason","Shaw","Gordon","Wagner","Hunter","Romero","Hicks","Dixon","Hunt","Palmer","Robertson","Black","Holmes","Stone","Meyer","Boyd","Mills","Warren","Fox","Rose","Rice","Moreno","Schmidt","Patel","Ferguson","Nichols","Herrera","Medina","Ryan","Fernandez","Weaver","Daniels","Stephens","Gardner","Payne","Kelley","Dunn","Pierce","Arnold","Tran","Spencer","Peters","Hawkins","Grant","Hansen","Castro","Hoffman","Hart","Elliott","Cunningham","Knight","Bradley"];static adjList=["Aristotelian","Arthurian","Bohemian","Brethren","Mosaic","Oceanic","Proctor","Terran","Tudor","abroad","absorbing","abstract","academic","accelerated","accented","accountant","acquainted","acute","addicting","addictive","adjustable","admired","adult","adverse","advised","aerosol","afraid","aggravated","aggressive","agreeable","alienate","aligned","all-round","alleged","almond","alright","altruistic","ambient","ambivalent","amiable","amino","amorphous","amused","anatomical","ancestral","angelic","angrier","answerable","antiquarian","antiretroviral","appellate","applicable","apportioned","approachable","appropriated","archer","aroused","arrested","assertive","assigned","athletic","atrocious","attained","authoritarian","autobiographical","avaricious","avocado","awake","awsome","backstage","backwoods","balding","bandaged","banded","banned","barreled","battle","beaten","begotten","beguiled","bellied","belted","beneficent","besieged","betting","big-money","biggest","biochemical","bipolar","blame","blessed","blindfolded","bloat","blocked","blooded","blue-collar","blushing","boastful","bolder","bolstered","bonnie","bored","boundary","bounded","bounding","branched","brawling","brazen","breeding","bridged","brimming","brimstone","broadest","broiled","broker","bronze","bruising","buffy","bullied","bungling","burial","buttery","candied","canonical","cantankerous","cardinal","carefree","caretaker","casual","cathartic","causal","chapel","characterized","charcoal","cheeky","cherished","chipotle","chirping","chivalrous","circumstantial","civic","civil","civilised","clanking","clapping","claptrap","classless","cleansed","cleric","cloistered","codified","colloquial","colour","combat","combined","comely","commissioned","commonplace","commuter","commuting","comparable","complementary","compromising","conceding","concentrated","conceptual","conditioned","confederate","confident","confidential","confining","confuse","congressional","consequential","conservative","constituent","contaminated","contemporaneous","contraceptive","convertible","convex","cooked","coronary","corporatist","correlated","corroborated","cosmic","cover","crash","crypto","culminate","cushioned","dandy","dashing","dazzled","decreased","decrepit","dedicated","defaced","defective","defenseless","deluded","deodorant","departed","depress","designing","despairing","destitute","detective","determined","devastating","deviant","devilish","devoted","diagonal","dictated","didactic","differentiated","diffused","dirtier","disabling","disconnected","discovered","disdainful","diseased","disfigured","disheartened","disheveled","disillusioned","disparate","dissident","doable","doctrinal","doing","dotted","double-blind","downbeat","dozen","draining","draught","dread","dried","dropped","dulled","duplicate","eaten","echoing","economical","elaborated","elastic","elective","electoral","elven","embryo","emerald","emergency","emissary","emotional","employed","enamel","encased","encrusted","endangered","engraved","engrossing","enlarged","enlisted","enlivened","ensconced","entangled","enthralling","entire","envious","eradicated","eroded","esoteric","essential","evaporated","ever-present","evergreen","everlasting","exacting","exasperated","excess","exciting","executable","existent","exonerated","exorbitant","exponential","export","extraordinary","exultant","exulting","facsimile","fading","fainter","faith-based","fallacious","faltering","famous","fancier","fast-growing","fated","favourable","fearless","feathered","fellow","fermented","ferocious","fiddling","filling","firmer","fitted","flammable","flawed","fledgling","fleshy","flexible","flickering","floral","flowering","flowing","foggy","folic","foolhardy","foolish","footy","forehand","forked","formative","formulaic","foul-mouthed","fractional","fragrant","fraudulent","freakish","freckled","freelance","freight","fresh","fretted","frugal","fulfilling","fuming","funded","funny","garbled","gathered","geologic","geometric","gibberish","gilded","ginger","glare","glaring","gleaming","glorified","glorious","goalless","gold-plated","goody","grammatical","grande","grateful","gratuitous","graven","greener","grinding","grizzly","groaning","grudging","guaranteed","gusty","hand-held","handheld","hands-off","hard-pressed","healing","healthier","healthiest","heart","heart-shaped","heathen","hedonistic","heralded","herbal","high-density","high-performance","high-res","high-yield","hissy","hitless","holiness","homesick","honorable","hooded","hopeless","horrendous","horrible","hot-button","huddled","human","humbling","humid","humiliating","hypnotized","idealistic","idiosyncratic","ignited","illustrated","illustrative","imitated","immense","immersive","immigrant","immoral","impassive","impressionable","improbable","impulsive","in-between","in-flight","inattentive","inbound","inbounds","incalculable","incomprehensible","indefatigable","indigo","indiscriminate","indomitable","inert","inflate","inform","inheriting","injured","injurious","inking","inoffensive","insane","insensible","insidious","insincere","insistent","insolent","insufferable","intemperate","interdependent","interesting","interfering","intern","interpreted","intersecting","intolerable","intolerant","intuitive","irresolute","irritate","jealous","jerking","joining","joint","journalistic","joyful","keyed","knowing","lacklustre","laden","lagging","lamented","laughable","layered","leather","leathern","leery","left-footed","legible","leisure","lessening","liberating","life-size","lifted","lightest","limitless","listening","literary","liver","livid","lobster","locked","long-held","long-lasting","long-running","long-suffering","loudest","loveliest","low-budget","low-carb","lowering","lucid","luckless","lusty","luxurious","magazine","maniac","manmade","maroon","mastered","mated","material","materialistic","meaningful","measuring","mediaeval","medical","meditated","medley","melodic","memorable","memorial","metabolic","metallic","metallurgical","metering","midair","midterm","midway","mighty","migrating","mind-blowing","mind-boggling","minor","mirrored","misguided","misshapen","mitigated","mixed","modernized","molecular","monarch","monastic","morbid","motley","motorized","mounted","multi-million","multidisciplinary","muscled","muscular","muted","mysterious","mythic","nail-biting","natural","nauseous","negative","networked","neurological","neutered","newest","night","nitrous","no-fly","noncommercial","nonsense","north","nuanced","occurring","offensive","oldest","oncoming","one-eyed","one-year","onstage","onward","opaque","open-ended","operating","opportunist","opposing","opt-in","ordinate","outdone","outlaw","outsized","overboard","overheated","oversize","overworked","oyster","paced","panting","paralyzed","paramount","parental","parted","partisan","passive","pastel","patriot","peacekeeping","pedestrian","peevish","penal","penned","pensive","perceptual","perky","permissible","pernicious","perpetuate","perplexed","pervasive","petrochemical","philosophical","picturesque","pillaged","piped","piquant","pitching","plausible","pliable","plumb","politician","polygamous","poorest","portmanteau","posed","positive","possible","postpartum","prank","pre-emptive","precocious","predicted","premium","preparatory","prerequisite","prescient","preserved","presidential","pressed","pressurized","presumed","prewar","priced","pricier","primal","primer","primetime","printed","private","problem","procedural","process","prodigious","professional","programmed","progressive","prolific","promising","promulgated","pronged","proportionate","protracted","pulled","pulsed","purgatory","quick","rapid-fire","raunchy","razed","reactive","readable","realizing","recognised","recovering","recurrent","recycled","redeemable","reflecting","regal","registering","reliable","reminiscent","remorseless","removable","renewable","repeating","repellent","reserve","resigned","respectful","rested","restrict","resultant","retaliatory","retiring","revelatory","reverend","reversing","revolving","ridiculous","right-hand","ringed","risque","robust","roomful","rotating","roused","rubber","run-down","running","runtime","rustling","safest","salient","sanctioned","saute","saved","scandalized","scarlet","scattering","sceptical","scheming","scoundrel","scratched","scratchy","scrolled","seated","second-best","segregated","self-taught","semiautomatic","senior","sensed","sentient","sexier","shadowy","shaken","shaker","shameless","shaped","shiny","shipped","shivering","shoestring","short","short-lived","signed","simplest","simplistic","sizable","skeleton","skinny","skirting","skyrocketed","slamming","slanting","slapstick","sleek","sleepless","sleepy","slender","slimmer","smacking","smokeless","smothered","smouldering","snuff","socialized","solid-state","sometime","sought","spanking","sparing","spattered","specialized","specific","speedy","spherical","spiky","spineless","sprung","squint","stainless","standing","starlight","startled","stately","statewide","stereoscopic","sticky","stimulant","stinky","stoked","stolen","storied","strained","strapping","strengthened","stubborn","stylized","suave","subjective","subjugated","subordinate","succeeding","suffering","summary","sunset","sunshine","supernatural","supervisory","supply-side","surrogate","suspended","suspenseful","swarthy","sweating","sweeping","swinging","swooning","sympathize","synchronized","synonymous","synthetic","tailed","tallest","tangible","tanked","tarry","technical","tectonic","telepathic","tenderest","territorial","testimonial","theistic","thicker","threatening","tight-lipped","timed","timely","timid","torrent","totalled","tougher","traditional","transformed","trapped","traveled","traverse","treated","trial","trunk","trusting","trying","twisted","two-lane","tyrannical","unaided","unassisted","unassuming","unattractive","uncapped","uncomfortable","uncontrolled","uncooked","uncooperative","underground","undersea","undisturbed","unearthly","uneasy","unequal","unfazed","unfinished","unforeseen","unforgivable","unidentified","unimaginative","uninspired","unintended","uninvited","universal","unmasked","unorthodox","unparalleled","unpleasant","unprincipled","unread","unreasonable","unregulated","unreliable","unremitting","unsafe","unsanitary","unsealed","unsuccessful","unsupervised","untimely","unwary","unwrapped","uppity","upstart","useless","utter","valiant","valid","valued","vanilla","vaulting","vaunted","veering","vegetative","vented","verbal","verifying","veritable","versed","vinyl","virgin","visceral","visual","voluptuous","walk-on","wanton","warlike","washed","waterproof","waved","weakest","well-bred","well-chosen","well-informed","wetting","wheeled","whirlwind","widen","widening","willful","willing","winnable","winningest","wireless","wistful","woeful","wooded","woodland","wordless","workable","worldly","worldwide","worst-case","worsted","worthless"];adjList=[].concat(adjList,["able","abnormal","absent-minded","above average","adventurous","affectionate","agile","agreeable","alert","amazing","ambitious","amiable","amusing","analytical","angelic","apathetic","apprehensive","ardent","artificial","artistic","assertive","attentive","average","awesome","awful","balanced","beautiful","below average","beneficent","blue","blunt","boisterous","brave","bright","brilliant","buff","callous","candid","cantankerous","capable","careful","careless","caustic","cautious","charming","childish","childlike","cheerful","chic","churlish","circumspect","civil","clean","clever","clumsy","coherent","cold","competent","composed","conceited","condescending","confident","confused","conscientious","considerate","content","cool","cool-headed","cooperative","cordial","courageous","cowardly","crabby","crafty","cranky","crass","critical","cruel","curious","cynical","dainty","decisive","deep","deferential","deft","delicate","demonic","dependent","delightful","demure","depressed","devoted","dextrous","diligent","direct","dirty","disagreeable","discerning","discreet","disruptive","distant","distraught","distrustful","dowdy","dramatic","dreary","drowsy","drugged","drunk","dull","dutiful","eager","earnest","easy-going","efficient","egotistical","elfin","emotional","energetic","enterprising","enthusiastic","evasive","even-tempered","exacting","excellent","excitable","experienced","fabulous","fastidious","ferocious","fervent","fiery","flabby","flaky","flashy","frank","friendly","funny","fussy","generous","gentle","gloomy","glutinous","good","grave","great","groggy","grouchy","guarded","hateful","hearty","helpful","hesitant","hot-headed","hypercritical","hysterical","idiotic","idle","illogical","imaginative","immature","immodest","impatient","imperturbable","impetuous","impractical","impressionable","impressive","impulsive","inactive","incisive","incompetent","inconsiderate","inconsistent","independent","indiscreet","indolent","indefatigable","industrious","inexperienced","insensitive","inspiring","intelligent","interesting","intolerant","inventive","irascible","irritable","irritating","jocular","jovial","joyous","judgmental","keen","kind","lame","lazy","lean","leery","lethargic","level-headed","listless","lithe","lively","local","logical","long-winded","lovable","love-lorn","lovely","maternal","mature","mean","meddlesome","mercurial","methodical","meticulous","mild","miserable","modest","moronic","morose","motivated","musical","naive","nasty","natural","naughty","negative","nervous","noisy","normal","nosy","numb","obliging","obnoxious","old-fashioned","one-sided","orderly","ostentatious","outgoing","outspoken","passionate","passive","paternal","paternalistic","patient","peaceful","peevish","pensive","persevering","persnickety","petulant","picky","plain","plain-speaking","playful","pleasant","plucky","polite","popular","positive","powerful","practical","prejudiced","pretty","proficient","proud","provocative","prudent","punctual","quarrelsome","querulous","quick","quick-tempered","quiet","realistic","reassuring","reclusive","reliable","reluctant","resentful","reserved","resigned","resourceful","respected","respectful","responsible","restless","revered","ridiculous","sad","sassy","saucy","sedate","self-assured","selfish","sensible","sensitive","sentimental","serene","serious","sharp","short-tempered","shrewd","shy","silly","sincere","sleepy","slight","sloppy","slothful","slovenly","slow","smart","snazzy","sneering","snobby","somber","sober","sophisticated","soulful","soulless","sour","spirited","spiteful","stable","staid","steady","stern","stoic","striking","strong","stupid","sturdy","subtle","sullen","sulky","supercilious","superficial","surly","suspicious","sweet","tactful","tactless","talented","testy","thinking","thoughtful","thoughtless","timid","tired","tolerant","touchy","tranquil","ugly","unaffected","unbalanced","uncertain","uncooperative","undependable","unemotional","unfriendly","unguarded","unhelpful","unimaginative","unmotivated","unpleasant","unpopular","unreliable","unsophisticated","unstable","unsure","unthinking","unwilling","venal","versatile","vigilant","warm","warmhearted","wary","watchful","weak","well-behaved","well-developed","well-intentioned","well-respected","well-rounded","willing","wonderful","volcanic","vulnerable","zealous"]);adjList=[].concat(adjList,["aah","ack","agreed","ah","aha","ahem","alas","all right","amen","argh","as if","aw","ay","aye","bah","blast","boo hoo","bother","boy","brr","by golly","bye","cheerio","cheers","chin up","come on","crikey","curses","dear me","doggone","drat","duh","easy does it","eek","egads","er","exactly","fair enough","fiddle-dee-dee","fiddlesticks","fie","foo","fooey","gadzooks","gah","gangway","g'day","gee","gee whiz","geez","gesundheit","get lost","get outta here","go on","good","good golly","good job","gosh","gracious","great","grr","gulp","ha","ha-ha","hah","hallelujah","harrumph","haw","hee","here","hey","hmm","ho hum","hoo","hooray","hot dog","how","huh","hum","humbug","hurray","huzza","I say","ick","is it","ixnay","jeez","just kidding","just a sec","just wondering","kapish","la","la-di-dah","lo","look","look here","long time","lordy","man","meh","mmm","most certainly","my","my my","my word","nah","naw","never","no","no can do","nooo","not","no thanks","no way","nuts","oh","oho","oh-oh","oh no","okay","okey-dokey","om","oof","ooh","oopsey","over","oy","oyez","peace","pff","pew","phew","pish posh","psst","ptui","quite","rah","rats","ready","right","right on","roger","roger that","rumble","say","see ya","shame","shh","shoo","shucks","sigh","sleep tight","snap","sorry","sssh","sup","ta","ta-da","ta ta","take that","tally ho","tch","thanks","there","there there","time out","toodles","touche","tsk","tsk-tsk","tut","tut-tut","ugh","uh","uh-oh","um","ur","urgh","very nice","very well","voila","vroom","wah","well","well done","well, well","what","whatever","whee","when","whoa","whoo","whoopee","whoops","whoopsey","whew","why","word","wow","wuzzup","ya","yea","yeah","yech","yikes","yippee","yo","yoo-hoo","you bet","you don't say","you know","yow","yum","yummy","zap","zounds","zowie","zzz"]);adjList=[].concat(adjList,["Quick","Big","Mean","The","Bad","Cool","Mad","Night","Lil","Sweet","Dirty","Clean","Iron","Flash","Flying","Hawk","Spider","Goose","Tiger","Cat","Crime","Candy","Sugar","Bat","Ball","Left","Right","Small","Biggie","Wiggly","Wormy","Squirmy","Milk","Little","Shark","Wolf","Dog","Spooky","Slimy","Doctor","Professor","Judge","Sparkle","Baby","Special","Normal","Nice","Mega","Kilo","Hard","President","Honest","Doc","Skinny","Mayor","Colonel","Captain","Wreck-it","Pintsize","Master","Lord","Detective","Major","Admiral","Ambassador","Chief","Commodore","Lieutenant","Senator","Cousin","Half","Sheriff","Deputy","Pudding","Rattle","Butter","Jail","Chunky","Glass","Milkshake","Grumpy","Rubber","Rusty","Broken","Plush","Sunny","Pro","Super","Incomplete","Silver","timeless","classic","dreamy","creamy","strong","mesmerizing","handsome","charming","attractive","hypnotic","enthralling","magnetic","stunning","gorgeous","devastating","striking","famous","first-class","regal","sublime","heavenly","athletic","dapper","stylish","suave","virile","fake","crazy","cool","creepy","weird","idiosyncratic","quirky","golden","eccentric","odd","strange","distinctive","singular","perfect","superior","unique","special","distinguished","abnormal","foreign","irregular","unusual","amazing","bizarre","incredible","phenomenal","awe-inspiring","prominent","prodigious","unparalleled","friendly","magic","magical","refined","reptilian","Titanic","Double","Triple","Birthday","Bounce","Brave","Bump","Busy","Chatterbox","Cheerful","Christmas","Clever","Clumsy","Cool","Daydream","Dizzy","Forgetful","Funny","Fussy","Good","Greedy","Grumble","Grumpy","Happy","Impossible","Jelly","Lazy","Mean","Messy","Mischief","Muddle","Nobody","Noisy","Nonsense","Nosey","Perfect","Quiet","Rude","Rush","Silly","Skinny","Slow","Small","Sneeze","Snow","Strong","Tall","Tickle","Topsy-Turvy","Worry","Wrong","Bad","Birthday","Bossy","Brainy","Busy","Chatterbox","Christmas","Contrary","Curious","Dotty","Fickle","Fun","Giggles","Greedy","Helpful","Hug","Late","Lucky","Magic","Naughty","Neat","Princess","Quick","Scary","Scatterbrain","Shy","Somersault","Splendid","Star","Stubborn","Sunshine","Tidy","Tiny","Trouble","Twins","Whoops","Wise","abnormal","accursed","amorphous","antediluvian","antique","antiquarian","blasphemy","blasphemous","cat","charnel","comprehension","cyclopean","dank","decadent","daemoniac","effulgence","eldritch","fainted","fainting","foetid","fungus","fungoid","fungous","furtive","gambrel","gibbous","gibbered","gibbering","hideous","immemorial","indescribable","iridescence","loathing","loathsome","lurk","madness","manuscript","mortal","nameless","noisome","non-euclidean","proportion","disproportionate","shunned","singularly","spectral","squamous","stench","stygian","swarthy","tenebrous","tentacle","ululating","unmentionable","unnamable","unutterable","achieved","adapted","addressed","administered","advised","analyzed","arranged","assembled","assessed","assisted","attained","audited","budgeted","calculated","classified","coached","collected","communicated","compiled","composed","computed","conducted","consolidated","constructed","consulted","coordinated","counseled","created","critiqued","defined","designed","detected","determined","devised","diagnosed","directed","discovered","displayed","earned","edited","eliminated","enforced","established","estimated","evaluated","examined","expanded","explained","experimented","financed","formulated","gathered","generated","grossed","guided","handled","hypothesized","identified","illustrated","implemented","improved","increased","influenced","initiated","inspected","installed","instituted","instructed","interpreted","interviewed","invented","investigated","lectured","managed","marketed","mediated","modeled","monitored","motivated","negotiated","obtained","operated","ordered","organized","oversaw","performed","persuaded","photographed","planned","prepared","presented","printed","processed","produced","projected","promoted","proofread","provided","publicized","purchased","received","recommended","reconciled","recorded","recruited","reduced","referred","refined","rehabilitated","repaired","reported","represented","researched","resolved","responded","restored","retrieved","reviewed","scheduled","selected","solved","sorted","studied","summarized","supervised","supplied","surveyed","tested","trained","transcribed","translated","traveled","tutored","upgraded","utilized","wrote"]);static nickNameList=["Alpha","Bravo","Charlie","Delta","Echo","Foxtrot","Golf","Hotel","India","Juliett","Kilo","Lima","Mike","November","Oscar","Papa","Quebec","Romeo","Sierra","Tango","Uniform","Victor","Whiskey","X-ray","Yankee","Zulu","a","abbey","abby","abigail","absurdity","ace","achilles","addie","aggravator","agnes","aj","ajax","albert","alex","alexander","alf","alfie","alice","allie","ally","alvin","amazon","amber","amelia","amy","andy","angel","angie","angus","anheuser","ankle","anna","annabelle","annie","apollo","apple","apple","applesauce","april","archer","archie","ari","ariel","arlo","arm","arthur","artie","arya","ash","ashley","astro","athena","atlas","atticus","audrey","augie","august","augustus","aurora","austin","autumn","ava","avenger","avery","axel","babble","baby","baby","baci","back","bacon","bagel","bags","bailey","balderdash","baloney","bam","bambi","bandit","bane","banjo","barbie","barkley","barley","barney","baron","basil","batman","baxter","beak","bean","bear","bear","beau","beauty","bebe","becky","beef","belch","bella","belle","ben","bender","benjamin","benji","benny","benson","bentley","bernie","bessie","bessie","betsy","betty","bianca","bibi","big","biggie","bijou","billie","billy","bingo","bird","birdie","biscuit","bishop","bite","bites","blake","blanca","blather","blaze","blitz","blondie","blu","blue","bo","bob","bobby","bobo","bodhi","bodie","bone","bones","bonnie","boo","booger","boom","boomer","boots","boots","boris","bosco","bottle","bowie","box","boy","bradley","brady","brain","braincase","brainpan","brandi","brando","brandy","bread","brewster","brodie","brody","bronx","brooke","brooklyn","brownie","browny","bruce","bruiser","brundon","bruno","brutus","bub","bubba","bubblegum","bubbles","bubs","buck","buckley","bucky","buddha","buddy","buffoonery","buffy","bug","bugsy","bull","bullet","bully","bunny","business","buster","butch","butter","butterbuns","buttercup","butters","button","button","buttons","buzz","buzz","caesar","cake","cakes","cali","callie","calvin","can","candy","candycane","capone","captain","cara","caramel","card","carly","carrying-on","carter","casey","cash","cashew","casper","cassidy","cassie","cat","centaur","cesar","chai","champ","chance","chanel","charles","charley","charlie","charlotte","charly","chase","cheech","cheeks","chelsea","cherry","chester","chewbacca","chewbacca","chewie","chewy","chi","chica","chicanery","chichi","chico","chief","child","chin","china","chip","chiqui","chiquita","chloe","choco","chocolate","chop","chopper","choppers","christmas","chubs","chuck","chucky","chulo","chum","cici","cindy","cinnamon","cj","clancy","claptrap","clara","clarice","clementine","cleo","cleopatra","clover","clyde","coby","coco","cocoa","coconut","cody","coffee","colby","cole","coleslaw","comet","cookie","cookie","cookie","cooper","copper","cora","corky","cosmo","cotton","cottonball","creeper","cricket","crock","cruella","crunch","crystal","cuddler","cuddles","cup","cupcake","cutie","cyrus","dagger","daisy","dakota","dallas","danny","dante","daphne","darby","darcy","darla","darwin","dash","dee","delilah","demon","derp","desi","destiny","devilry","dexter","diamond","diddly","diego","diesel","dino","dior","dip","dirt","diva","dixie","dj","django","django","dobby","doc","dog","dolce","dolly","dome","domino","donuts","dora","dory","dory","dottie","dough","dove","doyle","dragon","dread","dribble","drill","drive","drivel","duchess","duck","dudley","duffy","duke","dulce","duncan","dunkin","dusty","dutch","dutchess","dylan","ears","ebony","echo","eddie","edie","egg","einstein","eleanor","eli","ella","ellie","eloise","elsa","elvis","emily","emma","emmie","emmy","endzone","enzo","ernie","eva","evie","eye","eyes","face","faith","feet","felix","fendi","ferguson","fifi","fifi","filth","fingers","finley","finn","finnegan","fiona","fish","fist","flanders","flash","flimflam","flora","floyd","fluffy","foolishness","foot","fork","fox","fox","foxy","frances","frank","frankfurter","frankie","franklin","freckles","fred","freddie","freddy","freya","frida","friday","fritz","frodo","frogger","fun","gabby","garbage","garfunkel","gatsby","gemma","george","georgia","georgie","ghost","gia","giant","gibberish","gidget","gigi","gina","ginger","gino","gio","gizmo","glass","gobbledygook","goldie","goldilocks","gooch","goonie","goose","goose","gordo","gotti","grace","gracie","grayson","greta","griffin","grizzly","gucci","guinness","gump","gunner","gunther","gus","gypsy","hachi","hailey","hair","haley","halo","hamilton","hammer","hana","hand","hands","hank","hanky-panky","hannah","happy","harlem","harley","harlow","harper","harry","harvey","hazel","head","heart","heidi","hendrix","hennessy","henry","herbie","hercules","hero","hershey","highjinks","hiro","hobbes","hogwash","hokey-pokey","holly","homer","homer","honey","honeycomb","honker","hooey","hope","hornswoggle","horseapples","horsefeathers","horseplay","horsepuckey","house","huddles","hudson","hugger","huggies","hugginkiss","hugo","hulk","humphrey","hunter","hunter","ice","ick","iggy","ike","impropriety","india","indiana","indie","indy","iris","isabella","isabelle","isis","ivy","izzy","jabber","jack","jackie","jackson","jacob","jada","jade","jake","james","jameson","jamie","jammies","jane","jasmine","jasper","java","jax","jaxx","jay","jazz","jazzy","jeans","jelly","jenny","jerry","jersey","jesse","jessie","jet","jeter","jezebel","jiggery-pokery","jimmy","jinx","jj","joe","joey","johnny","jojo","jordan","josie","joy","julie","juliet","julius","june","junior","junior","juniper","junk","juno","kai","kaiser","kali","kane","katie","kato","kaya","kayla","keiko","kelly","kenny","khloe","kid","kiki","kilo","king","king","kingston","kira","kirby","kitty","kiwi","knife","knight","knope","kobe","kobi","koda","kodi","kody","koko","kona","kuma","kylie","lacey","lacy","lady","laika","laila","lala","lala","lana","layla","leg","legs","leia","leila","lenny","leo","leonardo","leonidas","leroy","less","levi","lexi","lexie","lexington","lexy","liam","libby","lighter","lil","lila","lilah","lili","lilly","lilo","lily","lincoln","linda","linus","lips","little","lizzie","lizzy","loaf","lobo","logan","loki","lola","lolita","london","lou","louie","louis","louise","lovegood","luca","lucas","lucille","lucky","lucy","luigi","luka","luke","lula","lulu","luna","lunacy","lupe","lyla","mabel","mac","mac","macaroni","macho","mack","macy","maddie","maddy","madison","maggie","magic","magnet","maisie","maisy","major","maker","malarkey","mama","mandy","mango","manny","map","maple","marcel","marco","marcus","marge","mario","marley","marshall","marshmallow","martin","marty","marvin","mary","mason","matilda","maui","maverick","max","maxi","maxie","maximus","maxine","maxwell","maxx","maya","mcflip","mcgee","meatball","meeko","melo","melody","memphis","merlin","mia","mickey","midnight","mika","mike","mikey","mila","miles","miley","millie","milly","milo","mimi","mindy","mini","minnie","mirror","misha","mishka","mishmash","miso","miss","missy","mister","misty","mittens","mitts","mo","moby","mocha","mochi","moe","mojo","mollie","molly","momo","mona","money","monte","monty","mookie","moose","mop","morgan","moses","moves","moxie","mr","mr.","muck","muffin","muffin","muffin","muffins","mug","mugsy","mumbo-jumbo","munchkin","muneca","murphy","murray","mustache","mya","mylo","nacho","nala","name","nana","napoleon","nash","natasha","nathan","neck","nellie","nelly","nemo","nena","nene","neo","nick","nicky","nico","nigel","nikita","nikki","nikko","niko","nina","nino","noah","noel","noggin","nola","noodle","noodle","noodles","nora","norman","not","nova","nugget","nut","nyla","oakley","obi","odie","odin","olive","oliver","olivia","ollie","onyx","ophelia","opie","oreo","orion","oscar","oskar","oso","otis","otto","owen","ozzie","ozzy","pablo","pablo","paco","painter","paisley","pancho","panda","pants","papi","paris","parker","patches","paulie","paw","paws","peaches","peanut","pearl","pebbles","peeper","peepers","peggy","peluche","penelope","penny","pepe","pepper","pepsi","percy","perla","pete","peter","petey","petunia","phoebe","phoenix","picker","pickle","pickles","pie","pierre","piffle","piggy","pinky","pip","piper","pippa","pippin","pixie","pj","pluto","polly","polo","pony","poochie","pookie","popcorn","popeye","poppy","poppycock","poppycock","pork","porter","prattle","precious","presley","preston","prince","princess","puck","puffy","pumpkin","punts","puppy","quaker","queen","queenie","quincy","quinn","racer","raider","ralph","ralphie","rambo","ranger","ranger","rapunzel","rascal","raspberry","rat","raven","red","reese","reeses","refuse","reggie","remi","remington","remy","rex","ricky","rico","rider","riffraff","rigmarole","ringo","rio","ripley","rita","river","robber","robin","rocco","rock","rocket","rocko","rocky","roger","romeo","roo","rooster","rory","rosco","roscoe","rose","rosie","roxanne","roxie","roxy","roy","rubbish","rubble","ruby","rudy","rufio","rufus","rug","rugby","rummy","runner","rupert","russell","rusty","ryder","sable","sabrina","sadie","sage","sailor","sailor","sally","sam","samantha","sammi","sammie","sammy","sampson","samson","sandy","sara","sarah","sarge","sasha","sassafras","sassy","savannah","sawyer","scarlet","scarlett","schnozz","scooby","scooter","scotty","scout","scrappy","scrubs","scruffy","seamus","sebastian","shadow","shaggy","shakira","shane","shayna","shea","sheba","sheila","shelby","shell","shenanigans","sherlock","sherman","shiloh","shiro","shoes","shorty","sidney","sienna","silliness","simba","simon","sir","skipper","skippy","skittles","skull","sky","skye","skylar","skyler","slacker","smarts","smokey","snickerdoodle","snickers","snickers","snoop","snoopy","snoopy","snow","snowball","snowflake","snowy","snuggler","snuggles","socks","sofia","sofie","sonny","sookie","sophia","sophie","spanky","sparkle","sparky","spartacus","spencer","spike","spongebob","spoon","spot","spring","spud","stanley","star","starbux","stella","stevie","stewie","stick","stinko","stitch","storm","strumpet","style","sugar","suki","summer","sunny","sunshine","sushi","susie","suzie","suzy","swan","sweet","sweetie","sydney","tackles","taco","taco","taffy","tail","tallulah","tammy","tango","tank","tank","tara","tart","tasha","taylor","taz","teddy","teeth","terry","tess","tessa","theo","theodore","thief","thomas","thor","thunder","ticker","tickler","tiffany","tiger","tigger","tiki","time","timmy","tina","tinkerbell","tino","tiny","titan","tito","tj","tobey","tobi","toby","toe","toes","tomfoolery","tommy","tony","toodles","toots","tootsie","toto","trap","trapper","trash","travis","trevor","tripe","trixie","trooper","trouble","troy","truffle","truman","tucker","twaddle","twin","twinkie","twinkie","ty","tyler","tyson","uselessness","vader","valentina","valentino","vanilla","venus","victoria","vinny","violet","vito","waffles","waffles","wallace","wally","walter","watson","wednesday","wendy","whiskey","wilbur","wiley","willie","willow","willy","wilson","winnie","winston","winter","wire","wizzer","wolfgang","wolfie","wonka","woody","wrecked","wrench","wrigley","wyatt","xena","xiao","yankee","yoda","yogi","yoshi","yoyo","yuki","zachary","zack","zara","zeke","zelda","zena","zero","zeus","ziggy","zoe","zoey","zombie","zooey","zorro","avocado","boba","catboy","doggo","eggnog","fangirl","goblin","hotsauce","internet","jam","kisses","lemonade","magpie","naptime","omelette","podcast","quinoa","robot","steampunk","tummyache","underwear","vintage","witchy","xylophone","yarrow","zipper","onesie","throuple","quad shot","fiver","sevenescence","eightober","ninetails"];static places=[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Anaheim",abbreviation:"ANA"},{name:"Acadia",abbreviation:"AC"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"Asgard",abbreviation:"ASG"},{name:"Atlantis",abbreviation:"ATL"},{name:"Austin",abbreviation:"AUS"},{name:"Avalon",abbreviation:"AVA"},{name:"Baltimore",abbreviation:"BAL"},{name:"Boston",abbreviation:"BOS"},{name:"Breckenridge",abbreviation:"BREC"},{name:"Brooklyn",abbreviation:"BKN"},{name:"Buffalo",abbreviation:"BUF"},{name:"California",abbreviation:"CA"},{name:"Canada",abbreviation:"CAN"},{name:"Carolina",abbreviation:"CAR"},{name:"Charleston",abbreviation:"CHAS"},{name:"Charlotte",abbreviation:"CLT"},{name:"Chicago",abbreviation:"CHI"},{name:"Cincinnati",abbreviation:"CIN"},{name:"Ciudad de México",abbreviation:"CDMX"},{name:"Cleveland",abbreviation:"CLE"},{name:"Colorado",abbreviation:"CO"},{name:"Columbus",abbreviation:"CLB"},{name:"Connecticut",abbreviation:"CT"},{name:"Core",abbreviation:"CORE"},{name:"Dallas",abbreviation:"DAL"},{name:"Death Valley",abbreviation:"DV"},{name:"Delaware",abbreviation:"DE"},{name:"Denver",abbreviation:"DEN"},{name:"Detroit",abbreviation:"DET"},{name:"Edmonton",abbreviation:"EDM"},{name:"El Dorado",abbreviation:"ELD"},{name:"Elysium",abbreviation:"ELY"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Golden State",abbreviation:"GS"},{name:"Green Bay",abbreviation:"GB"},{name:"Hades",abbreviation:"HDS"},{name:"Hartford",abbreviation:"HFD"},{name:"Hawaii",abbreviation:"HI"},{name:"Hellmouth",abbreviation:"HELL"},{name:"Houston",abbreviation:"HOU"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Indianapolis",abbreviation:"IND"},{name:"Iowa",abbreviation:"IA"},{name:"Jacksonville",abbreviation:"JAX"},{name:"Joshua Tree",abbreviation:"JT"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Las Vegas",abbreviation:"LV"},{name:"Lemuria",abbreviation:"LEM"},{name:"London",abbreviation:"LON"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Mammoth Cave",abbreviation:"MC"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Memphis",abbreviation:"MEM"},{name:"Miami",abbreviation:"MIA"},{name:"Michigan",abbreviation:"MI"},{name:"Milwaukee",abbreviation:"MIL"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Montreal",abbreviation:"MTL"},{name:"Nashville",abbreviation:"NSH"},{name:"Nebraska",abbreviation:"NEB"},{name:"Nevada",abbreviation:"NV"},{name:"New England",abbreviation:"NE"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New Orleans",abbreviation:"NOLA"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Oakland",abbreviation:"OAK"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Olympus",abbreviation:"OLY"},{name:"Oregon",abbreviation:"OR"},{name:"Orlando",abbreviation:"ORL"},{name:"Ottawa",abbreviation:"OTT"},{name:"Pangea",abbreviation:"PAN"},{name:"Paris",abbreviation:"PAR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Philly",abbreviation:"PHI"},{name:"Phoenix",abbreviation:"PHX"},{name:"Pittsburgh",abbreviation:"PIT"},{name:"Portland",abbreviation:"POR"},{name:"Quebec",abbreviation:"QUE"},{name:"Rhode Island",abbreviation:"RI"},{name:"Sacramento",abbreviation:"SAC"},{name:"San Antonio",abbreviation:"SA"},{name:"San Diego",abbreviation:"SD"},{name:"San Francisco",abbreviation:"SF"},{name:"San Jose",abbreviation:"SJ"},{name:"Seattle",abbreviation:"SEA"},{name:"Shangri-La",abbreviation:"SHL"},{name:"South Carolina",abbreviation:"SC"},{name:"St. Louis",abbreviation:"STL"},{name:"Tampa Bay",abbreviation:"TB"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Tokyo",abbreviation:"TKO"},{name:"Toronto",abbreviation:"TOR"},{name:"Utah",abbreviation:"UT"},{name:"Valhalla",abbreviation:"VAL"},{name:"Vancouver",abbreviation:"VAN"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington, D.C.",abbreviation:"DC"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Winnipeg",abbreviation:"WPG"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"},{name:"Xanadu",abbreviation:"XAN"},{name:"Yellowstone",abbreviation:"YELL"}];static teamNameList=["Aardvarks","Abnormalities","Absolutists","Absurd","Accidentals","Accountants","Acids","Acres","Action","Actors","Actually","Actuaries","Adders","Adjudicators","Adventure","Afters","Agents","Agile","Airline Pilots","Algae","Alkalis","Allergies","Alligators","Alpacas","Alumni","Ambience","Amphibians","Ancestors","Anchors","Ancients","Anglers","Animators","Anime","Answerers","Anteaters","Antelopes","Anthropologists","Antiques","Antlers","Ants","Apocrypha","Arbitrators","Archeologists","Archers","Architects","Armadillos","Armors","Aroma","Art Teachers","Arthurs","Artists","Assemblers","Astronomers","Athletes","Attendants","Auditors","Auks","Australians","Authors","Avatars","Avenues","Avocados","Axes","Axioms","Babysitters","Baboons","Backers","Bacteria","Bad Guys","Bad Habits","Badgers","Bagpipers","Bailiffs","Bakers","Ballers","Bangers","Banjos","Bankers","Barbarians","Barbeques","Barbers","Bards","Barkers","Barracudas","Barristers","Bass","Bats","Bazaars","Beakers","Bears","Beavers","Beepers","Bees","Beetles","Believers","Bell Curves","Bellhops","Bendables","Benders","Betrothed","Beyond","Bffs","Bicycles","Bidders","Bikers","Biographers","Birds","Bisons","Biters","Bitterns","Bizarre","Blackbirds","Blasters","Blenders","Blinkers","Blisters","Bloodhounds","Bloomers","Blotters","Blowers","Boars","Boaters","Boba","Bobolinks","Boilermakers","Bold","Bonkers","Bongos","Bookkeepers","Boomers","Bots","Boxers","Boxes","Breakers","Breath Mints","Brickmasons","Bros","Buffalos","Bugs","Bullfinches","Bullocks","Bulls","Burgers","Burlesque","Bus Drivers","Butchers","Butterflies","Buyers","Buzzards","Buzzers","Cabinetmakers","Cacti","Caesars","Callers","Camels","Canaries","Candies","Canons","Capers","Capons","Capuchins","Capybaras","Cardboard","Cardinals","Carnivores","Carp","Carpenters","Cartographers","Cashiers","Casual","Catboys","Catchers","Caterpillars","Cattle","Caviars","Cedars","Cellars","Censors","Centaurs","Cerebral","Chambers","Chameleons","Chapters","Charters","Chauffeurs","Cheapers","Checkers","Cheerleaders","Cheesers","Cheetahs","Chefs","Chemists","Chic","Chickadees","Chickens","Chiffon","Children","Chimpanzees","Chinchillas","Chipmunks","Chiropractors","Choirs","Choreographers","Cicadas","Civets","Clams","Cleaners","Clerics","Clovers","Clusters","Cobblers","Cobras","Cockroaches","Coders","Coffees","Cold","Collars","Composers","Computers","Concertos","Concierges","Concise","Condors","Confetti","Confusion","Conservatories","Conspiracy","Convergence","Cooks","Coots","Coppers","Corduroy","Cormorants","Cosplayers","Cougars","Counselors","Couriers","Cows","Coyotes","Cozy","Crabs","Cranes","Crashers","Craters","Crickets","Critters","Crocodiles","Crows","Crude","Crusaders","Crustaceans","Cubes","Cupcakes","Curators","Curlews","Cursors","Cynics","Daddies","Daggers","Daisies","Dale","Dalmations","Dancers","Dandies","Dappers","Dark Comedy","Datas","Daughters","Decembers","Deer","Delicates","Demons","Denim","Dentists","Desire","Detectives","Detours","Dice","Dictators","Dietitians","Diners","Dingos","Dinosaurs","Dippers","Directors","Dishes","Dishwashers","Dismal","Dispatchers","Doctors","TheFlightlessFowls","Dogs","Dollars","Donkeys","Doodles","Dorsal Fins","Doves","Dozers","Drafters","Drapers","Dressmakers","Drivers","Dromedaries","Droolers","Droppers","Druids","Drummers","Dryers","Duckers","Ducks","Dyers","Dynamic","Dystopia","Eagles","Eclairs","Eclectic","Economists","Editors","Eels","Eggnogs","Eggplants","Eggs","Elders","Electricians","Elephants","Elevators","Elk","Elves","Embellishment","Embers","Emergence","Emphasis","Emus","Enders","Engineers","Epic","Epochs","Equations","Equator","Errata","Etchers","Eternal","Evidence","Evokers","Ewes","Excavators","Exclusivity","Exponents","Extinction","Extra Large","Fab","Factors","Fakers","Fantasy","Fathers","Favors","Feels","Feet","Felt","Feral","Ferrets","Ferriers","Fevers","Fibbers","Fibres","Fiction","Fighters","Film Noir","Finches","Finers","Fireballs","Firefighters","Fish","Fishes","Fivers","Fixers","Flamingoes","Flannel","Flautists","Flavors","Fleas","Fletchers","Flexables","Flexers","Flickers","Flies","Floppers","Flowers","Fluff","Forever","Fossil Fuels","Fowlers","Foxes","Fractures","Friars","Fridays","Froggers","Frogs","Frost","Fungi","Furbies","Furries","Futures","Gamers","Garages","Gators","Gaussians","Gazelles","Geese","Geezers","Geometry","Georgias","Gestures","Giggles","Gila Monsters","Giraffes","Givers","Glaciers","Glamours","Glee","Gliders","Glitter","Glovers","Gnats","Gnus","Goats","Goblins","Goers","Goldfinches","Golfers","Goners","Gophers","Goshawks","Governors","Grackles","Graffiti","Grandparents","Grasshoppers","Greyhounds","Grits","Grizzly Bears","Groove","Ground Hogs","Growers","Gruff","Grumps","Guinea Pigs","Guitars","Gulls","Gunners","Hackers","Haggard","Halves","Hamsters","Handsomes","Hangars","Haptics","Harbors","Hares","Hatters","Haunted Dolls","Hawks","Hazard","Heartthrobs","Hedgehogs","Heels","Heir Apparents","Herbivores","Heroes","Herons","Hikers","Himalayas","Hippies","Hippopotamuses","Hippos","Hoers","Hogs","Homeschoolers","Hooves","Hoppers","Hornets","Horrible","Horrors","Horses","Hotsauce","Howlers","Huggers","Hummingbirds","Humongous","Humors","Hunger","Hunters","Hustle","Hyenas","Hypotheses","Ibexes","Idealists","Iguanas","Illustrators","Immortals","Impalas","Indoor Cats","Inertia","Influencers","Insects","Inspectors","Instructors","Internets","Intruders","Invaders","Jackals","Jaguars","Jailers","Jams","Janitors","Jays","Jazz Hands","Jimbos","Joggers","Jokers","Judges","Jugglers","Juncos","Juniors","Junipers","Jupiters","Jurors","Kangaroos","Kisses","Knives","Koalas","Kooks","Lambs","Lapwings","Larks","Larvae","Laters","Laundry","Lavenders","Lawyers","Layers","Leeches","Legendary","Legislators","Lemmings","Lemonades","Lemurs","Leopards","Lethal","Levers","Liars","Librarians","Lifeguards","Lift","Literally","Livers","Lizards","Llamas","Loathing","Lobsters","Locksmiths","Locusts","Losers","Lovers","Lumberjacks","Luster","Lynxes","Magic","Magpies","Makers","Mallards","Mammals","Mandrills","Mappers","Marmosets","Martens","Massive","Masters","Math","Matrix","Mayors","Mean","Mechanics","Memoirs","Memories","Messes","Metaphors","Mice","Middleschoolers","Millennials","Millers","Mindfulness","Miners","Minimalists","Minions","Minks","Minnows","Mirrors","Mites","Mixers","Mockingbirds","Models","Moist Talkers","Molars","Moles","Mollusks","Momentum","Monarchs","Mongooses","Monitors","Monkeys","Monsters","Moonbeams","Moose","Mops","Morticians","Mothers","Moths","Motors","Mountain Goats","Mouses","Mowers","Mudhens","Mules","Musicians","Muskrats","Mustangs","Mynah Birds","Mystery","Myth","Naptime","Naysayers","Nebulous","Nectars","Neighbors","Newts","Nibbles","Nifty","Nightingales","Nocturnals","Northerners","Novembers","Nuclei","Nudists","Occult","Ocelots","Octobers","Octoroks","Offers","Omelettes","Omniscience","Onesies","Opossums","Opticians","Optimists","Optometrists","Orangutans","Orderlies","Orthodontists","Orthotists","Oryxes","Others","Otters","Outfielders","Owls","Oxen","Oysters","Pagers","Painters","Paladins","Pallbearers","Pandas","Pantsuits","Papers","Parakeets","Paralegals","Paramedics","Parentheses","Parlors","Parrots","Pastors","Patches","Pavers","Paws","Payers","Peacocks","Peddlers","Pediatricians","Pedicurists","Pelicans","Penguins","People","Pep","Pewters","Pharmacists","Photographers","Physicians","Piers","Pies","Pigeons","Pigs","Pillagers","Pillars","Pine Barrens","Pipers","Pizzas","Plasterers","Platypuses","Plumbers","Plushies","Plyers","Podcast","Podiatrists","Poets","Pokemón","Pokers","Polar Bears","Polecats","Pop","Poplars","Porcupines","Porpoises","Possibilities","Postmasters","Potatoes","Power","Pragmatists","Prairie Dogs","Precision","Presidents","Primates","Probability","Procedurals","Proctors","Producers","Proofreaders","Propoganda","Psychics","Ptarmigans","Pulsars","Pumas","Puppies","Purists","Purveyors","Pythons","Quadcopters","Quakers","Quasars","Queens","Quibbles","Quinoa","Quirks","Quizzes","Rabbits","Raccoons","Racers","Radar","Radicals","Radii","Rafters","Rainclouds","Rakers","Ramps","Ranchers","Randomness","Rangers","Rats","Rattlesnakes","Ravagers","Razors","Realists","Realtors","Recyclables","Referees","Reindeer","Remote Controls","Reporters","Reptiles","Reruns","Rhinoceroses","Riders","Rippers","Robins","Robots","Rodents","Roebucks","Roguelikes","Rooks","Roosters","Ropers","Ruffs","Rulers","Rumours","Runners","Sagas","Sailors","Salamanders","Saltines","Samplers","Sandpipers","Sarcasm","Sardines","Sawyers","Scarves","Schoolkids","Sci-Fi","Science","Scissors","Scorpions","Scrum","Seabirds","Seals","Sectors","Seeders","Sensors","Septembers","Several","Sewers","Shampooers","Sharps","Sheep","Sheldrakes","Shenanigans","Shoe Thieves","Showers","Shrews","Shrimp","Silk","Silver Foxes","Sisters","Sitars","Skeptics","Skunks","Skylarks","Slackers","Slappers","Slayers","Sliders","Slimes","Sloths","Slugs","Smartphones","Snails","Snakes","Snark","Sneakers","Snugglers","Soldiers","Solos","Sonars","Sorcerers","Spagetti","Sparkles","Sparrows","Speakers","Spiders","Spies","Spitters","Spoilers","Sponsors","Sprinkles","Squares","Squid","Squirrels","Staccato","Staff","Starfish","Starlings","Statisticians","Steaks","Steamboats","Steamfitters","Steampunks","Stickers","Stimuli","Stingrays","Stoats","Stomachs","Stonemasons","Storks","Stormchasers","Streamers","Striders","Strikers","Studios","Stuff","Suburbs","Suitors","Sulfurs","Sum","Summers","Sunbeams","Supers","Surfers","Surgeons","Surveyors","Suspense","Swallows","Swans","Swashbucklers","Swifts","Swine","Swords","Syllabi","Symbols","Tables","Tailors","Tails","Takers","Tangents","Tanners","Tapirs","Tartars","Taters","Teachers","Teeth","Telemarketers","Tenors","Termites","Terriers","Terrors","Themes","Thieves","Ticks","Tigers","Tiggers","Timbers","Tinkers","Titles","Toads","Tomatoes","Toners","Tortoises","Toxic","Tractors","Traders","Translators","Trappers","Tremors","Trimmers","Triumph","Trolls","Trouble","Truckers","Trunks","Tubes","Tummyaches","Tuners","Tunnels","Turkeys","Turtles","Tutors","Tweed","Tweeters","Twitchers","Typists","Ulcers","Umpires","Undertakers","Unexpected","Unlimited Tacos","Upholsterers","Urban Legends","Ushers","Utopians","Vampires","Variance","Vectors","Velvet","Venn Diagrams","Verbatim","Vespers","Veterinarians","Vibes","Vibrance","Victors","Videographers","Vignettes","Vigors","Villans","Vipers","Viral","Visionaries","Visiters","Visors","Voters","Vultures","Waders","Waffles","Waitresses","Walkers","Walruses","Warlocks","Warthogs","Wasps","Weasels","Weavers","Weighers","Welders","Westerns","Whales","Wheelers","Whimsy","Whisperers","Whodunit","Whoppers","Widgeons","Wielders","Wild Wings","Wildcats","Wilders","Wincers","Windsors","Winkers","Winners","Winters","Witches","Withers","Wives","Wizards","Wolves","Wombats","Wonders","Woodchucks","Woodcocks","Woodpeckers","Woodworkers","Woofers","Workers","Worms","Wow","Wowsers","Wrens","Writers","Xylophones","Yakkers","Yaks","Yardmasters","Yards","Yodlers","Yonders","Youngsters","Yowlers","Zappers","Zebras","Zeros","Zest","Zigzags","Zingers","Zippers","Zithers","Zombies","Zoologists","Zoomies","Zoos","Wheels","Axles","Pulleys","Inclined Planes","Wedges","Screws","Mitochondria","Ribosomes","Nausea","Qualms","Ego","Superego","Apathy","Blur","Infamy","Pride","Respect","Dignity","Human Rights","Amnesia","Destruction","Smash","Havoc","Subversion","Blaze","Gold","Jade","Lace","Nitro","Towers","Sirens","Turbo","Inferno","Storm","Rage","Voltage","Resistance","Amplitude","Phantoms","Rampage","Fury","Aroma","Atomic","Batteries","Cohesion","Combustion","Corrosion","Crystals","Electrons","Enzymes","Extraction","Fractions","Free Radicals","Frequency","Kinetics","Nobility","Osmosis","Pressure","Protons","Quarks","Radioactive","Skeletons","Solutions","Substitutes","Time","Temperature","Vapor","Volume","X-rays","Amnesia","Symposia","Aria","Mania","Trivia"];static webSafeEmojiCodes=["⚽","⚾","⛳","✌","✨","❤","🌋","🌞","🌮","🌰","🌱","🌲","🌳","🌴","🌵","🌷","🌸","🌹","🌺","🌻","🌼","🌿","🍀","🍁","🍂","🍃","🍄","🍇","🍈","🍉","🍊","🍋","🍌","🍍","🍎","🍏","🍐","🍑","🍒","🍓","🍔","🍕","🍖","🍗","🍗","🍘","🍙","🍚","🍛","🍜","🍝","🍞","🍟","🍠","🍡","🍢","🍣","🍤","🍥","🍦","🍧","🍨","🍩","🍪","🍫","🍬","🍬","🍭","🍮","🍯","🍰","🍱","🍲","🍳","🍴","🍵","🍶","🍷","🍸","🍹","🍺","🍻","🍼","🍽","🎣","🎭","🎮","🎯","🎰","🎱","🎲","🎳","🎴","🎸","🎽","🎾","🎿","🏀","🏁","🏂","🏃","🏄","🏅","🏆","🏇","🏋","🏝","🏰","🐅","🐇","🐈","🐉","🐊","🐋","🐌","🐌","🐍","🐎","🐏","🐐","🐑","🐒","🐓","🐔","🐕","🐖","🐗","🐘","🐙","🐚","🐛","🐜","🐝","🐞","🐟","🐠","🐡","🐢","🐣","🐤","🐥","🐦","🐧","🐨","🐩","🐪","🐫","🐬","🐭","🐮","🐯","🐰","🐱","🐲","🐳","🐴","🐵","🐶","🐷","🐸","🐹","🐺","🐻","🐼","🐾","🐿","👀","👁","👂","👃","👄","👅","👆","👇","👈","👉","👊","👋","👌","👍","👎","👐","👟","👿","💀","💋","💐","💙","💚","💛","💜","💝","💞","💟","💮","💯","💻","💼","💽","💾","💿","📀","📁","📂","📃","📄","📅","📆","📇","📈","📉","📊","📋","📌","📍","📎","📏","📐","📑","📒","📓","📔","📕","📖","📗","📘","📙","📚","📛","📜","📝","📞","📟","📠","📡","📢","📣","📤","📥","📦","📧","📨","📩","📪","📱","🔥","🔱","🕵","🗣","🗽","🗿","😈","🚀","🚁","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚋","🚌","🚍","🚎","🚏","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚤","🛠","🤠","🤬","🥀","🥝","🥩","🥭","🥯","🥳","🦀","🧡","🧢","🧣","🧤","🧥","🧦","🧧","🧩"];static profileEmojis=["👶","🧒","👦","👧","🧑","👱","👨","🧔","🧔‍♀️","🧔‍♂️","👨‍🦰","👨‍🦱","👨‍🦳","👨‍🦲","👩","👩‍🦰","🧑‍🦰","👩‍🦱","🧑‍🦱","👩‍🦳","🧑‍🦳","👩‍🦲","🧑‍🦲","👱‍♀️","👱‍♂️","🧓","👴","👵","🙍","🙍‍♂️","🙍‍♀️","🙎","🙎‍♂️","🙎‍♀️","🙅","🙅‍♂️","🙅‍♀️","🙆","🙆‍♂️","🙆‍♀️","💁","💁‍♂️","💁‍♀️","🙋","🙋‍♂️","🙋‍♀️","🧏","🧏‍♂️","🧏‍♀️","🙇","🙇‍♂️","🙇‍♀️","🤦","🤦‍♂️","🤦‍♀️","🤷","🤷‍♂️","🤷‍♀️","🧑‍⚕️","👨‍⚕️","👩‍⚕️","🧑‍🎓","👨‍🎓","👩‍🎓","🧑‍🏫","👨‍🏫","👩‍🏫","🧑‍⚖️","👨‍⚖️","👩‍⚖️","🧑‍🌾","👨‍🌾","👩‍🌾","🧑‍🍳","👨‍🍳","👩‍🍳","🧑‍🔧","👨‍🔧","👩‍🔧","🧑‍🏭","👨‍🏭","👩‍🏭","🧑‍💼","👨‍💼","👩‍💼","🧑‍🔬","👨‍🔬","👩‍🔬","🧑‍💻","👨‍💻","👩‍💻","🧑‍🎤","👨‍🎤","👩‍🎤","🧑‍🎨","👨‍🎨","👩‍🎨","🧑‍✈️","👨‍✈️","👩‍✈️","🧑‍🚀","👨‍🚀","👩‍🚀","🧑‍🚒","👨‍🚒","👩‍🚒","🕵","🕵‍♂️","🕵‍♀️","💂","💂‍♂️","💂‍♀️","🥷","👷","👷‍♂️","👷‍♀️","🫅","🤴","👸","👳","👳‍♂️","👳‍♀️","👲","🧕","🤵","🤵‍♂️","🤵‍♀️","👰","👰‍♂️","👰‍♀️","🫄","🫃","🤰","🧑‍🍼","👨‍🍼","👩‍🍼","🤱","👼","🎅","🤶","🧑‍🎄","🦸","🦸‍♂️","🦸‍♀️","🦹","🦹‍♂️","🦹‍♀️","🧙","🧙‍♂️","🧙‍♀️","🧚","🧚‍♂️","🧚‍♀️","🧛","🧛‍♂️","🧛‍♀️","🧜","🧜‍♂️","🧜‍♀️","🧝","🧝‍♂️","🧝‍♀️","💆","💆‍♂️","💆‍♀️","💇","💇‍♂️","💇‍♀️","🚶","🚶‍♂️","🚶‍♀️","🧍","🧍‍♂️","🧍‍♀️","🧎","🧎‍♂️","🧎‍♀️","🧑‍🦯","👨‍🦯","👩‍🦯","🧑‍🦼","👨‍🦼","👩‍🦼","🧑‍🦽","👨‍🦽","👩‍🦽","🏃","🏃‍♂️","🏃‍♀️","🚶‍➡️","🚶‍♀️‍➡️","🚶‍♂️‍➡️","🧎‍➡️","🧎‍♀️‍➡️","🧎‍♂️‍➡️","🧑‍🦯‍➡️","👨‍🦯‍➡️","👩‍🦯‍➡️","🧑‍🦼‍➡️","👨‍🦼‍➡️","👩‍🦼‍➡️","🧑‍🦽‍➡️","👨‍🦽‍➡️","👩‍🦽‍➡️","🏃‍➡️","🏃‍♀️‍➡️","🏃‍♂️‍➡️","💃","🕺","🕴","🧖","🧖‍♂️","🧖‍♀️","🧗","🧗‍♂️","🧗‍♀️","🏇","🏂","🏌","🏌‍♂️","🏌‍♀️","🏄","🏄‍♂️","🏄‍♀️","🚣","🚣‍♂️","🚣‍♀️","🏊","🏊‍♂️","🏊‍♀️","⛹","⛹‍♂️","⛹‍♀️","🏋","🏋‍♂️","🏋‍♀️","🚴","🚴‍♂️","🚴‍♀️","🚵","🚵‍♂️","🚵‍♀️","🤸","🤸‍♂️","🤸‍♀️","🤽","🤽‍♂️","🤽‍♀️","🤾","🤾‍♂️","🤾‍♀️","🤹","🤹‍♂️","🤹‍♀️","🧘","🧘‍♂️","🧘‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏽","🧒🏽","👦🏽","👧🏽","🧑🏽","👱🏽","👨🏽","🧔🏽","🧔🏽‍♀️","🧔🏽‍♂️","👨🏽‍🦰","👨🏽‍🦱","👨🏽‍🦳","👨🏽‍🦲","👩🏽","👩🏽‍🦰","🧑🏽‍🦰","👩🏽‍🦱","🧑🏽‍🦱","👩🏽‍🦳","🧑🏽‍🦳","👩🏽‍🦲","🧑🏽‍🦲","👱🏽‍♀️","👱🏽‍♂️","🧓🏽","👴🏽","👵🏽","🙍🏽","🙍🏽‍♂️","🙍🏽‍♀️","🙎🏽","🙎🏽‍♂️","🙎🏽‍♀️","🙅🏽","🙅🏽‍♂️","🙅🏽‍♀️","🙆🏽","🙆🏽‍♂️","🙆🏽‍♀️","💁🏽","💁🏽‍♂️","💁🏽‍♀️","🙋🏽","🙋🏽‍♂️","🙋🏽‍♀️","🧏🏽","🧏🏽‍♂️","🧏🏽‍♀️","🙇🏽","🙇🏽‍♂️","🙇🏽‍♀️","🤦🏽","🤦🏽‍♂️","🤦🏽‍♀️","🤷🏽","🤷🏽‍♂️","🤷🏽‍♀️","🧑🏽‍⚕️","👨🏽‍⚕️","👩🏽‍⚕️","🧑🏽‍🎓","👨🏽‍🎓","👩🏽‍🎓","🧑🏽‍🏫","👨🏽‍🏫","👩🏽‍🏫","🧑🏽‍⚖️","👨🏽‍⚖️","👩🏽‍⚖️","🧑🏽‍🌾","👨🏽‍🌾","👩🏽‍🌾","🧑🏽‍🍳","👨🏽‍🍳","👩🏽‍🍳","🧑🏽‍🔧","👨🏽‍🔧","👩🏽‍🔧","🧑🏽‍🏭","👨🏽‍🏭","👩🏽‍🏭","🧑🏽‍💼","👨🏽‍💼","👩🏽‍💼","🧑🏽‍🔬","👨🏽‍🔬","👩🏽‍🔬","🧑🏽‍💻","👨🏽‍💻","👩🏽‍💻","🧑🏽‍🎤","👨🏽‍🎤","👩🏽‍🎤","🧑🏽‍🎨","👨🏽‍🎨","👩🏽‍🎨","🧑🏽‍✈️","👨🏽‍✈️","👩🏽‍✈️","🧑🏽‍🚀","👨🏽‍🚀","👩🏽‍🚀","🧑🏽‍🚒","👨🏽‍🚒","👩🏽‍🚒","🕵🏽","🕵🏽‍♂️","🕵🏽‍♀️","💂🏽","💂🏽‍♂️","💂🏽‍♀️","🥷🏽","👷🏽","👷🏽‍♂️","👷🏽‍♀️","🫅🏽","🤴🏽","👸🏽","👳🏽","👳🏽‍♂️","👳🏽‍♀️","👲🏽","🧕🏽","🤵🏽","🤵🏽‍♂️","🤵🏽‍♀️","👰🏽","👰🏽‍♂️","👰🏽‍♀️","🫄🏽","🫃🏽","🤰🏽","🧑🏽‍🍼","👨🏽‍🍼","👩🏽‍🍼","🤱🏽","👼🏽","🎅🏽","🤶🏽","🧑🏽‍🎄","🦸🏽","🦸🏽‍♂️","🦸🏽‍♀️","🦹🏽","🦹🏽‍♂️","🦹🏽‍♀️","🧙🏽","🧙🏽‍♂️","🧙🏽‍♀️","🧚🏽","🧚🏽‍♂️","🧚🏽‍♀️","🧛🏽","🧛🏽‍♂️","🧛🏽‍♀️","🧜🏽","🧜🏽‍♂️","🧜🏽‍♀️","🧝🏽","🧝🏽‍♂️","🧝🏽‍♀️","💆🏽","💆🏽‍♂️","💆🏽‍♀️","💇🏽","💇🏽‍♂️","💇🏽‍♀️","🚶🏽","🚶🏽‍♂️","🚶🏽‍♀️","🧍🏽","🧍🏽‍♂️","🧍🏽‍♀️","🧎🏽","🧎🏽‍♂️","🧎🏽‍♀️","🧑🏽‍🦯","👨🏽‍🦯","👩🏽‍🦯","🧑🏽‍🦼","👨🏽‍🦼","👩🏽‍🦼","🧑🏽‍🦽","👨🏽‍🦽","👩🏽‍🦽","🏃🏽","🏃🏽‍♂️","🏃🏽‍♀️","🚶🏽‍➡️","🚶🏽‍♀️‍➡️","🚶🏽‍♂️‍➡️","🧎🏽‍➡️","🧎🏽‍♀️‍➡️","🧎🏽‍♂️‍➡️","🧑🏽‍🦯‍➡️","👨🏽‍🦯‍➡️","👩🏽‍🦯‍➡️","🧑🏽‍🦼‍➡️","👨🏽‍🦼‍➡️","👩🏽‍🦼‍➡️","🧑🏽‍🦽‍➡️","👨🏽‍🦽‍➡️","👩🏽‍🦽‍➡️","🏃🏽‍➡️","🏃🏽‍♀️‍➡️","🏃🏽‍♂️‍➡️","💃🏽","🕺🏽","🕴🏽","🧖🏽","🧖🏽‍♂️","🧖🏽‍♀️","🧗🏽","🧗🏽‍♂️","🧗🏽‍♀️","🏇🏽","🏂🏽","🏌🏽","🏌🏽‍♂️","🏌🏽‍♀️","🏄🏽","🏄🏽‍♂️","🏄🏽‍♀️","🚣🏽","🚣🏽‍♂️","🚣🏽‍♀️","🏊🏽","🏊🏽‍♂️","🏊🏽‍♀️","⛹🏽","⛹🏽‍♂️","⛹🏽‍♀️","🏋🏽","🏋🏽‍♂️","🏋🏽‍♀️","🚴🏽","🚴🏽‍♂️","🚴🏽‍♀️","🚵🏽","🚵🏽‍♂️","🚵🏽‍♀️","🤸🏽","🤸🏽‍♂️","🤸🏽‍♀️","🤽🏽","🤽🏽‍♂️","🤽🏽‍♀️","🤾🏽","🤾🏽‍♂️","🤾🏽‍♀️","🤹🏽","🤹🏽‍♂️","🤹🏽‍♀️","🧘🏽","🧘🏽‍♂️","🧘🏽‍♀️","👶🏿","🧒🏿","👦🏿","👧🏿","🧑🏿","👱🏿","👨🏿","🧔🏿","🧔🏿‍♀️","🧔🏿‍♂️","👨🏿‍🦰","👨🏿‍🦱","👨🏿‍🦳","👨🏿‍🦲","👩🏿","👩🏿‍🦰","🧑🏿‍🦰","👩🏿‍🦱","🧑🏿‍🦱","👩🏿‍🦳","🧑🏿‍🦳","👩🏿‍🦲","🧑🏿‍🦲","👱🏿‍♀️","👱🏿‍♂️","🧓🏿","👴🏿","👵🏿","🙍🏿","🙍🏿‍♂️","🙍🏿‍♀️","🙎🏿","🙎🏿‍♂️","🙎🏿‍♀️","🙅🏿","🙅🏿‍♂️","🙅🏿‍♀️","🙆🏿","🙆🏿‍♂️","🙆🏿‍♀️","💁🏿","💁🏿‍♂️","💁🏿‍♀️","🙋🏿","🙋🏿‍♂️","🙋🏿‍♀️","🧏🏿","🧏🏿‍♂️","🧏🏿‍♀️","🙇🏿","🙇🏿‍♂️","🙇🏿‍♀️","🤦🏿","🤦🏿‍♂️","🤦🏿‍♀️","🤷🏿","🤷🏿‍♂️","🤷🏿‍♀️","🧑🏿‍⚕️","👨🏿‍⚕️","👩🏿‍⚕️","🧑🏿‍🎓","👨🏿‍🎓","👩🏿‍🎓","🧑🏿‍🏫","👨🏿‍🏫","👩🏿‍🏫","🧑🏿‍⚖️","👨🏿‍⚖️","👩🏿‍⚖️","🧑🏿‍🌾","👨🏿‍🌾","👩🏿‍🌾","🧑🏿‍🍳","👨🏿‍🍳","👩🏿‍🍳","🧑🏿‍🔧","👨🏿‍🔧","👩🏿‍🔧","🧑🏿‍🏭","👨🏿‍🏭","👩🏿‍🏭","🧑🏿‍💼","👨🏿‍💼","👩🏿‍💼","🧑🏿‍🔬","👨🏿‍🔬","👩🏿‍🔬","🧑🏿‍💻","👨🏿‍💻","👩🏿‍💻","🧑🏿‍🎤","👨🏿‍🎤","👩🏿‍🎤","🧑🏿‍🎨","👨🏿‍🎨","👩🏿‍🎨","🧑🏿‍✈️","👨🏿‍✈️","👩🏿‍✈️","🧑🏿‍🚀","👨🏿‍🚀","👩🏿‍🚀","🧑🏿‍🚒","👨🏿‍🚒","👩🏿‍🚒","🕵🏿","🕵🏿‍♂️","🕵🏿‍♀️","💂🏿","💂🏿‍♂️","💂🏿‍♀️","🥷🏿","👷🏿","👷🏿‍♂️","👷🏿‍♀️","🫅🏿","🤴🏿","👸🏿","👳🏿","👳🏿‍♂️","👳🏿‍♀️","👲🏿","🧕🏿","🤵🏿","🤵🏿‍♂️","🤵🏿‍♀️","👰🏿","👰🏿‍♂️","👰🏿‍♀️","🫄🏿","🫃🏿","🤰🏿","🧑🏿‍🍼","👨🏿‍🍼","👩🏿‍🍼","🤱🏿","👼🏿","🎅🏿","🤶🏿","🧑🏿‍🎄","🦸🏿","🦸🏿‍♂️","🦸🏿‍♀️","🦹🏿","🦹🏿‍♂️","🦹🏿‍♀️","🧙🏿","🧙🏿‍♂️","🧙🏿‍♀️","🧚🏿","🧚🏿‍♂️","🧚🏿‍♀️","🧛🏿","🧛🏿‍♂️","🧛🏿‍♀️","🧜🏿","🧜🏿‍♂️","🧜🏿‍♀️","🧝🏿","🧝🏿‍♂️","🧝🏿‍♀️","💆🏿","💆🏿‍♂️","💆🏿‍♀️","💇🏿","💇🏿‍♂️","💇🏿‍♀️","🚶🏿","🚶🏿‍♂️","🚶🏿‍♀️","🧍🏿","🧍🏿‍♂️","🧍🏿‍♀️","🧎🏿","🧎🏿‍♂️","🧎🏿‍♀️","🧑🏿‍🦯","👨🏿‍🦯","👩🏿‍🦯","🧑🏿‍🦼","👨🏿‍🦼","👩🏿‍🦼","🧑🏿‍🦽","👨🏿‍🦽","👩🏿‍🦽","🏃🏿","🏃🏿‍♂️","🏃🏿‍♀️","🚶🏿‍➡️","🚶🏿‍♀️‍➡️","🚶🏿‍♂️‍➡️","🧎🏿‍➡️","🧎🏿‍♀️‍➡️","🧎🏿‍♂️‍➡️","🧑🏿‍🦯‍➡️","👨🏿‍🦯‍➡️","👩🏿‍🦯‍➡️","🧑🏿‍🦼‍➡️","👨🏿‍🦼‍➡️","👩🏿‍🦼‍➡️","🧑🏿‍🦽‍➡️","👨🏿‍🦽‍➡️","👩🏿‍🦽‍➡️","🏃🏿‍➡️","🏃🏿‍♀️‍➡️","🏃🏿‍♂️‍➡️","💃🏿","🕺🏿","🕴🏿","🧖🏿","🧖🏿‍♂️","🧖🏿‍♀️","🧗🏿","🧗🏿‍♂️","🧗🏿‍♀️","🏇🏿","🏂🏿","🏌🏿","🏌🏿‍♂️","🏌🏿‍♀️","🏄🏿","🏄🏿‍♂️","🏄🏿‍♀️","🚣🏿","🚣🏿‍♂️","🚣🏿‍♀️","🏊🏿","🏊🏿‍♂️","🏊🏿‍♀️","⛹🏿","⛹🏿‍♂️","⛹🏿‍♀️","🏋🏿","🏋🏿‍♂️","🏋🏿‍♀️","🚴🏿","🚴🏿‍♂️","🚴🏿‍♀️","🚵🏿","🚵🏿‍♂️","🚵🏿‍♀️","🤸🏿","🤸🏿‍♂️","🤸🏿‍♀️","🤽🏿","🤽🏿‍♂️","🤽🏿‍♀️","🤾🏿","🤾🏿‍♂️","🤾🏿‍♀️","🤹🏿","🤹🏿‍♂️","🤹🏿‍♀️","🧘🏿","🧘🏿‍♂️","🧘🏿‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏻","🧒🏻","👦🏻","👧🏻","🧑🏻","👱🏻","👨🏻","🧔🏻","🧔🏻‍♀️","🧔🏻‍♂️","👨🏻‍🦰","👨🏻‍🦱","👨🏻‍🦳","👨🏻‍🦲","👩🏻","👩🏻‍🦰","🧑🏻‍🦰","👩🏻‍🦱","🧑🏻‍🦱","👩🏻‍🦳","🧑🏻‍🦳","👩🏻‍🦲","🧑🏻‍🦲","👱🏻‍♀️","👱🏻‍♂️","🧓🏻","👴🏻","👵🏻","🙍🏻","🙍🏻‍♂️","🙍🏻‍♀️","🙎🏻","🙎🏻‍♂️","🙎🏻‍♀️","🙅🏻","🙅🏻‍♂️","🙅🏻‍♀️","🙆🏻","🙆🏻‍♂️","🙆🏻‍♀️","💁🏻","💁🏻‍♂️","💁🏻‍♀️","🙋🏻","🙋🏻‍♂️","🙋🏻‍♀️","🧏🏻","🧏🏻‍♂️","🧏🏻‍♀️","🙇🏻","🙇🏻‍♂️","🙇🏻‍♀️","🤦🏻","🤦🏻‍♂️","🤦🏻‍♀️","🤷🏻","🤷🏻‍♂️","🤷🏻‍♀️","🧑🏻‍⚕️","👨🏻‍⚕️","👩🏻‍⚕️","🧑🏻‍🎓","👨🏻‍🎓","👩🏻‍🎓","🧑🏻‍🏫","👨🏻‍🏫","👩🏻‍🏫","🧑🏻‍⚖️","👨🏻‍⚖️","👩🏻‍⚖️","🧑🏻‍🌾","👨🏻‍🌾","👩🏻‍🌾","🧑🏻‍🍳","👨🏻‍🍳","👩🏻‍🍳","🧑🏻‍🔧","👨🏻‍🔧","👩🏻‍🔧","🧑🏻‍🏭","👨🏻‍🏭","👩🏻‍🏭","🧑🏻‍💼","👨🏻‍💼","👩🏻‍💼","🧑🏻‍🔬","👨🏻‍🔬","👩🏻‍🔬","🧑🏻‍💻","👨🏻‍💻","👩🏻‍💻","🧑🏻‍🎤","👨🏻‍🎤","👩🏻‍🎤","🧑🏻‍🎨","👨🏻‍🎨","👩🏻‍🎨","🧑🏻‍✈️","👨🏻‍✈️","👩🏻‍✈️","🧑🏻‍🚀","👨🏻‍🚀","👩🏻‍🚀","🧑🏻‍🚒","👨🏻‍🚒","👩🏻‍🚒","🕵🏻","🕵🏻‍♂️","🕵🏻‍♀️","💂🏻","💂🏻‍♂️","💂🏻‍♀️","🥷🏻","👷🏻","👷🏻‍♂️","👷🏻‍♀️","🫅🏻","🤴🏻","👸🏻","👳🏻","👳🏻‍♂️","👳🏻‍♀️","👲🏻","🧕🏻","🤵🏻","🤵🏻‍♂️","🤵🏻‍♀️","👰🏻","👰🏻‍♂️","👰🏻‍♀️","🫄🏻","🫃🏻","🤰🏻","🧑🏻‍🍼","👨🏻‍🍼","👩🏻‍🍼","🤱🏻","👼🏻","🎅🏻","🤶🏻","🧑🏻‍🎄","🦸🏻","🦸🏻‍♂️","🦸🏻‍♀️","🦹🏻","🦹🏻‍♂️","🦹🏻‍♀️","🧙🏻","🧙🏻‍♂️","🧙🏻‍♀️","🧚🏻","🧚🏻‍♂️","🧚🏻‍♀️","🧛🏻","🧛🏻‍♂️","🧛🏻‍♀️","🧜🏻","🧜🏻‍♂️","🧜🏻‍♀️","🧝🏻","🧝🏻‍♂️","🧝🏻‍♀️","💆🏻","💆🏻‍♂️","💆🏻‍♀️","💇🏻","💇🏻‍♂️","💇🏻‍♀️","🚶🏻","🚶🏻‍♂️","🚶🏻‍♀️","🧍🏻","🧍🏻‍♂️","🧍🏻‍♀️","🧎🏻","🧎🏻‍♂️","🧎🏻‍♀️","🧑🏻‍🦯","👨🏻‍🦯","👩🏻‍🦯","🧑🏻‍🦼","👨🏻‍🦼","👩🏻‍🦼","🧑🏻‍🦽","👨🏻‍🦽","👩🏻‍🦽","🏃🏻","🏃🏻‍♂️","🏃🏻‍♀️","🚶🏻‍➡️","🚶🏻‍♀️‍➡️","🚶🏻‍♂️‍➡️","🧎🏻‍➡️","🧎🏻‍♀️‍➡️","🧎🏻‍♂️‍➡️","🧑🏻‍🦯‍➡️","👨🏻‍🦯‍➡️","👩🏻‍🦯‍➡️","🧑🏻‍🦼‍➡️","👨🏻‍🦼‍➡️","👩🏻‍🦼‍➡️","🧑🏻‍🦽‍➡️","👨🏻‍🦽‍➡️","👩🏻‍🦽‍➡️","🏃🏻‍➡️","🏃🏻‍♀️‍➡️","🏃🏻‍♂️‍➡️","💃🏻","🕺🏻","🕴🏻","🧖🏻","🧖🏻‍♂️","🧖🏻‍♀️","🧗🏻","🧗🏻‍♂️","🧗🏻‍♀️","🏇🏻","🏂🏻","🏌🏻","🏌🏻‍♂️","🏌🏻‍♀️","🏄🏻","🏄🏻‍♂️","🏄🏻‍♀️","🚣🏻","🚣🏻‍♂️","🚣🏻‍♀️","🏊🏻","🏊🏻‍♂️","🏊🏻‍♀️","⛹🏻","⛹🏻‍♂️","⛹🏻‍♀️","🏋🏻","🏋🏻‍♂️","🏋🏻‍♀️","🚴🏻","🚴🏻‍♂️","🚴🏻‍♀️","🚵🏻","🚵🏻‍♂️","🚵🏻‍♀️","🤸🏻","🤸🏻‍♂️","🤸🏻‍♀️","🤽🏻","🤽🏻‍♂️","🤽🏻‍♀️","🤾🏻","🤾🏻‍♂️","🤾🏻‍♀️","🤹🏻","🤹🏻‍♂️","🤹🏻‍♀️","🧘🏻","🧘🏻‍♂️","🧘🏻‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏾","🧒🏾","👦🏾","👧🏾","🧑🏾","👱🏾","👨🏾","🧔🏾","🧔🏾‍♀️","🧔🏾‍♂️","👨🏾‍🦰","👨🏾‍🦱","👨🏾‍🦳","👨🏾‍🦲","👩🏾","👩🏾‍🦰","🧑🏾‍🦰","👩🏾‍🦱","🧑🏾‍🦱","👩🏾‍🦳","🧑🏾‍🦳","👩🏾‍🦲","🧑🏾‍🦲","👱🏾‍♀️","👱🏾‍♂️","🧓🏾","👴🏾","👵🏾","🙍🏾","🙍🏾‍♂️","🙍🏾‍♀️","🙎🏾","🙎🏾‍♂️","🙎🏾‍♀️","🙅🏾","🙅🏾‍♂️","🙅🏾‍♀️","🙆🏾","🙆🏾‍♂️","🙆🏾‍♀️","💁🏾","💁🏾‍♂️","💁🏾‍♀️","🙋🏾","🙋🏾‍♂️","🙋🏾‍♀️","🧏🏾","🧏🏾‍♂️","🧏🏾‍♀️","🙇🏾","🙇🏾‍♂️","🙇🏾‍♀️","🤦🏾","🤦🏾‍♂️","🤦🏾‍♀️","🤷🏾","🤷🏾‍♂️","🤷🏾‍♀️","🧑🏾‍⚕️","👨🏾‍⚕️","👩🏾‍⚕️","🧑🏾‍🎓","👨🏾‍🎓","👩🏾‍🎓","🧑🏾‍🏫","👨🏾‍🏫","👩🏾‍🏫","🧑🏾‍⚖️","👨🏾‍⚖️","👩🏾‍⚖️","🧑🏾‍🌾","👨🏾‍🌾","👩🏾‍🌾","🧑🏾‍🍳","👨🏾‍🍳","👩🏾‍🍳","🧑🏾‍🔧","👨🏾‍🔧","👩🏾‍🔧","🧑🏾‍🏭","👨🏾‍🏭","👩🏾‍🏭","🧑🏾‍💼","👨🏾‍💼","👩🏾‍💼","🧑🏾‍🔬","👨🏾‍🔬","👩🏾‍🔬","🧑🏾‍💻","👨🏾‍💻","👩🏾‍💻","🧑🏾‍🎤","👨🏾‍🎤","👩🏾‍🎤","🧑🏾‍🎨","👨🏾‍🎨","👩🏾‍🎨","🧑🏾‍✈️","👨🏾‍✈️","👩🏾‍✈️","🧑🏾‍🚀","👨🏾‍🚀","👩🏾‍🚀","🧑🏾‍🚒","👨🏾‍🚒","👩🏾‍🚒","🕵🏾","🕵🏾‍♂️","🕵🏾‍♀️","💂🏾","💂🏾‍♂️","💂🏾‍♀️","🥷🏾","👷🏾","👷🏾‍♂️","👷🏾‍♀️","🫅🏾","🤴🏾","👸🏾","👳🏾","👳🏾‍♂️","👳🏾‍♀️","👲🏾","🧕🏾","🤵🏾","🤵🏾‍♂️","🤵🏾‍♀️","👰🏾","👰🏾‍♂️","👰🏾‍♀️","🫄🏾","🫃🏾","🤰🏾","🧑🏾‍🍼","👨🏾‍🍼","👩🏾‍🍼","🤱🏾","👼🏾","🎅🏾","🤶🏾","🧑🏾‍🎄","🦸🏾","🦸🏾‍♂️","🦸🏾‍♀️","🦹🏾","🦹🏾‍♂️","🦹🏾‍♀️","🧙🏾","🧙🏾‍♂️","🧙🏾‍♀️","🧚🏾","🧚🏾‍♂️","🧚🏾‍♀️","🧛🏾","🧛🏾‍♂️","🧛🏾‍♀️","🧜🏾","🧜🏾‍♂️","🧜🏾‍♀️","🧝🏾","🧝🏾‍♂️","🧝🏾‍♀️","💆🏾","💆🏾‍♂️","💆🏾‍♀️","💇🏾","💇🏾‍♂️","💇🏾‍♀️","🚶🏾","🚶🏾‍♂️","🚶🏾‍♀️","🧍🏾","🧍🏾‍♂️","🧍🏾‍♀️","🧎🏾","🧎🏾‍♂️","🧎🏾‍♀️","🧑🏾‍🦯","👨🏾‍🦯","👩🏾‍🦯","🧑🏾‍🦼","👨🏾‍🦼","👩🏾‍🦼","🧑🏾‍🦽","👨🏾‍🦽","👩🏾‍🦽","🏃🏾","🏃🏾‍♂️","🏃🏾‍♀️","🚶🏾‍➡️","🚶🏾‍♀️‍➡️","🚶🏾‍♂️‍➡️","🧎🏾‍➡️","🧎🏾‍♀️‍➡️","🧎🏾‍♂️‍➡️","🧑🏾‍🦯‍➡️","👨🏾‍🦯‍➡️","👩🏾‍🦯‍➡️","🧑🏾‍🦼‍➡️","👨🏾‍🦼‍➡️","👩🏾‍🦼‍➡️","🧑🏾‍🦽‍➡️","👨🏾‍🦽‍➡️","👩🏾‍🦽‍➡️","🏃🏾‍➡️","🏃🏾‍♀️‍➡️","🏃🏾‍♂️‍➡️","💃🏾","🕺🏾","🕴🏾","🧖🏾","🧖🏾‍♂️","🧖🏾‍♀️","🧗🏾","🧗🏾‍♂️","🧗🏾‍♀️","🏇🏾","🏂🏾","🏌🏾","🏌🏾‍♂️","🏌🏾‍♀️","🏄🏾","🏄🏾‍♂️","🏄🏾‍♀️","🚣🏾","🚣🏾‍♂️","🚣🏾‍♀️","🏊🏾","🏊🏾‍♂️","🏊🏾‍♀️","⛹🏾","⛹🏾‍♂️","⛹🏾‍♀️","🏋🏾","🏋🏾‍♂️","🏋🏾‍♀️","🚴🏾","🚴🏾‍♂️","🚴🏾‍♀️","🚵🏾","🚵🏾‍♂️","🚵🏾‍♀️","🤸🏾","🤸🏾‍♂️","🤸🏾‍♀️","🤽🏾","🤽🏾‍♂️","🤽🏾‍♀️","🤾🏾","🤾🏾‍♂️","🤾🏾‍♀️","🤹🏾","🤹🏾‍♂️","🤹🏾‍♀️","🧘🏾","🧘🏾‍♂️","🧘🏾‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏼","🧒🏼","👦🏼","👧🏼","🧑🏼","👱🏼","👨🏼","🧔🏼","🧔🏼‍♀️","🧔🏼‍♂️","👨🏼‍🦰","👨🏼‍🦱","👨🏼‍🦳","👨🏼‍🦲","👩🏼","👩🏼‍🦰","🧑🏼‍🦰","👩🏼‍🦱","🧑🏼‍🦱","👩🏼‍🦳","🧑🏼‍🦳","👩🏼‍🦲","🧑🏼‍🦲","👱🏼‍♀️","👱🏼‍♂️","🧓🏼","👴🏼","👵🏼","🙍🏼","🙍🏼‍♂️","🙍🏼‍♀️","🙎🏼","🙎🏼‍♂️","🙎🏼‍♀️","🙅🏼","🙅🏼‍♂️","🙅🏼‍♀️","🙆🏼","🙆🏼‍♂️","🙆🏼‍♀️","💁🏼","💁🏼‍♂️","💁🏼‍♀️","🙋🏼","🙋🏼‍♂️","🙋🏼‍♀️","🧏🏼","🧏🏼‍♂️","🧏🏼‍♀️","🙇🏼","🙇🏼‍♂️","🙇🏼‍♀️","🤦🏼","🤦🏼‍♂️","🤦🏼‍♀️","🤷🏼","🤷🏼‍♂️","🤷🏼‍♀️","🧑🏼‍⚕️","👨🏼‍⚕️","👩🏼‍⚕️","🧑🏼‍🎓","👨🏼‍🎓","👩🏼‍🎓","🧑🏼‍🏫","👨🏼‍🏫","👩🏼‍🏫","🧑🏼‍⚖️","👨🏼‍⚖️","👩🏼‍⚖️","🧑🏼‍🌾","👨🏼‍🌾","👩🏼‍🌾","🧑🏼‍🍳","👨🏼‍🍳","👩🏼‍🍳","🧑🏼‍🔧","👨🏼‍🔧","👩🏼‍🔧","🧑🏼‍🏭","👨🏼‍🏭","👩🏼‍🏭","🧑🏼‍💼","👨🏼‍💼","👩🏼‍💼","🧑🏼‍🔬","👨🏼‍🔬","👩🏼‍🔬","🧑🏼‍💻","👨🏼‍💻","👩🏼‍💻","🧑🏼‍🎤","👨🏼‍🎤","👩🏼‍🎤","🧑🏼‍🎨","👨🏼‍🎨","👩🏼‍🎨","🧑🏼‍✈️","👨🏼‍✈️","👩🏼‍✈️","🧑🏼‍🚀","👨🏼‍🚀","👩🏼‍🚀","🧑🏼‍🚒","👨🏼‍🚒","👩🏼‍🚒","🕵🏼","🕵🏼‍♂️","🕵🏼‍♀️","💂🏼","💂🏼‍♂️","💂🏼‍♀️","🥷🏼","👷🏼","👷🏼‍♂️","👷🏼‍♀️","🫅🏼","🤴🏼","👸🏼","👳🏼","👳🏼‍♂️","👳🏼‍♀️","👲🏼","🧕🏼","🤵🏼","🤵🏼‍♂️","🤵🏼‍♀️","👰🏼","👰🏼‍♂️","👰🏼‍♀️","🫄🏼","🫃🏼","🤰🏼","🧑🏼‍🍼","👨🏼‍🍼","👩🏼‍🍼","🤱🏼","👼🏼","🎅🏼","🤶🏼","🧑🏼‍🎄","🦸🏼","🦸🏼‍♂️","🦸🏼‍♀️","🦹🏼","🦹🏼‍♂️","🦹🏼‍♀️","🧙🏼","🧙🏼‍♂️","🧙🏼‍♀️","🧚🏼","🧚🏼‍♂️","🧚🏼‍♀️","🧛🏼","🧛🏼‍♂️","🧛🏼‍♀️","🧜🏼","🧜🏼‍♂️","🧜🏼‍♀️","🧝🏼","🧝🏼‍♂️","🧝🏼‍♀️","💆🏼","💆🏼‍♂️","💆🏼‍♀️","💇🏼","💇🏼‍♂️","💇🏼‍♀️","🚶🏼","🚶🏼‍♂️","🚶🏼‍♀️","🧍🏼","🧍🏼‍♂️","🧍🏼‍♀️","🧎🏼","🧎🏼‍♂️","🧎🏼‍♀️","🧑🏼‍🦯","👨🏼‍🦯","👩🏼‍🦯","🧑🏼‍🦼","👨🏼‍🦼","👩🏼‍🦼","🧑🏼‍🦽","👨🏼‍🦽","👩🏼‍🦽","🏃🏼","🏃🏼‍♂️","🏃🏼‍♀️","🚶🏼‍➡️","🚶🏼‍♀️‍➡️","🚶🏼‍♂️‍➡️","🧎🏼‍➡️","🧎🏼‍♀️‍➡️","🧎🏼‍♂️‍➡️","🧑🏼‍🦯‍➡️","👨🏼‍🦯‍➡️","👩🏼‍🦯‍➡️","🧑🏼‍🦼‍➡️","👨🏼‍🦼‍➡️","👩🏼‍🦼‍➡️","🧑🏼‍🦽‍➡️","👨🏼‍🦽‍➡️","👩🏼‍🦽‍➡️","🏃🏼‍➡️","🏃🏼‍♀️‍➡️","🏃🏼‍♂️‍➡️","💃🏼","🕺🏼","🕴🏼","🧖🏼","🧖🏼‍♂️","🧖🏼‍♀️","🧗🏼","🧗🏼‍♂️","🧗🏼‍♀️","🏇🏼","🏂🏼","🏌🏼","🏌🏼‍♂️","🏌🏼‍♀️","🏄🏼","🏄🏼‍♂️","🏄🏼‍♀️","🚣🏼","🚣🏼‍♂️","🚣🏼‍♀️","🏊🏼","🏊🏼‍♂️","🏊🏼‍♀️","⛹🏼","⛹🏼‍♂️","⛹🏼‍♀️","🏋🏼","🏋🏼‍♂️","🏋🏼‍♀️","🚴🏼","🚴🏼‍♂️","🚴🏼‍♀️","🚵🏼","🚵🏼‍♂️","🚵🏼‍♀️","🤸🏼","🤸🏼‍♂️","🤸🏼‍♀️","🤽🏼","🤽🏼‍♂️","🤽🏼‍♀️","🤾🏼","🤾🏼‍♂️","🤾🏼‍♀️","🤹🏼","🤹🏼‍♂️","🤹🏼‍♀️","🧘🏼","🧘🏼‍♂️","🧘🏼‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🏃","🏃‍♂️","🏃‍♀️","🤹","🤹‍♂️","🧖","🧖‍♂️","🧖‍♀️","🕴️","🕺","💃","🧑‍⚕️","👨‍⚕️","👩‍⚕️","🧑‍🎓","👨‍🎓","👩‍🎓","🧑‍🏫","👨‍🏫","👩‍🏫","🧑‍⚖️","👨‍⚖️","👩‍⚖️","🧑‍🌾","👨‍🌾","👩‍🌾","🧑‍🍳","👨‍🍳","👩‍🍳","🤵","🤵‍♂️","🤵‍♀️","👰","👰‍♂️","👰‍♀️","🎅","🤶","🧑‍🎄","🦸","🦸‍♂️","🦸‍♀️","🦹","🦹‍♂️","🦹‍♀️","🧙","🧙‍♂️","🧙‍♀️","🧚","🧚‍♂️","🧚‍♀️","🧛","🧛‍♂️","🧛‍♀️","🧜","🧜‍♂️","🧜‍♀️","🧝","🧝‍♂️","🧝‍♀️","🧞","🧞‍♂️","🧞‍♀️","🧟","🧟‍♂️","🧟‍♀️","🧌","🧌","🙍","🙍‍♂️","🙍‍♀️","🙎","🙎‍♂️","🙎‍♀️","🙅","🙅‍♂️","🙅‍♀️","🙆","🙆‍♂️","🙆‍♀️","💁","💁‍♂️","💁‍♀️","🙋","🙋‍♂️","🙋‍♀️","🤦","🤦‍♂️","🤦‍♀️","🤷","🤷‍♂️","🤷‍♀️","🚶","🚶‍♂️","🚶‍♀️","🧕","🤰","🤱","🧘","🧘‍♂️","🧘‍♀️","🤾‍♀️","🤾‍♂️","🤾","🤽‍♀️","🤽‍♂️","🤽","🤸‍♀️","🤸‍♂️","🤸","💆","💆‍♂️","💆‍♀️","💇","💇‍♂️","💇‍♀️","🤺","🏇","⛷","🏂","🏌","🏌️‍♂️","🏌️‍♀️","🏄","🏄‍♂️","🏄‍♀️","🚣","🚣‍♂️","🚣‍♀️","🏊","🏊‍♂️","🏊‍♀️","⛹","⛹️‍♂️","⛹️‍♀️","🏋","🏋️‍♂️","🏋️‍♀️","🚴","🚴‍♂️","🚴‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛"];static adStart=["Brought to you by ","Supported by ","Presented by ","Sponsored by ","Made possible by ","This segment is brought to you by ","Thanks to our sponsor, ","In association with ","Powered by ","With special thanks to ","Developed by ","Special thanks to our sponsor ","Thanks to ","Supported in part by ","Thank you to our sponsor ","Special thank to "];static companyNames=["Solutions","Technologies","Concepts","Systems","Products","Services","Ideas","Strategies","Experiences","Designs","Google","Twitter","Facebook","Youtube","Instagram","Wikipedia","Reddit","Yahoo","Amazon","Netflix","Microsoft","Roblox","Minecraft"];static catchphraseBeginnings=["For a Brighter ","Where Dreams Meet ","Empowering Your ","Simplifying Your ","Unlocking ","Bringing Ideas to ","Innovating Your ","Transforming the ","Crafting a Better ","Building the Path to ","Shaping the World of ","Redefining Your ","Igniting the ","Leading the Charge for ","Creating Endless ","Connecting You to ","Designing the ","Empowering the Next ","Pioneering the ","Revolutionizing Your ","Inspiring the ","Guiding the ","Advancing the ","Illuminating Your ","Enhancing the ","Nurturing a Better ","Driving the Future of ","Harnessing the Power of ","Leaders in ","First in ","Get the ","Don't be ","Just ","Get ","","100% ","Experience the ","Stay Ahead with ","The Power of ","Focus on ","Your Source for ","Setting the Standard for ","Full Speed ","Discover ","Maximize Your ","Let's Go ","Built for ","Delivering ","Elevate Your ","Destroy ","Demolish ","Annihilate ","Obliterate ","Ruin ","Overthrow ","Devastate ","Wreck ","Dismantle ","Emasculate ","Destabilize ","Diminish ","Undermine ","Subdue ","Suppress ","Humiliate ","Belittle ","Disempower ","Dethrone ","Deflate ","Discourage ","Dishearten ","Reduce ","Invalidate ","Deter ","Eradicate ","You're One-Stop Shop For ","Made for ","Designed for ","Built for ","Think "];static catchphraseMiddles=["Tomorrow","Reality","Future","Life","Potential","You","World","Ordinary","Possibilities","Innovation","Success","Horizon","Journey","Excellence","Vision","Beyond","Adventure","Dreams","Opportunities","Change","Solutions","Evolution","Growth","Progress","Ambition","Momentum","Exploration","Discovery","Transformation","Evil","Wickedness","Malevolence","Sin","Iniquity","Villainy","Depravity","Corruption","Malice","Immorality","Wrongdoing","Deception","Fraud","Dishonesty","Trickery","Duplicity","Scam","Betrayal","Subterfuge","Lies","Scum","Falsification","Nature","Health","Family","Business","Money","Capitalism","Democracy","Community","Civilization","Republic","Liberty","Society","Humanism","Justice","Sustainability","Equality","Citizenship"];static catchphraseEndings=["","","","","","","","","",""," in the USA"," Today"," Tomorrow"," Forever"," for All"," Always"," for Now","-ish"," Fun",", Dude!",", Bro!"," to the Extreme"," and Love"," of Business"," and Family"," and Beyond"," and More"," for Everyone"," at Heart"," with Style"," like Never Before"," in Style"," to the Max"," to the Core"," with Passion"," on Steroids"," for the Win"," and Adventure"," and Happiness"," and Joy"," and Fun"," in Every Step"," and the Future"," for the Brave"," with Flair"," to the Moon"," like a Boss"," and Unity"," and Peace"," with Purpose"," and Energy"];static playerPositions=["1st Base","2nd Base","3rd Base","Absurdist","Agitator","All-rounder","Artist","Backfielder","Banjo Hitter","Base Administrator","Base Compliance Officer","Base Coordinator","Base Logistics Manager","Baseman","Base Services Coordinator","Base Supervisor","Batboy","Bat Conservation Officer","Batgirl","Bat Habitat Manager","Batman","Bat Research Engineer","Batter","Benchwarmer","Big Whiffer","Boatswain","Bowler","Butcher","Caregiver","Catcher","Catchall","Catch-22","Center Base","Center Fielder","Clairvoyant","Coach","Color Commentator","Comeback Kid","Comedian","Corner Outfielder","Data Analyst","Debaser","Debater","Defender","Diamond Appraiser","Diamond Cutter","Diamond Polisher","Distracter","Enforcer","Entertainer","Equipment Manager","Existentialist","Feminist","Field Consultant","Field Data Analyst","Field Engineer","Field Hand","Field Operations Specialist","Field Research Scientist","Field Service Manager","Field Technician","First Base","First Baseman","First Mate","Forward","Fourth Baseman","Gatekeeper","Ghost Runner","Glove Distribution Technician","Glover","Goofball","Hit and Run Analyst","Hitmaker","Hitman","Idealist","Illusionist","Infield","Infielder","Last Base","Left Base","Left Fielder","Leftist","Left-winger","Mastermind","Mendoza Line","Mentor","Midfielder","Nihilist","Nonconformist","null","Optimist","Ornithologist","Outfield","Outfielder","Pacifist","Park Naturalist","Park Patrol Officer","Park Ranger","Pessimist","Phantom Ballplayer","Pianist","Pinch Hitter","Pinch Runner","Plagiarist","Pragmatist","Professor","Prophet","Quartermaster","Rebel","Renegade","Right Base","Right Fielder","Second Base","Second Baseman","Shortstop","Sign Stealer","Streaker","Strike Force Supervisor","Strike Negotiation Specialist","Strike Planning Consultant","Striker","Sweeper","Switch Hitter","Team Captain","Team Mascot","Third Base","Third Baseman","Tight End","Underdog","Utility Infielder","Wicketkeeper","Winger"];static find_first_vowel(t){for(let e=0;e<t.length;e++){var a=t[e];if("aeiou".includes(a.toLowerCase()))return e}return-1}static findLetterMatch(t,a,s){if(0==s)return null;for(let e=0;e<t.length;e++){var r=t[e];if(!(r.length<s)&&a.substring(0,s).toLowerCase()==r.substring(0,s).toLowerCase())return r.charAt(0).toUpperCase()+r.slice(1)}return Name.findLetterMatch(t,a,s-1)}static create_first_name(){var e=HelpMe.randomItem(Name.firstNameList),t=HelpMe.randomItem(Name.firstNameList);let a=e.substring(0,Name.find_first_vowel(e));return a=(a+=t.substring(Name.find_first_vowel(t))).charAt(0).toUpperCase()+a.substring(1).toLowerCase()}static create_last_name(){var e=HelpMe.randomItem(Name.lastNameList),t=HelpMe.randomItem(Name.lastNameList);let a=e.substring(0,Name.find_first_vowel(e));return a=(a+=t.substring(Name.find_first_vowel(t))).charAt(0).toUpperCase()+a.substring(1).toLowerCase()}static create_nickName(e,t){var a=HelpMe.randomItem(Name.adjList);let s="";Model.rng.random()<.3?(r=Name.findLetterMatch(Name.adjList,e,3),s=null!=r?r:a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()):Model.rng.random()<.3&&(s=a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()),1<s.length&&(s+=Model.rng.random()<.5?"-":" ");var r=HelpMe.randomItem(Name.nickNameList);let i=r.charAt(0).toUpperCase()+r.substring(1).toLowerCase();return Model.rng.random()<.3?null!=(a=Name.findLetterMatch(Name.nickNameList,t,3))&&(i=a):Model.rng.random()<.3?null!=(r=Name.findLetterMatch(Name.nickNameList,e,3))&&(i=r):Model.rng.random()<.3?i=t[0]:Model.rng.random()<.3&&(i=e[0]),(s+=i).length<3&&(-1<Name.find_first_vowel(e)?(s=e.substring(0,Name.find_first_vowel(e)+1),s+=e.substring(0,Name.find_first_vowel(e)+1).toLowerCase()):s=e[0]+e[0]),s}static create_name(){var e=Name.create_first_name(),t=Name.create_last_name();return e+' "'+Name.create_nickName(e,t)+'" '+t}static create_college(){var e=Name.places[Math.floor(Model.rng.random()*Name.places.length)],t=Math.round(Model.rng.random())+Math.round(Model.rng.random())+Math.round(Model.rng.random());return 0==t?"U"+e:1==t?e+"U":2==t?e+" State":3==t?e+" Tech":void 0}static generateAd(){var e=HelpMe.randomItem(Name.adStart),t=HelpMe.randomItem(Name.companyNames),a=HelpMe.randomItem(Name.adjList);return`AD: ${e}${a.charAt(0).toUpperCase()+a.slice(1,Math.ceil(a.length/2))}${t.slice(Math.floor(t.length/2))}™ - `+(HelpMe.randomItem(Name.catchphraseBeginnings)+HelpMe.randomItem(Name.catchphraseMiddles)+HelpMe.randomItem(Name.catchphraseEndings))}static getCharSum(e){let t=0;for(var a=0;a<e.length;a++)t+=e.charCodeAt(a);return t}}class HelpMe{static choice(e){return e[Math.floor(Model.rng.random()*e.length)]}static getRaggedArraySize(t){let a=0;for(let e=0;e<t.length;e++)Array.isArray(t[e])?a+=t[e].length:null!=t[e]&&(a+=1);return a}static isHexcodeDark(e){if(/^#([0-9A-F]{3}){1,2}$/i.test(e))return e=e.slice(1),.299*parseInt(3===e.length?e[0]+e[0]:e.substring(0,2),16)+.587*parseInt(3===e.length?e[1]+e[1]:e.substring(2,4),16)+.114*parseInt(3===e.length?e[2]+e[2]:e.substring(4,6),16)<128;throw new Error("Invalid hexcode")}static randomItem(e){return e[Math.floor(Model.rng.random()*e.length)]}static removeFirstHalfRandom(e){return null!=e&&0<e.length?e.splice(Math.floor(Model.rng.random()*e.length/2),1)[0]:null}static removeRandom(e){return null!=e&&0<e.length?e.splice(Math.floor(Model.rng.random()*e.length),1)[0]:null}static roundToTenth(e){return Math.round(10*e)/10}static shuffle(e){let t=e.length;for(;0!=t;){var a=Math.floor(Model.rng.random()*t);t--,[e[t],e[a]]=[e[a],e[t]]}return e}}class EventManager{static restructure(e){return e=Object.setPrototypeOf(e,EventManager.prototype),new EventManager}constructor(){this.listeners=[]}subscribe(e){this.listeners.includes(e)||this.listeners.push(e)}unsubscribe(t){this.listeners=this.listeners.filter(e=>e!==t)}notify(t){this.listeners.forEach(e=>{null!=e&&e(t)})}}let GameEventType={GAME_WINNER:0,GAME_LOSER:1,PLATE_APPEARANCES:2,HITS:3,SINGLES:4,DOUBLES:5,TRIPLES:6,HOME_RUNS:7,RUNS_SCORED:8,BASES_ON_BALLS:9,SACRIFICE_FLIES:10,STRIKEOUTS_AT_BAT:11,STOLEN_BASES:12,HIT_BY_PITCH:13,INNINGS_PITCHED:14,STRIKEOUTS_THROWN:15,RUNS_ALLOWED:18,HOME_RUNS_ALLOWED:19,WALKS_ALLOWED:20,AT_BATS:21,PITCHER_CARD_TRIGGERED:100,SLUGGER_CARD_TRIGGERED:101,FAV_TEAM_CARD_TRIGGERED:102,END_OF_DAY:103};class GameEvent{static restructure(e){return e=Object.setPrototypeOf(e,GameEvent.prototype)}constructor(e,t,a){this.eventType=e,this.teamId=t,this.playerId=a}}class Stats{static restructure(e){return e=Object.setPrototypeOf(e,Stats.prototype)}constructor(){this.gamesPlayed=0,this.wins=0,this.losses=0,this.plateAppearances=0,this.atBats=0,this.hits=0,this.singles=0,this.doubles=0,this.triples=0,this.homeRuns=0,this.runsScored=0,this.sacrificeFlies=0,this.totalBases=0,this.basesOnBalls=0,this.strikeoutsAtBat=0,this.stolenBases=0,this.hitByPitch=0,this.inningsPitched=0,this.strikeoutsThrown=0,this.runsAllowed=0,this.homeRunsAllowed=0,this.walksAllowed=0}getBattingAverage(){return 0<this.atBats?(this.hits/this.atBats).toFixed(3):0}getHitsPerGame(){return 0<this.gamesPlayed?(this.hits/this.gamesPlayed).toFixed(3):0}getOnBasePercentage(){return 0<this.atBats?((this.hits+this.basesOnBalls+this.hitByPitch)/(this.atBats+this.basesOnBalls+this.hitByPitch+this.sacrificeFlies)).toFixed(3):0}getOnBasePlusSlugging(){return 0<this.atBats?((this.atBats*(this.hits+this.basesOnBalls+this.hitByPitch)+this.totalBases*(this.atBats+this.basesOnBalls+this.sacrificeFlies+this.hitByPitch))/(this.atBats*(this.atBats+this.basesOnBalls+this.sacrificeFlies+this.hitByPitch))).toFixed(3):-1}getRunsPerGame(){return 0<this.gamesPlayed?(this.runsScored/this.gamesPlayed).toFixed(3):0}getRunsPerPlateAppearance(){return 0<this.plateAppearances?(this.runsScored/this.plateAppearances).toFixed(3):0}getEarnedRunAverage(){return 0<this.inningsPitched?(this.runsAllowed/this.inningsPitched*9).toFixed(3):999}getStrikeoutsPerNineInnings(){return 0===this.inningsPitched?0:(this.strikeoutsThrown/this.inningsPitched*9).toFixed(2)}stringFormatKey(e){return e.replace(/([A-Z])/g," $1").replace(/^./,e=>e.toUpperCase())}getRecordAndPitcherStats(){var{gamesPlayed:e,wins:t,losses:a,inningsPitched:s,strikeoutsThrown:r,runsAllowed:i,homeRunsAllowed:n,walksAllowed:o}=this;return`
        <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
            <tbody>
                ${`
        <tr>
            <td>${this.stringFormatKey("gamesPlayed")}</td>
            <td>${e}</td>
        </tr>
        <tr>
            <td>Win Percent</td>
            <td>${0<e?Math.round(t/e*100)+"%":"0%"}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("wins")}</td>
            <td>${t}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("losses")}</td>
            <td>${a}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("inningsPitched")}</td>
            <td>${s}</td>
        </tr>
        ${0<s?`
            <tr>
            <td>Earned Run Average</td>
            <td>${this.getEarnedRunAverage()}</td>
            </tr>
            <tr>
            <td>Strikeouts Per 9 Innings</td>
            <td>${this.getStrikeoutsPerNineInnings()}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("strikeoutsThrown")}</td>
            <td>${r}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("runsAllowed")}</td>
            <td>${i}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("homeRunsAllowed")}</td>
            <td>${n}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("walksAllowed")}</td>
            <td>${o}</td>
            </tr>
        `:""}
        `}
            </tbody>
        </table>
    `.trim()}getBatterStats(){var{plateAppearances:e,atBats:t,hits:a,singles:s,doubles:r,triples:i,homeRuns:n,runsScored:o,stolenBases:l,strikeoutsAtBat:d,sacrificeFlies:h}=this;return`
        <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
        <tbody>
            ${`
        <tr>
            <td>Batting Average</td>
            <td>${this.getBattingAverage()}</td>
        </tr>
        <!--tr>
            <td>${this.stringFormatKey("plateAppearances")}</td>
            <td>${e}</td>
        </tr-->
        <tr>
            <td>${this.stringFormatKey("atBats")}</td>
            <td>${t}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("hits")}</td>
            <td>${a}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("singles")}</td>
            <td>${s}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("doubles")}</td>
            <td>${r}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("triples")}</td>
            <td>${i}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("homeRuns")}</td>
            <td>${n}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("runsScored")}</td>
            <td>${o}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("stolenBases")}</td>
            <td>${l}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("strikeoutsAtBat")}</td>
            <td>${d}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("sacrificeFlies")}</td>
            <td>${h}</td>
        </tr>
        `}
        </tbody>
        </table>
    `.trim()}}let fontList=["serif","sans-serif","monospace",'Josefin Sans", "monospac',"Graduate,serif","Fraunces,serif","Rye,serif",'Kelly Slab", "serif','Germania One", "serif'];class Crest{static crestCounter=0;static restructure(e){return e=Object.setPrototypeOf(e,Crest.prototype)}constructor(e,t,a,s,r,i){switch(this.id=Crest.crestCounter+=Math.ceil(5*Model.rng.random()),(null==a||40<=a)&&(a=this.id%40),(null==s||s>=fontList.length)&&(s=this.id%fontList.length),(null==r||25<=r)&&(r=this.id%25),(null==i||4<=i)&&(i=this.id%4),this.colorScheme=e,this.teamPlaceAbbreviation=t,this.shape=this.generateShape(a),this.fontStyle=fontList[s],this.shadowColor=null,this.fontColor=null,this.fontColor=this.colorScheme.light,this.shadowColor="rgba(0,0,0,0.95)",i){case 0:this.gradientDirection={x1:"0%",y1:"0%",x2:"0%",y2:"100%"};break;case 1:this.gradientDirection={x1:"0%",y1:"0%",x2:"100%",y2:"0%"};break;case 2:this.gradientDirection={x1:"0%",y1:"0%",x2:"100%",y2:"100%"};break;case 3:this.gradientDirection={x1:"0%",y1:"100%",x2:"100%",y2:"0%"}}this.size=40,this.stripePattern=r}getStripes(e){switch(e){case 0:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                </linearGradient>`;case 1:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </linearGradient>`;case 2:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    </linearGradient>`;case 3:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    </linearGradient>`;case 4:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="26%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="26%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="74%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="74%" stop-color="${this.colorScheme.dark}" />
                    </linearGradient>`;case 5:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="26%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="26%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="74%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="74%" stop-color="${this.colorScheme.mid}" />
                    </linearGradient>`;case 6:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 7:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="90%" r="44%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 8:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="25%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="36%" stop-color="${this.colorScheme.dark}" />
                <stop offset="36%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 9:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="45%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 10:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="33%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 11:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 12:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" /> // 33% stripe
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="66%" stop-color="${this.colorScheme.mid}" />
                <stop offset="66%" stop-color="#000" />
                </linearGradient>`;case 13:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="#000" />
                </linearGradient>`;case 14:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="46%" stop-color="${this.colorScheme.mid}" />
                <stop offset="46%" stop-color="#000" />
                <stop offset="54%" stop-color="#000" />
                <stop offset="54%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 15:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 16:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 17:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="35%" stop-color="${this.colorScheme.dark}" />
                <stop offset="35%" stop-color="${this.colorScheme.mid}" />
                <stop offset="45%" stop-color="${this.colorScheme.mid}" />
                <stop offset="45%" stop-color="#000" />
                <stop offset="55%" stop-color="#000" />
                <stop offset="55%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 18:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="35%" stop-color="${this.colorScheme.mid}" />
                <stop offset="35%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="#000" />
                <stop offset="55%" stop-color="#000" />
                <stop offset="55%" stop-color="${this.colorScheme.dark}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 19:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.mid}" />
                <stop offset="76%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 20:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 21:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 22:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 23:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse" >
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 24:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`}}generateShape(e){switch(e){case 0:return"50,5 87,25 87,75 50,95 13,75 13,25";case 1:return"50,5 95,35 77,90 50,80 23,90 5,35";case 2:return"25,5 50,20 75,5 95,50 50,95 5,50";case 3:return"50,5 95,85 50,75 5,85";case 4:return"5,15 50,25 95,15 50,95";case 5:return"2,15 98,35 85,50, 98,65 2,85";case 6:return"20,5 80,5 95,95 50,80 5,95";case 7:return"5,5 95,5 80,95 50,80 20,95";case 8:return"50,5 95,50 50,95 5,50";case 9:return"87.0,34.7 34.7,13.0 13.0,65.3 65.3,87.0 87.0,34.7";case 10:return"95.0,50.0 93.5,61.6 89.0,72.5 81.8,81.8 72.5,89.0 61.6,93.5 50.0,95.0 38.4,93.5 27.5,89.0 18.2,81.8 11.0,72.5 6.5,61.6 5.0,50.0 6.5,38.4 11.0,27.5 18.2,18.2 27.5,11.0 38.4,6.5 50.0,5.0 61.6,6.5 72.5,11.0 81.8,18.2 89.0,27.5 93.5,38.4";case 11:return"50.0,81.0 37.0,89.9 21.8,88.8 16.0,74.7 20.5,59.6 8.0,50.0 4.3,35.2 16.0,25.3 31.8,24.9 37.0,10.1 50.0,2.0 63.0,10.1 68.2,24.9 84.0,25.3 95.7,35.2 92.0,50.0 79.5,59.6 84.0,74.7 78.2,88.8 63.0,89.9";case 12:return"30,5 70,5 70,30 95,30 95,70 70,70 70,95 30,95 30,70 5,70 5,30 30,30";case 13:return"30,5 70,5 90,30 90,70 70,95 30,95 10,70 10,30";case 14:return"50,5 40,8 30,20 3,50 30,80 40,92 50,95 60,92 70,80 97,50 70,20 60,8";case 15:return"5,50 8,40 20,30 50,3 80,30 92,40 95,50 92,60 80,70 50,97 20,70 8,60";case 16:return"20,5 50,15 80,5 75,85 50,95 25,85";case 17:return"10,15 90,15 90,58 50,97 10,58";case 18:return"8,30 25,30 15,8 85,8 75,30 92,30 76,70 59,70 50,92 50,92 41,70 24,70";case 19:return"75,15 95,50 75,85 15,85 35,50 15,15";case 20:return"25,25 97,3 75,75 3,97";case 21:return"75,25 3,3 25,75 97,97";case 22:return"50,33 80,12 90,88 50,66 10,88 20,12";case 23:return"62,25 50,16 38,25 30,20.5 15,11.5 12,14.2 9,18.7 7,23.2 5,28.6 4,34 4,37.6 5,41.2 9,47.5 15,55.6 25,65.5 50,88 75,65.5 85,55.6 91,47.5 95,41.2 96,37.6 96,34 95,28.6 93,23.2 91,18.7 88,14.2 85,11.5 70,20.5";case 24:return"86,51 84.8,61.44 81.2,71.25 75.44,79.62 68,86.1 59.28,90.15 50,91.5 40.72,90.15 32,86.1 24.56,79.62 18.8,71.25 15.2,61.44 14,51 14,8.7 86,8.7 86,51";case 25:return"88.25,50.5 86.975,60.36 83.15,69.625 77.03,77.53 69.125,83.65 59.86,87.475 50,88.75 40.14,87.475 30.875,83.65 22.97,77.53 16.85,69.625 13.025,60.36 11.75,50.5 11.75,10.55 30.875,19.05 50,10.55 69.125,19.05 88.25,10.55 88.25,50.5";case 26:return"88.25,50.5 86.975,60.36 83.15,69.625 77.03,77.53 69.125,83.65 59.86,87.475 50,88.75 40.14,87.475 30.875,83.65 22.97,77.53 16.85,69.625 13.025,60.36 11.75,50.5 11.75,10.55 24.5,19.05 37.25,10.55 50,19.05 62.75,10.55 75.5,19.05 88.25,10.55 88.25,50.5";case 27:return"80.0,50.0 86.4,76.5 59.3,78.5 36.1,92.8 25.7,67.6 5.0,50.0 25.7,32.4 36.1,7.2 59.3,21.5 86.4,23.5 ";case 28:return"74.3,67.6 63.9,92.8 40.7,78.5 13.6,76.5 20.0,50.0 13.6,23.5 40.7,21.5 63.9,7.2 74.3,32.4 95.0,50.0 ";case 29:return"50,98 56.6,93.4 62.6,88.2 68.2,82.4 73.1,76.1 77.4,69.4 81.1,62.3 84.0,54.8 84.0,10.8 16.0,10.8 16.0,54.8 18.9,62.3 22.6,69.4 26.9,76.1 31.8,82.4 37.4,88.2 43.4,93.4 50.0,98.0 ";case 30:return"50,98 62.3,87.7 73.0,75.8 81.9,62.6 88.9,48.2 93.9,33.0 96.6,17.2 89.2,14.2 81.6,11.7 73.9,9.8 66.0,8.4 58.0,7.6 50.0,7.3 42.0,7.6 34.0,8.4 26.1,9.8 18.4,11.7 10.8,14.2 3.4,17.2 6.1,33.0 11.1,48.2 18.1,62.6 27.0,75.8 37.7,87.7 50.0,98.0 ";case 31:return"50,98 54.0,92.3 59.0,87.3 64.7,83.3 72.9,79.5 79.8,73.5 84.8,65.9 87.4,57.2 87.6,48.1 85.4,39.9 84.5,31.6 84.7,23.2 86.2,14.9 88.9,7.0 50.0,7.0 11.1,7.0 13.8,14.9 15.3,23.2 15.5,31.6 14.6,39.9 12.4,48.1 12.6,57.2 15.2,65.9 20.2,73.5 27.1,79.5 35.3,83.3 41.0,87.3 46.0,92.3 50.0,98.0 ";case 32:return"50,98 60.7,89.0 70.1,78.6 77.9,67.0 84.1,54.4 88.4,41.1 90.8,27.3 83.3,24.3 76.1,20.7 69.1,16.7 62.4,12.2 56.0,7.2 50.0,1.8 50.0,1.8 44.0,7.2 37.6,12.2 30.9,16.7 23.9,20.7 16.7,24.3 9.2,27.3 11.6,41.1 15.9,54.4 22.1,67.0 29.9,78.6 39.3,89.0 50.0,98.0 ";case 33:return"50,98 60.7,89.0 70.1,78.7 78.0,67.2 84.2,54.8 88.8,41.6 91.5,27.9 92.4,14.0 87.7,17.1 82.6,19.4 77.1,20.8 71.5,21.2 65.9,20.7 60.5,19.1 55.4,16.7 50.9,13.4 50.0,13.4 49.1,13.4 44.6,16.7 39.5,19.1 34.1,20.7 28.5,21.2 22.9,20.8 17.4,19.4 12.3,17.1 7.6,14.0 8.5,27.9 11.2,41.6 15.8,54.8 22.0,67.2 29.9,78.7 39.3,89.0 50.0,98.0 ";case 34:return"50,98 55.2,90.6 61.5,84.3 68.9,79.1 75.8,75.9 81.6,70.8 85.8,64.4 88.0,57.1 88.1,49.5 85.8,40.8 84.7,31.8 84.9,22.8 86.3,14.0 88.9,5.3 86.1,7.4 82.8,8.4 79.4,8.4 76.1,7.4 73.3,5.3 70.6,7.4 67.3,8.4 63.8,8.4 60.6,7.4 57.8,5.3 55.0,7.4 51.7,8.4 48.3,8.4 45.0,7.4 42.2,5.3 39.4,7.4 36.1,8.4 32.7,8.4 29.4,7.4 26.6,5.3 23.8,7.4 20.6,8.4 17.1,8.4 13.8,7.4 11.1,5.3 13.7,14.0 15.1,22.8 15.2,31.8 14.2,40.8 11.8,49.5 12.0,57.1 14.2,64.4 18.4,70.8 24.1,75.9 31.1,79.1 38.4,84.3 44.8,90.6 50.0,98.0 ";case 35:return"50,98 55.8,91.1 62.7,85.3 70.5,80.8 77.6,78.2 83.7,73.7 88.3,67.6 91.0,60.5 91.5,52.9 89.5,44.1 88.8,35.2 89.3,26.2 91.1,17.4 94.0,8.9 96.3,4.4 93.3,8.0 89.3,10.3 84.7,11.1 80.1,10.3 76.1,8.0 73.1,4.4 70.2,8.0 66.1,10.3 61.6,11.1 57.0,10.3 53.0,8.0 50.0,4.4 47.0,8.0 43.0,10.3 38.4,11.1 33.8,10.3 29.8,8.0 26.8,4.4 23.8,8.0 19.8,10.3 15.2,11.1 10.7,10.3 6.6,8.0 3.7,4.4 8.9,17.4 10.6,26.2 11.1,35.2 10.4,44.1 8.5,52.9 9.0,60.5 11.7,67.6 16.2,73.7 22.3,78.2 29.5,80.8 37.3,85.3 44.2,91.1 50.0,98.0";case 36:return"50,98 56.3,95.0 63.0,92.9 69.9,91.5 77.9,91.0 85.0,87.4 90.1,81.2 92.5,73.6 91.1,60.8 90.8,48.0 91.5,35.3 93.1,22.6 95.8,10.1 97.2,5.3 93.2,10.1 87.7,13.3 81.5,14.3 75.3,13.3 69.8,10.1 65.7,5.3 61.7,10.1 56.2,13.3 50.0,14.3 43.8,13.3 38.3,10.1 34.3,5.3 30.2,10.1 24.7,13.3 18.5,14.3 12.3,13.3 6.8,10.1 2.8,5.3 4.2,10.1 6.7,22.6 8.3,35.3 8.8,48.1 8.4,60.9 6.9,73.6 9.2,81.3 14.3,87.5 21.4,91.2 29.4,91.8 36.2,93.2 42.9,95.4 49.2,98";case 37:return"50,77.5 80.0,77.5 95.5,19.5 92.6,23.0 88.6,25.3 84.1,26.1 79.7,25.3 75.7,23.0 72.8,19.5 69.8,23.0 65.9,25.3 61.4,26.1 56.9,25.3 52.9,23.0 50.0,19.5 47.1,23.0 43.1,25.3 38.6,26.1 34.1,25.3 30.2,23.0 27.2,19.5 24.3,23.0 20.3,25.3 15.9,26.1 11.4,25.3 7.4,23.0 4.5,19.5 20.0,77.5 50.0,77.5  ";case 38:return"8,27 20,25 23,15 77,15 80,25 92,27 88,72 77,74 74,84 26,84 23,74 12,72";case 39:return"94.0,50.0 80.5,39.7 88.9,18.2 62.6,25.1 50.0,14.0 37.4,25.1 11.1,18.2 19.5,39.7 6.0,50.0 19.5,60.3 11.1,81.8 37.4,74.9 50.0,86.0 62.6,74.9 88.9,81.8 80.5,60.3 94.0,50.0 "}}render(e=25){return`
        <svg xmlns="http://www.w3.org/2000/svg" width="${e}" height="${e}" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
            <defs>
                ${this.getStripes(this.stripePattern)}
            </defs>
            <polygon 
                points="${this.shape}" 
                fill="url(#gradient${Crest.crestCounter++})" 
                stroke="${this.colorScheme.light}"
                stroke-width="1.4"
            />
            <style>

            </style>
            <text 
                x="51%" 
                y="54%" 
                font-family="${this.fontStyle}" 
                font-weight="bold" 
                text-anchor="middle" 
                dominant-baseline="middle"
                fill="rgba(0,0,0,0.95)" 
                
                font-size="${93/this.teamPlaceAbbreviation.length+5.25}px" 
                style="-webkit-text-stroke: ${.005*e}px ${this.shadowColor}; text-shadow: ${.015*e}px ${.015*e}px 0px ${this.shadowColor}, -${.005*e}px -${.005*e}px 0px ${this.shadowColor}, -${.005*e}px ${.0075*e}px 0px ${this.shadowColor}, ${.005*e}px -${.005*e}px 0px ${this.shadowColor};"
        >
                ${this.teamPlaceAbbreviation}
            </text>
            <text 
                x="50%" 
                y="53%" 
                font-family="${this.fontStyle}" 
                font-weight="bold" 
                text-anchor="middle" 
                dominant-baseline="middle"
                fill="${this.fontColor}" 
                
                font-size="${93/this.teamPlaceAbbreviation.length+5.25}px" 
                style="-webkit-text-stroke: ${.005*e}px ${this.shadowColor}; text-shadow: ${.015*e}px ${.015*e}px 0px ${this.shadowColor}, -${.005*e}px -${.005*e}px 0px ${this.shadowColor}, -${.0075*e}px ${.0075*e}px 0px ${this.shadowColor}, ${.005*e}px -${.005*e}px 0px ${this.shadowColor};"
        >
                ${this.teamPlaceAbbreviation}
            </text>
        </svg>
    `}}class PlayerAttributes{static restructure(e){return Object.setPrototypeOf(e,PlayerAttributes.prototype),e}static allOnes(){var e=new PlayerAttributes;return e.hunger=1,e.metabolism=1,e.healthiness=1,e.balance=1,e.strength=1,e.accuracy=1,e.swinginess=1,e.thwackiness=1,e.power=1,e.reliability=1,e.teamwork=1,e}static randomPlayer(){var e=new PlayerAttributes;return e.hunger=1,e.metabolism=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.healthiness=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.balance=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.strength=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.accuracy=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.swinginess=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.thwackiness=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.power=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.reliability=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.teamwork=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e}constructor(){this.runs=1,this.canBaserun=!0,this.canBat=!0,this.canCatch=!0,this.canPitch=!0,this.hunger=0,this.metabolism=0,this.healthiness=0,this.balance=0,this.strength=0,this.accuracy=0,this.swinginess=0,this.thwackiness=0,this.power=0,this.reliability=0,this.teamwork=0}}class BaseballPlayer{static idCounter=0;static restructure(e){(e=Object.setPrototypeOf(e,BaseballPlayer.prototype)).attributes=PlayerAttributes.restructure(e.attributes),e.stats=Stats.restructure(e.stats),e.crest=Crest.restructure(e.crest),e.manager=EventManager.restructure(e.manager),e.attributes=PlayerAttributes.restructure(e.attributes);for(var[t,a]of Object.entries(e.conditions))PlayerCondition.restructure(e.conditions[t]);return e}static normalizeToTen(e){return(e=Math.abs(e)%20)<=10?e:10-(e-10)}constructor(e,t){this.leagueIdNumber=e,this.playerIdNumber=BaseballPlayer.idCounter++,this.firstName=Name.create_first_name(),this.lastName=Name.create_last_name(),this.nickName=Name.create_nickName(this.firstName,this.lastName),this.jerseyNumber=0,this.teamPlaceAbbreviation=null,this.teamPlaceName=null,this.teamMascot=null,this.teamLeagueIdNumber=0,this.crest=null,this.colorScheme=null,this.position="null",this.tattoos=Name.webSafeEmojiCodes[Name.getCharSum(this.firstName)%Name.webSafeEmojiCodes.length]+Name.webSafeEmojiCodes[Name.getCharSum(this.lastName)%Name.webSafeEmojiCodes.length],this.profilePic=Name.profileEmojis[Name.getCharSum(this.firstName)*Name.getCharSum(this.lastName)%Name.profileEmojis.length],this.age=Math.floor(11*Model.rng.random())+20+t,this.attributes=PlayerAttributes.randomPlayer(),this.conditions={},this.stats=new Stats,this.manager=new EventManager}addPlateAppearances(){this.stats.plateAppearances++}addAtBats(){this.stats.atBats++}addBasesOnBalls(){this.stats.basesOnBalls++}addDoubles(){this.stats.doubles++,this.addHits(),this.addTotalBases(2)}addHits(){this.stats.hits++}addHomeRuns(){this.stats.homeRuns++,this.addHits(),this.addTotalBases(4)}addHomeRunsAllowed(){this.stats.homeRunsAllowed++}addInningsPitched(){this.stats.inningsPitched++}addLoss(){this.stats.losses++,this.stats.gamesPlayed++}addRunsAllowed(){this.stats.runsAllowed++}addRunsScored(){this.stats.runsScored++}addSacrificeFlies(){this.stats.sacrificeFlies++}addSingles(){this.stats.singles++,this.addHits(),this.addTotalBases(1)}addStrikeoutsAtBat(){this.stats.strikeoutsAtBat++}addStrikeoutsThrown(){this.stats.strikeoutsThrown++}addTotalBases(e){this.stats.totalBases+=e}addTriples(){this.stats.triples++,this.addHits(),this.addTotalBases(3)}addWalksAllowed(){this.stats.walksAllowed++}addWin(){this.stats.wins++,this.stats.gamesPlayed++}addCondition(e){this.conditions.hasOwnProperty(e.name)?this.conditions[e.name].duration=e.duration:this.conditions[e.name]=e}canBat(){for(var e of this.conditions)if(!e.multipliers.canBat)return!1;return!0}canCatch(){for(var e of this.conditions)if(!e.multipliers.canCatch)return!1;return!0}canPitch(){for(var e of this.conditions)if(!e.multipliers.canPitch)return!1;return!0}equals(e){return this.playerIdNumber===e.playerIdNumber&&this.leagueIdNumber===e.leagueIdNumber&&this.firstName===e.firstName&&this.lastName===e.lastName&&this.jerseyNumber===e.jerseyNumber}getAccuracy(){let e=this.attributes.accuracy;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.accuracy)+t.additions.accuracy;return e}getBalance(){let e=this.attributes.balance;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.balance)+t.additions.balance;return e}getBattingAptitude(){return(this.getSwinginess()+this.getThwackiness()+this.getPower()-this.getTiredness(50))/3}getConditions(){let e="";for(var t of Object.values(this.conditions))e+=t.toString()+", ";return e.slice(0,-2)||"Normal"}getConditionIcons(){let e="";for(var t of Object.values(this.conditions))e+=t.getIcon()+"";return e}getDefaultPosition(){return Name.playerPositions[Name.getCharSum(this.firstName+this.lastName)%Name.playerPositions.length]}getDefenseAptitude(){return(this.getReliability()+this.getTeamwork()-this.getTiredness(50))/2}getDefenseScore(e){e=this.getTiredness(e);return BaseballPlayer.normalizeToTen((this.getReliability()+this.getTeamwork())/2+this.getHunger()-e)}getEra(){return 0==this.stats.gamesPitched?-1:this.stats.runsAllowed/this.stats.gamesPitched}getFullName(e=40){return this.crest.render(e)+"&nbsp;"+this.teamPlaceAbbreviation+" "+this.firstName+" "+this.lastName+this.getConditionIcons()}getFullNameWithLink(e=40){return this.crest.render(e)+`&nbsp;<a href="#" 
                class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" 
                onclick="app.view.statsModal.update(${this.leagueIdNumber});" data-bs-target="#statsModal" data-bs-toggle="modal" >`+this.teamPlaceAbbreviation+" "+this.firstName+" "+this.lastName+" "+this.getConditionIcons()+"</a>"}getHealthiness(){let e=this.attributes.healthiness;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.healthiness)+t.additions.healthiness;return e}getHitScore(e,t){e=this.getTiredness(e);return t=BaseballPlayer.normalizeToTen(t),BaseballPlayer.normalizeToTen(this.getPower()+this.getHunger()-e-Math.abs(t-5))}getHunger(){let e=this.attributes.hunger;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.hunger)+t.additions.hunger;return e}getMetabolism(){let e=this.attributes.metabolism;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.metabolism)+t.additions.metabolism;return e}getName(e){if(null==e)return this.teamPlaceAbbreviation+"&nbsp;"+this.lastName;let t="";return e.teamPlaceAbbreviation&&(t+=this.teamPlaceAbbreviation+" "),e.firstName&&(t+=this.firstName+" "),e.nickName&&(t+=`"${this.nickName}" `),e.lastName&&(t+=this.lastName+" "),t+=this.getConditionIcons()}getNameWithLink(e=40){return this.crest.render(e)+`&nbsp;<a href="#" 
        class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" 
        onclick="app.view.statsModal.update(${this.leagueIdNumber});" data-bs-target="#statsModal" data-bs-toggle="modal" >`+this.teamPlaceAbbreviation+" "+this.lastName+" "+this.getConditionIcons()+"</a>"}getOverallAptitude(){return(this.getDefenseAptitude()+this.getPitchingAptitude()+this.getBattingAptitude()-this.getTiredness(50))/3}getPitchingAptitude(){return(this.getAccuracy()+this.getStrength()+this.getMetabolism()-this.getTiredness(50))/3}getPitchScore(e){var t=this.getTiredness(e),e=Math.abs(Math.sin(e*(10-this.getAccuracy())*.5)*(10-this.getAccuracy())*.5);return BaseballPlayer.normalizeToTen(this.getStrength()-e+this.getHunger()-2*t)}getPower(){let e=this.attributes.power;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.power)+t.additions.power;return e}getReliability(){let e=this.attributes.reliability;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.reliability)+t.additions.reliability;return e}getStatsTable(){return`
            <ul class="nav nav-tabs nav-fill" id="playerTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" 
                    type="button" role="tab" aria-controls="details" aria-selected="true">Player Details</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="attributes-tab" data-bs-toggle="tab" data-bs-target="#attributes" 
                    type="button" role="tab" aria-controls="attributes" aria-selected="false">Attributes</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" 
                    type="button" role="tab" aria-controls="stats" aria-selected="false">Stats</button>
                </li>
                <!-- lifetime stats -->
                <!--li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="lifetime-tab" data-bs-toggle="tab" data-bs-target="#lifetime" 
                    type="button" role="tab" aria-controls="lifetime" aria-selected="false">Lifetime</button>
                </li-->
            </ul>
    
            <div class="tab-content" id="playerTabContent">
                <!-- Player Details Tab -->
                <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
                    <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                        <tr>
                            <th colspan="2" class="text-center">Player Details</th>
                        </tr>
                        <tr><td>Team</td><td>
                            ${this.crest.render(40)} <a href="#" onclick="app.view.statsModal.update(${this.teamLeagueIdNumber})" 
                            class="link text-light link-offset-2 link-light link-underline-opacity-25 link-underline-opacity-100-hover">
                                ${this.teamPlaceAbbreviation} ${this.teamPlaceName} ${this.teamMascot}
                            </a>
                        </td></tr>
                        <tr><td>League ID</td><td>${this.leagueIdNumber}</td></tr>
                        <tr><td>Full Name</td><td>${this.firstName} "${this.nickName}" ${this.lastName}</td></tr>
                        <tr><td>Jersey Number</td><td>${this.jerseyNumber}</td></tr>
                        <tr><td>Position</td><td>${this.position}</td></tr>
                        <tr><td>Tattoos</td><td><span class='noto fs-3'>${this.tattoos}</span></td></tr>
                        <tr><td>Age</td><td>${this.age}</td></tr>
                    </table>
                </div>

                                <!-- Attributes Tab -->
                <div class="tab-pane fade" id="attributes" role="tabpanel" aria-labelledby="attributes-tab">
                    <div class="row">
                        <div class="col col-lg-6">    
                            <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                                <th colspan="2" class="text-center">Wellness</th>
                                 <tr><td>Status</td><td>${this.getConditions()}</td></tr>
                                <tr><td>Hunger</td><td>${this.getHunger().toFixed(1)}</td></tr>
                                <tr><td>Metabolism</td><td>${this.getMetabolism().toFixed(1)}</td></tr>
                                <tr><td>Healthiness</td><td>${this.getHealthiness().toFixed(1)}</td></tr>
                                <tr><td>Balance</td><td>${this.getBalance().toFixed(1)}</td></tr>
                                <tr>
                                    <th colspan="2" class="text-center">Pitching Attributes</th>
                                </tr>
                                <tr><td>Pitch Strength</td><td>${this.getStrength().toFixed(1)}</td></tr>
                                <tr><td>Pitch Accuracy</td><td>${this.getAccuracy().toFixed(1)}</td></tr>
                                <tr><td>Avg. Pitching Aptitude</td><td>${this.getPitchingAptitude().toFixed(1)}</td></tr>
                                <tr>
                            </table>
                        </div>
                        <div class="col col-lg-6">   
                            <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                                <th colspan="2" class="text-center">Batting Attributes</th>
                                </tr>
                                <tr><td>Swinginess</td><td>${this.getSwinginess().toFixed(1)}</td></tr>
                                <tr><td>Thwackiness</td><td>${this.getThwackiness().toFixed(1)}</td></tr>
                                <tr><td>Hitting Power</td><td>${this.getPower().toFixed(1)}</td></tr>
                                <tr><td>Avg. Batting Aptitude</td><td>${this.getBattingAptitude().toFixed(1)}</td></tr>
                                <tr>
                                    <th colspan="2" class="text-center">Defense Attributes</th>
                                </tr>
                                <tr><td>Reliability</td><td>${this.getReliability().toFixed(1)}</td></tr>
                                <tr><td>Teamwork</td><td>${this.getTeamwork().toFixed(1)}</td></tr>
                                <tr><td>Avg. Defense Aptitude</td><td>${this.getDefenseAptitude().toFixed(1)}</td></tr>
                            </table>
                        </div>
                    </div>
                </div>
    
                <!-- Stats Tab -->
                <div class="tab-pane fade" id="stats" role="tabpanel" aria-labelledby="stats-tab">
                    <div class="row">
                        <div class="col col-lg-6">
                        ${this.stats.getRecordAndPitcherStats()}
                        </div>
                        <div class="col col-lg-6">
                        ${this.stats.getBatterStats()}
                        </div>
                    </div>
                </div>
    

    
                <!-- Lifetime Stats Tab -->
                <!--div class="tab-pane fade" id="lifetime" role="tabpanel" aria-labelledby="lifetime-tab">
                    <div class="row">
                        <div class="col col-lg-6">
                        {//this.lifetimeStats.getRecordAndPitcherStats()}
                        </div>
                        <div class="col col-lg-6">
                        {//this.lifetimeStats.getBatterStats()}
                        </div>
                    </div>
                </div-->
            </div>
        `.trim()}getStrength(){let e=this.attributes.strength;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.strength)+t.additions.strength;return e}getSummary(){return this.fullname+", "+this.position}getSwinginess(){let e=this.attributes.swinginess;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.swinginess)+t.additions.swinginess;return e}getTeamwork(){let e=this.attributes.teamwork;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.teamwork)+t.additions.teamwork;return e}getThwackiness(){let e=this.attributes.thwackiness;for(var t of Object.values(this.conditions))e=(e*=t.multipliers.thwackiness)+t.additions.thwackiness;return e}getTiredness(e){var t=.65*Math.abs(25-this.age),a=Math.abs(Math.sin(e*(10-this.getBalance())*.5)*(10-this.getBalance())*.5);return BaseballPlayer.normalizeToTen((t+a)/this.getHealthiness()*e/500*50)}hasCondition(e){return this.conditions.hasOwnProperty(e.name)}isContactingBall(e,t){e=this.getTiredness(e);return(t=BaseballPlayer.normalizeToTen(t))<=this.getThwackiness()+this.getHunger()-e||this.getThwackiness()+this.getHunger()-e>5*Model.rng.random()+5*Model.rng.random()}isSwingingBat(e,t){e=this.getTiredness(e);return(t=BaseballPlayer.normalizeToTen(t))+this.getHunger()>=10-this.getSwinginess()-e||this.getSwinginess()+this.getHunger()-e>6*Model.rng.random()+6*Model.rng.random()}modifyGameWithConditions(e){let t="";for(var a of Object.values(this.conditions))t+=a.modifyGame(e);return t}removeCondition(e){delete this.conditions[e]}setAttributes(e={}){for(var t in e)this.attributes.hasOwnProperty(t)&&(this.attributes[t]=e[t])}setData(e={}){for(var t in e)this.hasOwnProperty(t)&&(this[t]=e[t])}setHungerDown(){.01<this.getHunger()?this.attributes.hunger*=.5:this.attributes.hunger=.01}setHungerUp(){this.attributes.hunger+=Model.rng.random()*this.getMetabolism()*.1+Model.rng.random()*this.getMetabolism()*.1}setFromSeasonTicketHolders(){var e=SeasonTicketHolders.players.pop();e&&(this.setData(e),this.setAttributes(e))}update(){for(var[e,t]of Object.entries(this.conditions))t.reduceDuration(),t.active||this.removeCondition(e)}}class BaseballTeam{static idCounter=0;static restructure(t){(t=Object.setPrototypeOf(t,BaseballTeam.prototype)).crest=Crest.restructure(t.crest),t.manager=EventManager.restructure(t.manager),null!=t.pitcher&&(t.pitcher=BaseballPlayer.restructure(t.pitcher));for(let e=0;e<t.players.length;e++)t.players[e]=BaseballPlayer.restructure(t.players[e]);return null!=t.captain&&(t.captain=BaseballPlayer.restructure(t.captain)),t.stats=Stats.restructure(t.stats),t}static teamPlaceList=[];static playersPerTeam=9;constructor(e){this.leagueIdNumber=e,this.teamIdNumber=BaseballTeam.idCounter++,this.jerseyNumberList=[],this.colorScheme=colorCombinations.splice(Math.floor((3*(this.leagueIdNumber+1)+3*Model.rng.random())%colorCombinations.length),1)[0],this.place=null,0<Name.places.length&&(this.place=Name.places.splice(Math.floor(Model.rng.random()*Name.places.length),1)[0]),this.crest=new Crest(this.colorScheme,this.place.abbreviation),this.mascot=Name.teamNameList.splice(Math.floor(Model.rng.random()*Name.teamNameList.length),1)[0],this.pitcher=null,this.captain=null,this.mood=.5*Model.rng.random()+.5*Model.rng.random(),this.hunger=1,this.hungerRate=.35,this.players=[],this.stats=new Stats,this.xp=0,this.batterUpNumber=0,this.manager=new EventManager}addPlateAppearances(){this.stats.plateAppearances++}addAtBats(){this.stats.atBats++}addBasesOnBalls(){this.stats.basesOnBalls++}addDoubles(){this.stats.doubles++,this.addHits(),this.addTotalBases(2)}addHits(){this.stats.hits++}addHomeRuns(){this.stats.homeRuns++,this.addHits(),this.addTotalBases(4)}addHomeRunsAllowed(){this.stats.homeRunsAllowed++}addInningsPitched(){this.stats.inningsPitched++}addLoss(){this.stats.losses++,this.stats.gamesPlayed++;for(var e of this.players)e.addLoss()}addRunsAllowed(){this.stats.runsAllowed++}addRunsScored(){this.stats.runsScored++}addSacrificeFlies(){this.stats.sacrificeFlies++,this.addHits(),this.addTotalBases(1)}addSingles(){this.stats.singles++,this.addHits(),this.addTotalBases(1)}addStrikeoutsAtBat(){this.stats.strikeoutsAtBat++}addStrikeoutsThrown(){this.stats.strikeoutsThrown++}addTotalBases(e){this.stats.totalBases+=e}addTriples(){this.stats.triples++,this.addHits(),this.addTotalBases(3)}addWalksAllowed(){this.stats.walksAllowed++}addWin(){this.stats.wins++,this.stats.gamesPlayed++;for(var e of this.players)e.addWin()}addPlayer(e){e.teamPlaceAbbreviation=this.place.abbreviation,e.teamPlaceName=this.place.name,e.teamMascot=this.mascot,e.colorScheme=this.colorScheme,e.crest=this.crest,e.teamLeagueIdNumber=this.leagueIdNumber,e.jerseyNumber=this.getJerseyNumber(),this.players.push(e),this.setup()}equals(e){return this.teamIdNumber===e.teamIdNumber&&this.mascot===e.mascot&&this.teamPlaceName===e.teamPlaceName&&this.colorScheme===e.colorScheme}getJerseyNumber(){let t=Math.floor(98*Model.rng.random())+1;for(let e=0;e<BaseballTeam.playersPerTeam&&this.jerseyNumberList.includes(t);e++)t=Math.floor(98*Model.rng.random())+1;return this.jerseyNumberList.push(t),t}getName(e=40){return this.crest.render(e)+"&nbsp;"+this.place.abbreviation.toUpperCase()+" "+this.mascot}getNameWithLink(e=40){return this.crest.render(e)+'&nbsp;<a href="#" class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" onclick="app.view.statsModal.update('+this.leagueIdNumber+');" data-bs-target="#statsModal" data-bs-toggle="modal" >'+this.place.abbreviation.toUpperCase()+" "+this.mascot+"</a>"}getFullName(e=40){return this.crest.render(e)+"&nbsp;"+this.place.name.toUpperCase()+" "+this.mascot}getFullNameWithLink(e=40){return this.crest.render(e)+'&nbsp;<a href="#" class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" onclick="app.view.statsModal.update('+this.leagueIdNumber+');" data-bs-target="#statsModal" data-bs-toggle="modal" >'+this.place.name.toUpperCase()+" "+this.mascot+"</a>"}getPlace(e=40){return this.crest.render(e)+"&nbsp;"+this.place.name.toUpperCase()}getNextBatter(){return this.players[this.batterUpNumber++%this.players.length]}getPitcher(){return null==this.pitcher&&this.setup(),this.pitcher}getPlayerList(){let e="";for(var t of this.players)e+=`
            <tr>
                <td>
                    <a href="#" onclick="app.view.statsModal.update(${t.leagueIdNumber})" class="link text-light link-offset-2 link-light link-underline-opacity-25 link-underline-opacity-100-hover">
                        ${t.firstName} "${t.nickName}" ${t.lastName}
                    </a>
                </td>
                <td>${t.position}</td>
            </tr>
        `;return e.trim()}getRandomPlayer(){return this.players[Math.floor(Model.rng.random()*this.players.length)]}getSlugger(){var e;return 0!=this.stats.gamesPlayed&&((e=[...this.players]).sort((e,t)=>t.stats.hits-e.stats.hits),0<e[0].stats.hits)?e[0]:this.captain}getStats(){return this.getFullName()+"\n"+this.stats}getTeamAptitude(){let e=0;for(var t of this.players)e=(e+=parseFloat(t.getBattingAptitude()))+parseFloat(t.getDefenseAptitude());return(e+=this.pitcher.getPitchingAptitude())/(2*this.players.length+1)*100/100}getWinRatio(){return 0==this.stats.gamesPlayed?0:this.stats.gamesWon/this.stats.gamesPlayed}levelUpPlayers(){let e="";for(var t of this.players)t.isLevelUp()&&(e+=t.setLevelUp()),t.updateXp();return this.setup(),e}removePlayer(e){e.teamPlaceAbbreviation=null,e.teamMascot=null,e.colorScheme=null,e.crest=null,this.players.remove(e),this.setup()}resetSeasonStats(){this.stats=new Stats}setHungerUp(){for(var e of this.players)e.setHungerUp()}setHungerDown(){for(var e of this.players)e.setHungerDown()}setPositions(){for(var e of this.players)e.position=null;this.players.sort(function(e,t){return t.getPitchingAptitude()-e.getPitchingAptitude()});for(var t of this.players)if(null==t.position){t.position="Pitcher",this.pitcher=t;break}this.players.sort(function(e,t){return t.getBattingAptitude()-e.getBattingAptitude()});for(var a of this.players)if(null==a.position){a.position="Captain",this.captain=a;break}if(4<=this.players.length){var s,r=this.players[0];this.players[0]=this.players[3],this.players[3]=r;for(s of this.players)null==s.position&&(s.position=s.getDefaultPosition())}}setup(){this.setPositions()}getStatsTable(){return`
        <ul class="nav nav-tabs nav-fill" id="teamTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary active" id="players-tab" data-bs-toggle="tab" data-bs-target="#players" 
                type="button" role="tab" aria-controls="players" aria-selected="true">Players</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" 
                type="button" role="tab" aria-controls="info" aria-selected="false">Info</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="crest-tab" data-bs-toggle="tab" data-bs-target="#crest" 
                type="button" role="tab" aria-controls="crest" aria-selected="false">Crest</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" 
                type="button" role="tab" aria-controls="stats" aria-selected="false">Stats</button>
            </li>

            <!--li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="lifetime-tab" data-bs-toggle="tab" data-bs-target="#lifetime" 
                type="button" role="tab" aria-controls="lifetime" aria-selected="false">Lifetime Stats</button>
            </li-->
        </ul>

        <div class="tab-content" id="teamTabContent">
            <!-- Players Tab -->
            <div class="tab-pane fade show active" id="players" role="tabpanel" aria-labelledby="players-tab">
                <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                    <tr>
                        <th colspan="2" class="text-center">Players</th>
                    </tr>
                    ${this.getPlayerList()}
                    <tr><td>Number of Players</td><td>${this.players.length}</td></tr>
                </table>
            </div>



            <!-- Info Tab -->
            <div class="tab-pane fade" id="info" role="tabpanel" aria-labelledby="info-tab">
                <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                    <tr><td>League ID</td><td>${this.leagueIdNumber}</td></tr>
                    <tr><td>Place</td><td>${this.place.abbreviation}, ${this.place.name}</td></tr>
                    <tr><td>Team Name</td><td>${this.mascot}</td></tr>
                    <tr><td>Crest</td><td>${this.crest.render()}</td></tr>
                    <tr><td>Color Scheme Light</td>
                        <td><div style="color:black;background:${this.colorScheme.light};">${this.colorScheme.light}</div></td>
                    </tr>
                    <tr><td>Color Scheme Mid</td>
                        <td><div style="color:black;background:${this.colorScheme.mid};">${this.colorScheme.mid}</div></td>
                    </tr>
                    <tr><td>Color Scheme Dark</td>
                        <td><div style="background:${this.colorScheme.dark};">${this.colorScheme.dark}</div></td>
                    </tr>
                    <tr><td>Team Aptitude</td><td>${this.getTeamAptitude().toFixed(1)}</td></tr>
                    <tr><td>Mood</td><td>${this.mood.toFixed(1)}</td></tr>
                    <tr><td>Hunger</td><td>${this.hunger.toFixed(1)}</td></tr>
                    <tr><td>Hunger Rate</td><td>${this.hungerRate.toFixed(1)}</td></tr>
                    <tr><td>XP</td><td>${this.xp.toFixed(1)}</td></tr>
                    <tr><td>Batter Up Number</td><td>${this.batterUpNumber}</td></tr>
                    <tr><td>Jersey Numbers</td><td>${this.jerseyNumberList.join(", ")}</td></tr>
                </table>
            </div>
                        <!-- Stats Tab -->
            <div class="tab-pane fade" id="crest" role="tabpanel" aria-labelledby="crest-tab">
                <div class="row">
                    <div class="col text-center">
                    ${this.crest.render(300)}
                    </div>
                    
                </div>
            </div>

                        <!-- Stats Tab -->
            <div class="tab-pane fade" id="stats" role="tabpanel" aria-labelledby="stats-tab">
                <div class="row">
                    <div class="col col-lg-6">
                    ${this.stats.getRecordAndPitcherStats()}
                    </div>
                    <div class="col col-lg-6">
                    ${this.stats.getBatterStats()}
                    </div>
                </div>
            </div>

            <!-- Lifetime Stats Tab -->
            <!--div class="tab-pane fade" id="lifetime" role="tabpanel" aria-labelledby="lifetime-tab">
                <div class="row">
                    <div class="col col-lg-6">
                    {//this.lifetimeStats.getRecordAndPitcherStats()}
                    </div>
                    <div class="col col-lg-6">
                    {//this.lifetimeStats.getBatterStats()}
                    </div>
                </div>
            </div-->
        </div>
    `.trim()}updateXp(){this.xp+=this.dailyXp,this.dailyXp=0}}class League{static leagueIdNumberCount=0;static restructure(t){Object.setPrototypeOf(t,League.prototype);for(let e=0;e<t.teams.length;e++)t.teams[e]=BaseballTeam.restructure(t.teams[e]);for(let e=0;e<t.freeAgentList.length;e++)t.freeAgentList[e]=Object.setPrototypeOf(t.freeAgentList[e],BaseballPlayer.prototype);for(let e=0;e<t.seasons.length;e++)t.seasons[e]=Object.setPrototypeOf(t.seasons[e],Season.prototype);return t.crest=Crest.restructure(t.crest),t}constructor(e,t){this.numberOfTeams=e,this.teams=[],this.freeAgentList=[];for(let e=0;e<this.numberOfTeams;e++){var a=new BaseballTeam(League.leagueIdNumberCount++);a.manager.subscribe(this.handleEvent),this.teams.push(a);for(let e=0;e<BaseballTeam.playersPerTeam;e++){let e=new BaseballPlayer(League.leagueIdNumberCount++,t);var s=new BaseballPlayer(League.leagueIdNumberCount++,t);e.getOverallAptitude()<s.getOverallAptitude()&&(e=s),a.addPlayer(e),e.manager.subscribe(this.handleEvent),League.leagueIdNumberCount%3==0&&e.setFromSeasonTicketHolders()}}this.seasons=[],this.seasons[t]=new Season(this.teams),this.colorScheme={light:"#7aafff",mid:"#D50032",dark:"#002D72"},this.crest=new Crest(this.colorScheme,"ioLB",17,0,7,2),this.commissionerLastName=Name.create_last_name()}getPlayer(a){for(let t=0;t<this.teams.length;t++)for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].equals(a))return this.teams[t].players[e];for(let e=0;e<this.freeAgentList.length;e++)if(this.freeAgentList[e].equals(a))return this.freeAgentList[e];return null}getCommissionerFullName(){return this.crest.render(40)+" Commissioner "+this.commissionerLastName}getGameDetails(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].getGameDetails(t)}getSchedule(e){if(null==e)throw new Error("null year");return this.seasons[e].regularSeasonSchedule}getStandingsTableBatters(t){var a=[];for(let t=0;t<this.teams.length;t++)for(let e=0;e<this.teams[t].players.length;e++)a.push(this.teams[t].players[e]);a.sort((e,t)=>t.stats.getBattingAverage()-e.stats.getBattingAverage());let s=1,r=null,i=1,n=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidde  table-borderless">
        <thead>
    <tr>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League rank">#</a>
        </th>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the batter">Top Batters</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Batting Average: hits divided by at-bats">BA</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Total number of hits achieved">Hits</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Hits per Game">H/G</a>
        </th>
    </tr>
</thead>
        <tbody>
    `,o=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.hits!==r&&(s=i,r=l.stats.hits),i++,n+=`
        <tr class="overflow-hidden">
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getBattingAverage()}</td>
            <td class="text-center" >${l.stats.hits}</td>
            <td class="text-center" >${l.stats.getHitsPerGame()}</td>
        </tr>
        `,++o>=t)break}return n+="</tbody></table>"}getStandingsTablePitchers(t){var e,a=[];for(e of this.teams)a.push(e.pitcher);a.sort((e,t)=>t.stats.getStrikeoutsPerNineInnings()-e.stats.getStrikeoutsPerNineInnings());let s=1,r=null,i=1,n=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidde  table-borderless">
        <thead>
            <tr>
                <th class="text-secondary">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League Rank">#</a>
                </th>
                <th class="text-secondary">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the pitcher">Top Pitchers</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Strikeouts per nine innings pitched">SO/9</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Total number of strikeouts achieved">SO</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Earned Run Average: the average number of earned runs allowed per nine innings pitched">ERA</a>
                </th>
            </tr>
        </thead>
        <tbody>
    `,o=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.strikeoutsThrown!==r&&(s=i,r=l.stats.strikeoutsThrown),i++,n+=`
        <tr>
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getStrikeoutsPerNineInnings()}</td>
            <td class="text-center" >${l.stats.strikeoutsThrown}</td>
            <td class="text-center" >${l.stats.getEarnedRunAverage()}</td>
        </tr>
        `,++o>=t)break}return n}getStandingsTeams(e){var t=[...this.teams];return t.sort((e,t)=>{var a=e.stats.wins/(e.stats.wins+e.stats.losses||1),s=t.stats.wins/(t.stats.wins+t.stats.losses||1);return s!=a?s-a:t.stats.wins!==e.stats.wins?t.stats.wins-e.stats.wins:e.stats.losses-t.stats.losses}),t}getStandingsTableTeams(){var t=this.getStandingsTeams(this.teams);let a=1,s=null,r=null,i=null,n=1,o=`
            <table class="table table-striped table-dark shadow rounded-2 overflow-hidde table-borderless">
                <thead>
                    <tr>
                        <th class="text-secondary">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League Rank">#</a>
                        </th>
                        <th class="text-secondary">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the team">Team Name</a>
                        </th>
                        <th class="text-secondary text-center">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Win-Loss record of the team">W - L</a>
                        </th>
                    </tr>
                </thead>
                <tbody>
        `;for(let e=0;e<t.length;e++){var l=t[e],d=(l.stats.wins/(l.stats.wins+l.stats.losses||1)).toFixed(3);d===s&&l.stats.wins===r&&l.stats.losses===i||(a=n,s=d,r=l.stats.wins,i=l.stats.losses),n++,o+=`
                <tr>
                    <td>${a}</td>
                    <td>${l.getNameWithLink()}</td>
                    <td class="text-center" >${l.stats.wins} - ${l.stats.losses}</td>
                </tr>
            `}return o+="</tbody></table>"}getStandingsTableTeamScoring(t){var a=[...this.teams];a.sort((e,t)=>t.stats.getRunsPerPlateAppearance()-e.stats.getRunsPerPlateAppearance());let s=1,r=null,i=1,n=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidde  table-borderless">
        <thead>
    <tr>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League rank">#</a>
        </th>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the Team">Top Scoring Teams</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary " data-toggle="tooltip" title="Runs per Plate Appearance">R/PA</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Batting Average: hits divided by at-bats">BA</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Runs per Game">R/G</a>
        </th>
    </tr>
</thead>
        <tbody>
    `,o=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.getRunsPerPlateAppearance()!==r&&(s=i,r=l.stats.getRunsPerPlateAppearance()),i++,n+=`
        <tr class="overflow-hidden">
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getRunsPerPlateAppearance()}</td>
            <td class="text-center" >${l.stats.getBattingAverage()}</td>
            <td class="text-center" >${l.stats.getRunsPerGame()}</td>
        </tr>
        `,++o>=t)break}return n+="</tbody></table>"}getTeam(t){for(let e=0;e<this.teams.length;e++)if(this.teams[e].equals(t))return this.teams[e];return null}getTeamsPlayingToday(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].regularSeasonSchedule.getTeamsPlayingToday(t)}getNameableByFullName(a){for(let t=0;t<this.teams.length;t++){if(this.teams[t].getFullName()===a)return this.teams[t];for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].getFullName()===a)return this.teams[t].players[e]}return null}handleEvent=e=>{switch(e.hasOwnProperty("playerId")&&null!=e.playerId&&this.lookup(e.playerId).update(),e.eventType){case GameEventType.GAME_WINNER:this.lookup(e.teamId).addWin();break;case GameEventType.GAME_LOSER:this.lookup(e.teamId).addLoss();break;case GameEventType.PLATE_APPEARANCES:this.lookup(e.teamId).addPlateAppearances(),this.lookup(e.playerId).addPlateAppearances();break;case GameEventType.SINGLES:this.lookup(e.teamId).addSingles(),this.lookup(e.playerId).addSingles();break;case GameEventType.DOUBLES:this.lookup(e.teamId).addDoubles(),this.lookup(e.playerId).addDoubles();break;case GameEventType.TRIPLES:this.lookup(e.teamId).addTriples(),this.lookup(e.playerId).addTriples();break;case GameEventType.HOME_RUNS:this.lookup(e.teamId).addHomeRuns(),this.lookup(e.playerId).addHomeRuns();break;case GameEventType.BASES_ON_BALLS:this.lookup(e.teamId).addBasesOnBalls(),this.lookup(e.playerId).addBasesOnBalls();break;case GameEventType.SACRIFICE_FLIES:this.lookup(e.teamId).addSacrificeFlies(),this.lookup(e.playerId).addSacrificeFlies();break;case GameEventType.STRIKEOUTS_AT_BAT:this.lookup(e.teamId).addStrikeoutsAtBat(),this.lookup(e.playerId).addStrikeoutsAtBat();break;case GameEventType.INNINGS_PITCHED:this.lookup(e.teamId).addInningsPitched(),this.lookup(e.playerId).addInningsPitched();break;case GameEventType.STRIKEOUTS_THROWN:this.lookup(e.teamId).addStrikeoutsThrown(),this.lookup(e.playerId).addStrikeoutsThrown();break;case GameEventType.RUNS_ALLOWED:this.lookup(e.teamId).addRunsAllowed(),this.lookup(e.playerId).addRunsAllowed();break;case GameEventType.HOME_RUNS_ALLOWED:this.lookup(e.teamId).addHomeRunsAllowed(),this.lookup(e.playerId).addHomeRunsAllowed();break;case GameEventType.WALKS_ALLOWED:this.lookup(e.teamId).addWalksAllowed(),this.lookup(e.playerId).addWalksAllowed();break;case GameEventType.RUNS_SCORED:this.lookup(e.teamId).addRunsScored(),this.lookup(e.playerId).addRunsScored();break;case GameEventType.AT_BATS:this.lookup(e.teamId).addAtBats(),this.lookup(e.playerId).addAtBats()}};isRegularSeasonDone(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].isRegularSeasonDone(t)}isTodayDone(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].isTodayDone(t)}lookup(a){for(let t=0;t<this.teams.length;t++){if(this.teams[t].leagueIdNumber===a)return this.teams[t];for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].leagueIdNumber===a)return this.teams[t].players[e]}for(let e=0;e<this.freeAgentList.length;e++)if(this.freeAgentList[e].leagueIdNumber===a)return this.freeAgentList[e];return null}reloadTeams(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");for(var a of this.seasons[e].getTodaysGames(t))a.homeTeam=this.lookup(a.homeTeam.leagueIdNumber),a.awayTeam=this.lookup(a.awayTeam.leagueIdNumber)}skipToday(){for(;!this.isTodayDone();)this.nextGameMessages()}setPrintSchedule(e){if(null==e)throw new Error("null year");this.seasons[e].regularSeasonSchedule.setPrintSchedule()}addNewSeason(){for(var e of this.teams){e.resetSeasonStats();for(var t of e.players)t.updateCareerStats(),t.resetSeasonStats()}this.seasons.push(new Season(this.teams))}doPlayoffs(e,t=0){if(null==e)throw new Error("null year");this.seasons[e].doPlayoffs(t)}isSeasonOver(e){if(null==e)throw new Error("null year");return this.seasons[e].arePlayoffsOver()?True:False}nextGameMessages(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].nextGameMessages(t)}}let SeasonStates={PRESEASON:0,REGULAR_SEASON:1,PLAYOFF_TOURNAMENT:2,POSTSEASON:3};class Season{static idCounter=0;static restructure(t){Object.setPrototypeOf(t,Season.prototype);for(let e=0;e<t.teams.length;e++)t.teams[e]=BaseballTeam.restructure(t.teams[e]);return t.regularSeasonSchedule=RegularSeasonSchedule.restructure(t.regularSeasonSchedule),t}constructor(e){this.seasonIdNumber=Season.idCounter++,this.hasStarted=!1,this.done=!1,this.state=SeasonStates.REGULAR_SEASON,this.numberOfTeams=e.length,this.regularSeasonSchedule=new RegularSeasonSchedule(e),this.playoffSchedulechedule=null,this.teams=e,this.regularSeasonScheduleComplete=!1,this.playoffScheduleComplete=!1}doRegularSeason(){}getGameDetails(e){if(null==e)throw new Error("null day");if(this.state===SeasonStates.REGULAR_SEASON)return this.regularSeasonSchedule.getGameDetails(e)}getStandings(){let e="",t=1;var a,s,r,i=[];for(a in this.standings)i.push({teamName:a,wins:this.standings[a].wins,losses:this.standings[a].losses});i.sort(function(e,t){return t.wins-e.wins});let n=0;for(s of i)n=Math.max(n,s.getName().length+1);for(r of i)e=(e=(e+=t+". ")+r.getName()+": ")+r.wins+"-"+r.losses+"\n",t+=1}getTodaysGames(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON?this.regularSeasonSchedule.days[e]:null!=this.playoffSchedule&&this.state==SeasonStates.PLAYOFF_TOURNAMENT?this.playoffSchedule.days[e]:void 0}doPlayoffs(e=0){let t,a,s,r,i;null==this.playoffSchedulechedule&&this.daysPlayoffWeekOne(),a=this.playoffSchedulechedule[this.currentPlayoffWeek][this.currentPlayoffDay],i=a[0].rank<a[1].rank?(r=a[1],a[0]):(r=a[0],a[1]),(t=new Game(r.team,i.team)).generate(e),this.standings[t.winningTeam.getName()].wins+=1,this.standings[t.losingTeam.getName()].losses+=1,s=t.winningTeam==i.team?i:r,this.currentPlayoffWeek<this.playoffSchedulechedule.length-1?(this.playoffSchedulechedule[this.currentPlayoffWeek+1][Math.floor(this.currentPlayoffDay/2)].push(s),this.currentPlayoffDay+=1,this.currentPlayoffDay>=this.playoffSchedulechedule[this.currentPlayoffWeek].length&&(this.currentPlayoffWeek+=1,this.currentPlayoffDay=0)):this.playoffScheduleComplete=!0}isRegularSeasonDone(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON&&e>=this.regularSeasonSchedule.days.length-1}isTodayDone(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON?this.regularSeasonSchedule.isTodayDone(e):null!=this.playoffSchedule&&this.state==SeasonStates.PLAYOFF_TOURNAMENT?this.playoffSchedule.isTodayDone(e):void 0}next(){switch(this.state){case SeasonStates.PRESEASON:case SeasonStates.REGULAR_SEASON:case SeasonStates.PLAYOFF_TOURNAMENT:}}nextGameMessages(e){if(null==e)throw new Error("null day");if(this.state===SeasonStates.REGULAR_SEASON)return this.regularSeasonSchedule.nextGameMessages(e)}}class BaseballGameBoxScore{static restructure(e){return Object.setPrototypeOf(e,BaseballGameBoxScore.prototype),e}constructor(e,t){if(null===e)throw new Error("awayTeam can not be null");if(null===t)throw new Error("homeTeam can not be null");this.inningNumbers=[],this.away={name:e.getFullNameWithLink(),innings:[],runs:0,hits:0,errors:0},this.home={name:t.getFullNameWithLink(),innings:[],runs:0,hits:0,errors:0}}addNewInning(e,t,a){if(null===e)throw new Error("isTopOfInning can not be null");e&&!t&&(this.away.innings.push(0),this.inningNumbers.push(a)),!e&&t&&this.home.innings.push(0)}incrementHits(e){if(null===e)throw new Error("isTopOfInning can not be null");e?this.away.hits++:this.home.hits++}incrementScore(e){if(null===e)throw new Error("isTopOfInning can not be null");e?(this.away.innings[this.away.innings.length-1]++,this.away.runs++):(this.home.innings[this.home.innings.length-1]++,this.home.runs++)}getBoxScoreTable(){var e=Math.max(this.away.innings.length,this.home.innings.length),t=(a,e)=>Array.from({length:e},(e,t)=>`<td>${a[t]??""}</td>`).join("");return`
            <table class="table table-dark table-striped table-bordered text-center shadow overflow-hidden">
                <thead>
                    <tr>
                        <th class="text-secondary">Team</th>
                        ${Array.from({length:e},(e,t)=>`<th class="text-secondary">${this.inningNumbers[t]}</th>`).join("")}
                        <th class="text-secondary">R</th>
                        <th class="text-secondary">H</th>
                        <th class="text-secondary">E</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="text-start">${this.away.name}</td>
                        ${t(this.away.innings,e)}
                        <td>${this.away.runs}</td>
                        <td>${this.away.hits}</td>
                        <td>${this.away.errors}</td>
                    </tr>
                    <tr>
                        <td class="text-start">${this.home.name}</td>
                        ${t(this.home.innings,e)}
                        <td>${this.home.runs}</td>
                        <td>${this.home.hits}</td>
                        <td>${this.home.errors}</td>
                    </tr>
                </tbody>
            </table>
        `.trim()}getScore(e){if(null===e)throw new Error("inningString can not be null");return 0==this.away.innings.length?this.away.name+" @ "+this.home.name:"<span class='pe-4'>"+e+"</span><span class='pe-4'>"+this.away.name+":&nbsp;"+this.getAwayScore()+"</span><span class='pe-4'>"+this.home.name+":&nbsp;"+this.getHomeScore()+"</span>"}getAwayScore(){return this.away.runs}getHomeScore(){return this.home.runs}}class BaseballGameMessage{static restructure(e){return Object.setPrototypeOf(e,BaseballGameMessage.prototype),e}constructor(e,t){this.name=e.name,this.inning=e.getInningString(),this.homeTeam=e.homeTeam.getName(),this.homeTeamPlace=e.homeTeam.place,this.homeNameWithLink=e.homeTeam.getNameWithLink(),this.homeId=e.homeTeam.leagueIdNumber,this.awayTeam=e.awayTeam.getName(),this.awayNameWithLink=e.awayTeam.getNameWithLink(),this.awayId=e.awayTeam.leagueIdNumber,this.score=structuredClone({away:e.scoreboard.getAwayScore(),home:e.scoreboard.getHomeScore()}),this.scoreString=e.getScore(),this.baseIcons=e.getBaseIcons(),this.count=structuredClone(e.count),this.boxScoreTable=e.scoreboard.getBoxScoreTable(),this.done=e.done,this.log="",null!=t&&(this.log+=t)}add(e){"string"==typeof e?this.log.append(e):BaseballGameMessage.prototype.isPrototypeOf(e)&&(this.log+=e.log)}setGameState(e){this.name=e.name,this.inning=e.getInningString(),this.homeTeam=e.homeTeam.getName(),this.homeTeamPlace=e.homeTeam.place,this.homeNameWithLink=e.homeTeam.getNameWithLink(),this.homeId=e.homeTeam.leagueIdNumber,this.awayTeam=e.awayTeam.getName(),this.awayNameWithLink=e.awayTeam.getNameWithLink(),this.awayId=e.awayTeam.leagueIdNumber,this.score=structuredClone({away:e.scoreboard.getAwayScore(),home:e.scoreboard.getHomeScore()}),this.scoreString=e.getScore(),this.baseIcons=e.getBaseIcons(),this.count=structuredClone(e.count),this.boxScoreTable=e.scoreboard.getBoxScoreTable(),this.done=e.done}}class BaseballGame{static idCounter=0;static restructure(e){return Object.setPrototypeOf(e,BaseballGame.prototype),e.homeTeam=BaseballTeam.restructure(e.homeTeam),e.awayTeam=BaseballTeam.restructure(e.awayTeam),e.defenseTeam=BaseballTeam.restructure(e.defenseTeam),e.offenseTeam=BaseballTeam.restructure(e.offenseTeam),e.scoreboard=BaseballGameBoxScore.restructure(e.scoreboard),null!=e.batter&&(e.batter=BaseballPlayer.restructure(e.batter)),e.pitcher=BaseballPlayer.restructure(e.pitcher),e.gameState=AbstractBaseballGameState.restructure(e.gameState),null!=e.onBase[0]&&(e.onBase[0]=BaseballPlayer.restructure(e.onBase[0])),null!=e.onBase[1]&&(e.onBase[1]=BaseballPlayer.restructure(e.onBase[1])),null!=e.onBase[2]&&(e.onBase[2]=BaseballPlayer.restructure(e.onBase[2])),e}static useAOrAn(e){return-1!="aeiou".indexOf(e.toLowerCase().charAt(0))?"an":"a"}static pitchDescriptions=["mint condition++","excellent++","outstanding++","exceptional++","superior++","impressive++","good+","competent+","strong+","reliable+","admirable+","average","satisfactory","adequate","mediocre","passable","meh-","deficient-","insufficient-","inadequate-","weak-","flailing--","unacceptable--","unsatisfactory--","lacking--","inferior--","wild--"];constructor(e,t){if(null===e)throw new Error("awayTeamObject can not be null");if(null===t)throw new Error("homeTeamObject can not be null");this.name=e.getNameWithLink()+" @ "+t.getNameWithLink(),this.hasStarted=!1,this.done=!1,this.finalMessage=!1,this.gameIdNumber=BaseballGame.idCounter++,this.homeTeam=t,this.awayTeam=e,this.pitchNumber=0,this.defenseTeam=this.homeTeam,this.offenseTeam=this.awayTeam,this.batter=null,this.count={balls:0,strikes:0,outs:0},this.scoreboard=new BaseballGameBoxScore(e,t),this.inning=0,this.isTopOfInning=!0,this.gameState=new PlayBall,this.onBase=[null,null,null],this.weather=AbstractWeather.generateRandomWeather(this.awayTeam.getName()+this.homeTeam.getName()+this.gameIdNumber),this.weather.setup(this)}addBoxScoreInning(){this.scoreboard.addNewInning(this.isTopOfInning,this.offenseTeam.equals(this.homeTeam),this.inning)}getBaseRunnerAdvancesOrScores(e,t,a=!1){return this.onBase[e]&&3<=e+t?this.getBaseRunnerScores(e,t,a):(this.onBase[e]&&0<t&&(this.onBase[e+t]=this.onBase[e],this.onBase[e]=null),"")}getBaseRunnerCount(){let e=0;for(var t of this.onBase)null!=t&&e++;return e}getBaseRunnerMovement(e,t=!1){var a="";return(a+=this.getBaseRunnerScores(2,e=e||0,t))+this.getBaseRunnerAdvancesOrScores(1,e)+this.getBaseRunnerAdvancesOrScores(0,e)}getBaseRunnerScores(e,t,a=!1){return this.onBase[e]&&3<=e+t?(t=this.onBase[e],this.incrementScore(),this.offenseTeam.manager.notify(new GameEvent(GameEventType.RUNS_SCORED,this.offenseTeam.leagueIdNumber,t.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.RUNS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.onBase[e]=null,a&&this.batter.manager.notify(new GameEvent(GameEventType.SACRIFICE_FLIES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),`<br>${t.getFullNameWithLink(20)} SCORES!`):""}getAtBat(e){let t="";var a;return this.batter.isSwingingBat(this.pitchNumber,e)?this.batter.isContactingBall(this.pitchNumber,e)?(a=this.batter.getHitScore(this.pitchNumber,e),a=this.weather.getHitScore(a),t+=this.getFlyBall(a)):(this.count.strikes++,t+="<br>"+this.batter.getFullNameWithLink(20)+" gets a STRIKE swinging, "+this.count.balls+"-"+this.count.strikes,3<=this.count.strikes&&(this.count.outs++,t+=" "+this.batter.getFullNameWithLink(20)+" STRIKES OUT swinging. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_AT_BAT,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_THROWN,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.setCountToZero(),this.gameState.previousState(this))):5<e?(this.count.strikes++,t+="<br>"+this.batter.getFullNameWithLink(20)+" gets a STRIKE looking, "+this.count.balls+"-"+this.count.strikes,3<=this.count.strikes&&(this.count.outs++,t+=" "+this.batter.getFullNameWithLink(20)+" STRIKES OUT looking. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_AT_BAT,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_THROWN,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.setCountToZero(),this.gameState.previousState(this))):(this.count.balls++,t+="<br>"+this.batter.getFullNameWithLink(20)+" is looking. BALL looking, "+this.count.balls+"-"+this.count.strikes,this.pitcher.setHungerUp(),4<=this.count.balls&&(this.gameState.previousState(this),t+=". Take your base.",this.batter.manager.notify(new GameEvent(GameEventType.BASES_ON_BALLS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.WALKS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),t+=this.walkAndAdvanceBaseRunners(),this.setCountToZero())),t}equals(e){return this.gameIdNumber===e.gameIdNumber&&this.homeTeam.equals(e.homeTeam)&&this.awayTeam.equals(e.awayTeam)&&this.jerseyNumber===e.jerseyNumber}getFlyBall(e){let t="";if(10<=e&&(t+=this.weather.getSpecialHitText(this.batter,e)),e<=2.5&&.5<Model.rng.random())t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a foul ball",this.count.strikes<2&&this.count.strikes++;else{var a=this.defenseTeam.getRandomPlayer(),s=a.getDefenseScore(this.pitchNumber);if(2*e<=s)t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a ground out to ",this.count.outs++,t+=a.getFullNameWithLink(20)+". "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),a.setHungerDown(),this.batter.setHungerUp(),this.count.outs<3&&(t+=this.getBaseRunnerMovement(1,!0));else if(e<=s)t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a fly ball. ",this.count.outs++,t+=a.getFullNameWithLink(20)+" makes the catch. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),a.setHungerDown(),this.batter.setHungerUp(),this.count.outs<3&&(t+=this.getBaseRunnerMovement(1,!0));else if(e<=1.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a SINGLE")+this.getBaseRunnerMovement(1),this.onBase[0]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.SINGLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else if(e<=2.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a DOUBLE")+this.getBaseRunnerMovement(2),this.onBase[1]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.DOUBLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else if(e<=3.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a TRIPLE")+this.getBaseRunnerMovement(3),this.onBase[2]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.TRIPLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else{switch(this.getBaseRunnerCount()){case 0:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a HOME RUN!";break;case 1:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a TWO-RUN HOME RUN!";break;case 2:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a THREE-RUN HOME RUN!";break;case 3:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a GRAND SLAM HOME RUN!"}this.incrementScore(),this.incrementHits(),t+=this.getBaseRunnerMovement(4),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.HOME_RUNS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.HOME_RUNS_ALLOWED,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.offenseTeam.manager.notify(new GameEvent(GameEventType.RUNS_SCORED,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.RUNS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber))}this.gameState.previousState(this),this.count.balls=0,this.count.strikes=0}return t}setCountToZero(){4<=this.count.balls&&(this.batter.setHungerDown(),this.pitcher.setHungerUp(),this.count.strikes=0,this.count.balls=0),3<=this.count.strikes&&(this.batter.setHungerUp(),this.pitcher.setHungerDown(),this.count.strikes=0,this.count.balls=0)}getAwayTeamName(){return this.awayTeam.getName()}getBalls(){return this.count.balls}getBaseIcons(){let e="";return null!=this.onBase[2]?e+="⬥":e+="⬦",null!=this.onBase[1]?e+="⬥":e+="⬦",null!=this.onBase[0]?e+="⬥":e+="⬦",e}getBatterFullName(){return this.batter.getFullName(20)}getBatterName(){return this.batter.getName()}getCountString(){return"B: "+this.count.balls+"<br>S: "+this.count.strikes+"<br>O: "+this.count.outs}getGameDetails(){return new BaseballGameMessage(this,"")}getHomeTeamName(){return this.homeTeam.getName()}getInning(){return this.inning}getInningString(){let e=this.weather.getIcon();return 0==this.pitchNumber?e+="🔜":0!=this.pitchNumber&&0==this.done?this.offenseTeam.equals(this.homeTeam)?e+=this.inning+"▼ ":this.offenseTeam.equals(this.awayTeam)&&(e+=this.inning+"▲ "):0!=this.pitchNumber&&this.finalMessage&&(this.offenseTeam.equals(this.homeTeam)?e+="FINAL "+this.inning+"▼ ":this.offenseTeam.equals(this.awayTeam)&&(e+="FINAL "+this.inning+"▲ ")),e}getLosingTeam(){return this.scoreboard.getHomeScore()<this.scoreboard.getAwayScore()?this.homeTeam:this.scoreboard.getHomeScore()>this.scoreboard.getAwayScore()?this.awayTeam:null}getOuts(){return this.count.outs}getOutsString(){return 1==this.count.outs?this.count.outs+" OUT!":1<this.count.outs?this.count.outs+" OUTS!":void 0}getPitchDescription(e){var t="";return 10<=e?this.pitcher.getFullNameWithLink(20)+" throws "+this.weather.getSpecialPitchText(e):(e=BaseballGame.pitchDescriptions[Math.floor(BaseballGame.pitchDescriptions.length-1-e*(BaseballGame.pitchDescriptions.length-1)/10)],(t+=this.pitcher.getFullNameWithLink(20)+" throws ")+BaseballGame.useAOrAn(e)+" "+e+" pitch")}getScore(){return this.hasStarted?this.getInningString()+" "+this.awayTeam.getNameWithLink()+":&nbsp;"+this.scoreboard.getAwayScore()+" "+this.homeTeam.getNameWithLink()+":&nbsp;"+this.scoreboard.getHomeScore():this.awayTeam.getNameWithLink()+" @ "+this.homeTeam.getNameWithLink()}getStrikes(){return this.count.strikes}getWinningTeam(){return this.scoreboard.getHomeScore()>this.scoreboard.getAwayScore()?this.homeTeam:this.scoreboard.getHomeScore()<this.scoreboard.getAwayScore()?this.awayTeam:null}hasNext(){return!this.done}incrementHits(){this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.scoreboard.incrementHits(this.isTopOfInning)}incrementInning(){this.inning++}incrementScore(){this.scoreboard.incrementScore(this.isTopOfInning)}isGameOver(){return this.done}next(){return new BaseballGameMessage(this,this.gameState.handle(this))}nextBatter(){return this.batter=this.offenseTeam.getNextBatter(),this.batter}nextPitch(){this.pitchNumber++;var e="",t=(this.pitcher=this.defenseTeam.getPitcher(),this.pitcher.getPitchScore(this.pitchNumber)),t=this.weather.getPitchScore(t);return(e+=this.getPitchDescription(t))+this.getAtBat(t)}setGameState(e){if(!(e instanceof AbstractBaseballGameState)||this.done)throw new Error("oof bad game state");this.gameState=e}setGameOver(){this.done=!0}setGameStarted(){this.hasStarted=!0}setInningTop(e){this.isTopOfInning=!0===e}setOffenseTeam(){this.isTopOfInning?(this.offenseTeam=this.awayTeam,this.defenseTeam=this.homeTeam):(this.offenseTeam=this.homeTeam,this.defenseTeam=this.awayTeam)}walkAndAdvanceBaseRunners(){let e="";return null!=this.onBase[0]&&(null==this.onBase[1]?this.onBase[1]=this.onBase[0]:null==this.onBase[2]?(this.onBase[2]=this.onBase[1],this.onBase[1]=this.onBase[0]):e=this.getBaseRunnerMovement(1)),this.onBase[0]=this.batter,e}}class GamePostComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});var e=document.createElement("template");e.innerHTML=`
            <style>
                /* Encapsulated styles */
                html,
                body {
                    margin-top: 0;
                    font-family: "Roboto Condensed", sans-serif;
                    font-optical-sizing: auto;
                    font-weight: 400;
                    font-style: normal;
                }

                a,
                a:visited {
                color: white; /* Set both regular and visited links to white */
                }

                .font-monospace {
                    font-family: monospace, monospace;
                }
                
                .post {
                    border-radius: 8px;
                    padding: 10px;
                    margin: 10px 0;
                    background-color: #121214;
                    color: hsl(228, 5%, 80%);
                }

                .username {
                    font-weight: bold;
                }

                .timestamp {
                    color: #657786;
                    font-size: 12px;
                }

                .baseIcon {
                    font-size: 2em;
                    line-height: 1;
                    vertical-align: baseline;
                }
                :host([logo="window"]) .baseIcon {
                    font-size: 3rem;
                    }

                sub.baseIcon,
                sup.baseIcon {
                    margin: 0; /* Remove extra space that might cause layout issues */
                    padding: 0;
                    line-height: 1;
                    display: inline-block; /* Ensures proper alignment */
                    align-items: center;
                    justify-content: center;
                    position: relative;
                    font-size: 2em;
                }

                /* Adjust the positioning offsets */
                sub.gamePostLeftBase {
                    transform: translateX(0.75em) translateY(0.2em);
                }
                :host([logo="window"]) sub.gamePostLeftBase {
                    transform: translateX(1.89rem) translateY(0rem);
                    }

                sup.gamePostCenterBase {
                    transform: translateX(0em) translateY(-0.2em);
                }
                :host([logo="window"]) sup.gamePostCenterBase {
                    transform: translateX(0rem) translateY(-1rem);
                    }

                sub.gamePostRightBase {
                    transform: translateX(-0.75em) translateY(0.2em);
                }
                :host([logo="window"]) sub.gamePostRightBase {
                    transform: translateX(-1.89rem) translateY(0rem);
                    }
                    
                @-moz-document url-prefix(){
                    sub.gamePostLeftBase {
                        transform: translateX(0.5em) translateY(0.2em);
                    }

                    sup.gamePostCenterBase {
                        transform: translateX(0em) translateY(-0.2em);
                    }

                    sub.gamePostRightBase {
                        transform: translateX(-0.5em) translateY(0.2em);
                    }
                }
                .weatherIcon{
                    width: 1rem;
                    height: 1rem;
                    border-radius: 5px;
                    margin-right:4px;
                }
                    [data-tooltip] {
                    position: relative;
                    display: inline-block; /* Ensures the container wraps tightly around the image */
                }
                
                [data-tooltip]:after {
                    content: attr(data-tooltip);
                    position: absolute;
                    left: 50%;
                    bottom: 90%; /* Position the tooltip above the element */
                    /*transform: translateX(-50%);*/ /* Center the tooltip */
                    background-color: #000;
                    color: #fff;
                    padding: 0px 8px;
                    border-radius: 4px;
                    font-size: 0.9rem;
                    /* white-space: nowrap; Prevent tooltip text from wrapping */
                    opacity: 0;
                    pointer-events: none; /* Prevent tooltip from interfering with mouse events */
                    width:100px;
                    text-align:center;
                }
                
                [data-tooltip]:hover:after {
                    opacity: 1;
                    z-index: 9999;
                }
            </style>

            <div class="post">
                <span class="username">
                    <span class="pe-4" id="inning"></span>
                    <span class="pe-4" id="away-team"></span>
                    <span class="pe-4" id="home-team"></span>
                </span> 
                <span class="timestamp" id="timestamp"></span>
                <p id="log"></p>
                <span>
                    <sub class="baseIcon font-monospace gamePostLeftBase" id="base-icon-0"></sub>
                    <sup class="baseIcon font-monospace gamePostCenterBase" id="base-icon-1"></sup>
                    <sub class="baseIcon font-monospace gamePostRightBase" id="base-icon-2"></sub>
                </span>
                <span class="font-monospace">
                    B: <span id="balls"></span> S: <span id="strikes"></span> O: <span id="outs"></span>
                </span>
            </div>
        `.trim(),this.shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){this.render(),this.shadowRoot.querySelectorAll("a").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.showStatsModal()})})}static removeSvg(e){return e.replace(/<svg[\s\S]*?<\/svg>/gi,"")}render(){var e=JSON.parse(this.getAttribute("game-message")),t=(new Date).toLocaleTimeString(),t=(this.shadowRoot.getElementById("inning").innerHTML=e.inning,this.shadowRoot.getElementById("away-team").innerHTML=GamePostComponent.removeSvg(e.awayTeam)+": "+e.score.away,this.shadowRoot.getElementById("home-team").innerHTML=GamePostComponent.removeSvg(e.homeTeam)+": "+e.score.home,this.shadowRoot.getElementById("timestamp").textContent=t,this.shadowRoot.getElementById("log").innerHTML=GamePostComponent.removeSvg(e.log),e.baseIcons),t=(this.shadowRoot.getElementById("base-icon-0").textContent=t.charAt(0),this.shadowRoot.getElementById("base-icon-1").textContent=t.charAt(1),this.shadowRoot.getElementById("base-icon-2").textContent=t.charAt(2),this.shadowRoot.getElementById("balls").textContent=e.count.balls,this.shadowRoot.getElementById("strikes").textContent=e.count.strikes,this.shadowRoot.getElementById("outs").textContent=e.count.outs,navigator.userAgentData?.platform.toLowerCase()||navigator.userAgent.toLowerCase());let a=t.includes("win")?"window":t.includes("mac")?"apple":"unknown";document.querySelectorAll("game-post").forEach(e=>{e.setAttribute("logo",a)})}showStatsModal(){var e=document.getElementById("statsModal");e?new bootstrap.Modal(e).show():console.error('Modal element with ID "statsModal" not found')}}customElements.define("game-post",GamePostComponent);class StatsModal{constructor(){this.root=View.createElement("div","statsModal","modal modal-dark"),this.root.innerHTML=`
            <div class="modal-dialog modal-dialog-centered  modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h4 id="statsModalTitle" class="modal-title">Modal Heading</h4>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div id="statsModalBody" class="modal-body overflow-auto">
                        Modal body..
                    </div>
                </div>
            </div>
        `.trim()}setText(e){({...e});document.getElementById("statsModalTitle").innerHTML=`<span class='noto shaded_outline_magenta'>${e.emoji}</span> `+e.name;var t={[CardType.CONCESSIONS]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> at end of day.</p>
                    <p>Then, Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> becomes Gain ${e.rewardamount2} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> for the next day.</p>
                </div>
            `,[CardType.JOKER]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> each time one of your ${e.othercard} Cards is triggered.</p>
                </div>
            `,[CardType.LUCKY_JOKER]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>${e.odds} chance to gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> when one of your ${e.othercard} Cards is triggered.</p>
                </div>
            `,[CardType.APOCRYPHA]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase. Wait... Apocrypha? Where did this come from?</p>
                    <p>Multiply your <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} when ${e.othercard} triggered.</p>
                    <p>Then, <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} becomes <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount2}</p>
                </div>
            `,[CardType.CELESTIAL]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase. WOW! This is a special card!</p>
                    <p>Multiply your <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} when ${e.othercard} triggered.</p>
                    <p>Then, <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} becomes <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount2}</p>
                </div>
            `,[CardType.POTION]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span> each time one of your ${e.othercard} is triggered.</p>
                    <p>Then, at the end of the day, Gain ${e.rewardamount}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span> becomes Gain ${e.rewardamount2}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span></p>
                </div>
            `};document.getElementById("statsModalBody").innerHTML=t[e.cardline4]||`
            <div class="container text-center">
                <p>No details available for this card type.</p>
            </div>
        `}update(e){var t=app.model.world.league.lookup(e);if(null===t)throw new Error("updateModal could not find "+e);document.getElementById("statsModalTitle").innerHTML=t.getFullName(),document.getElementById("statsModalBody").innerHTML=t.getStatsTable()}render(){return this.root}}class View{static addAlert(e,t,a=!1){var s=document.getElementById("alertContainer");let r=View.createElement("div",null,`alert alert-${e} alert-dismissible fade py-1 m-1`);r.innerHTML=`
            ${t}
            <button type="button" class="btn-close py-2" data-bs-dismiss="alert" aria-label="Close"></button>
        `,s.appendChild(r),setTimeout(()=>{r.classList.add("show")},50),a&&setTimeout(()=>{r.classList.remove("show"),setTimeout(()=>r.remove(),500)},4e3)}static createElement(e,t,a,s){let r=document.createElement(e);return t&&(r.id=t),a&&0<=a.indexOf(" ")?a.split(" ").forEach(e=>{0<e.length&&r.classList.add(e)}):a&&r.classList.add(a),s&&(r.innerHTML=s),r}constructor(){this.root=document.querySelector("#root"),this.root.innerHTML="",this.viewContainer=View.createElement("div","viewContainer","container mt-5 pt-5"),this.alertContainer=View.createElement("span","alertContainer","position-fixed alert-fixed w-25 mt-3 bottom-0 end-0 p-3"),this.navBar=new NavBar,this.addMenuItemHome(),this.addMenuItemSchedule(),this.addMenuItemStandings(),this.pageContainer=View.createElement("div","pageContainer"),this.userPage=new UserPage,this.pageContainer.append(this.userPage.render()),this.statsModal=new StatsModal,this.confirmModal=new ConfirmModal,this.faqModal=new FaqModal,this.viewContainer.append(this.pageContainer,this.statsModal.render(),this.confirmModal.render()),this.root.append(this.alertContainer,this.navBar.render(),this.viewContainer,this.faqModal.render())}addMenuItem(e,t,a){var s=View.createElement("li",t,"nav-item bg-transparent"),t=(s.setAttribute("role","button"),View.createElement("a",t+"Link","nav-link bg-transparent border-0 link-light link-opacity-25 link-opacity-100-hover"));t.dataset.linkToPageId=e,t.innerHTML=`<span class="mt-1 material-symbols-outlined">${a}</span>`,s.append(t),this.navBar.add(s)}addMenuItemHome(){this.addMenuItem("homePage","homePageMenuItem","home")}addMenuItemSchedule(){this.addMenuItem("schedulePage","schedulePageMenuItem","calendar_clock")}addMenuItemStandings(){this.addMenuItem("standingsPage","standingsPageMenuItem","format_list_numbered")}showPage(e){var t=document.getElementsByClassName("page"),t=(Array.from(t).forEach(e=>{e.classList.add("hide")}),document.getElementById(e)),a=(t.classList.remove("hide"),document.getElementsByClassName("page-item")),a=(Array.from(a).forEach(e=>{e.classList.remove("active")}),document.getElementById(e+"MenuItem").classList.add("active"),t.querySelector(".messageFeedContainer"));null!==a&&(a.scrollTop=a.scrollHeight,t.querySelector(".messageJumpButton").classList.add("hide")),window.scrollTo({top:0,left:0,behavior:"instant"})}setTime(t){document.querySelectorAll(".dateAndTime").forEach(e=>{e.innerHTML=`Season <span class="font-monospac fs-4">${t.world.year+1}</span> Day <span class="font-monospac fs-4">${t.world.day+1}</span>`})}setZoom(e){element.style.transform=`scale(${e})`,element.style.transformOrigin="center center"}updateStandings(e){if(null==e)throw new Error("null model");e={teams:e.world.league.getStandingsTableTeams(),pitchers:e.world.league.getStandingsTablePitchers(10),batters:e.world.league.getStandingsTableBatters(10),teamScoring:e.world.league.getStandingsTableTeamScoring(10)};this.standingsPage.update(e.teams,e.batters,e.teamScoring,e.pitchers)}updateUserInfo=e=>{if(null==e)throw new Error("null user");this.confirmModal.update(e),this.navBar.updateUserInfo(e),this.userPage.updateUserInfo(e);var t=document.getElementById("vpGoalDisplayAmount");null!=t&&(t.innerText=e.getGoal().toLocaleString())}}let team1,team2,bgame,headlineInning=document.querySelector(".headlineInning"),awayName=document.querySelector(".headlineAwayName"),awayScore=document.querySelector(".headlineAwayScore"),homeName=document.querySelector(".headlineHomeName"),homeScore=document.querySelector(".headlineHomeScore"),app={view:{statsModal:new StatsModal},model:{world:{league:null}}},targetTime=(document.getElementById("root").append(app.view.statsModal.render()),new Date(2025,0,1,0,0,0));targetTime.setHours(19,0,0),document.querySelector(".pageSummary").innerText="This game will begin at "+targetTime.toString();class Model{static rng=new MersenneTwister(parseInt(987654))}fetch("league125.json").then(e=>e.json()).then(e=>{console.log(e),app.model.world.league=League.restructure(e),bgame=new BaseballGame(app.model.world.league.teams[0],app.model.world.league.teams[2]),console.log(bgame),startMessageInterval(4e3,bgame)}).catch(e=>{console.error("Error:",e)});let messageFeedContainer=document.querySelector("#messageFeedContainer"),messageJumpButton=document.querySelector("#messageJumpButton"),count=(messageJumpButton.addEventListener("click",()=>{messageJumpButton.classList.add("hide"),messageFeedContainer.scrollTo(0,messageFeedContainer.scrollHeight)}),0);function addGameMessage(e){var t,a;e.done||(t=document.querySelector("#messageFeedContainer"),(a=document.createElement("game-post")).setAttribute("game-message",JSON.stringify(e)),e=t.scrollTop,t.scrollHeight-t.clientHeight<=t.scrollTop?(t.appendChild(a),t.scrollTop=t.scrollHeight,document.querySelector("#messageJumpButton").classList.add("hide")):(t.appendChild(a),t.scrollTop=e,document.querySelector("#messageJumpButton").classList.remove("hide")))}function getTimeUntil(e){var t,a=new Date,e=e.getTime()-a.getTime();return e<=0?{hours:0,minutes:0,seconds:0}:(a=Math.floor(e/1e3)%60,t=Math.floor(e/1e3/60)%60,{hours:Math.floor(e/1e3/60/60),minutes:t,seconds:a})}function setup(e){document.querySelector(".headlineGameNumber").textContent="Game #1: ",headlineInning.innerHTML=e.inning,awayName.innerHTML=e.awayNameWithLink,awayScore.textContent=e.score.away,homeName.innerHTML=e.homeNameWithLink,homeScore.textContent=e.score.home}function startMessageInterval(e,t){let a=t.getGameDetails();setup(a),setInterval(()=>{var e;new Date>targetTime?(document.querySelector(".pageSummary").classList.add("hide"),null==(a=t.next())?clearInterval(timeIntervalId):update(a)):(e=getTimeUntil(targetTime),document.querySelector(".pageSummary").innerText=`Today's game will begin in ${e.hours} hours, ${e.minutes} minutes, and ${e.seconds} seconds.`)},e)}function update(e){document.querySelector(".headlineInning").innerHTML=e.inning,awayScore.textContent=e.score.away,homeScore.textContent=e.score.home,document.querySelector(".boxScore").innerHTML=e.boxScoreTable,addGameMessage(e)}function jumpToNewestMessage(){messageFeedContainer.scrollTo(0,messageFeedContainer.scrollHeight),document.getElementById("messageJumpButton").classList.add("hide")}
var MersenneTwister=function(e){null==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};MersenneTwister.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++){e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0}},MersenneTwister.prototype.init_by_array=function(e,t){var a,s,r;for(this.init_genrand(19650218),a=1,s=0,r=this.N>t?this.N:t;r;r--){var i=this.mt[a-1]^this.mt[a-1]>>>30;this.mt[a]=(this.mt[a]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+e[s]+s,this.mt[a]>>>=0,s++,++a>=this.N&&(this.mt[0]=this.mt[this.N-1],a=1),t<=s&&(s=0)}for(r=this.N-1;r;r--){i=this.mt[a-1]^this.mt[a-1]>>>30;this.mt[a]=(this.mt[a]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-a,this.mt[a]>>>=0,++a>=this.N&&(this.mt[0]=this.mt[this.N-1],a=1)}this.mt[0]=2147483648},MersenneTwister.prototype.genrand_int32=function(){var e,t,a=new Array(0,this.MATRIX_A);if(this.mti>=this.N){for(this.mti==this.N+1&&this.init_genrand(5489),t=0;t<this.N-this.M;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+this.M]^e>>>1^a[1&e];for(;t<this.N-1;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+(this.M-this.N)]^e>>>1^a[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^a[1&e],this.mti=0}return e=this.mt[this.mti++],(e=(e=(e=(e^=e>>>11)^e<<7&2636928640)^e<<15&4022730752)^e>>>18)>>>0},MersenneTwister.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},MersenneTwister.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},MersenneTwister.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},MersenneTwister.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},MersenneTwister.prototype.genrand_res53=function(){return 1/9007199254740992*(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))};class Name{static firstNameList=["Aaliyah","Aaron","Abby","Abigail","Abraham","Adam","Addison","Adrian","Adriana","Adrianna","Aidan","Aiden","Alan","Alana","Alejandro","Alex","Alexa","Alexander","Alexandra","Alexandria","Alexia","Alexis","Alicia","Allison","Alondra","Alyssa","Amanda","Amber","Amelia","Amy","Ana","Andrea","Andres","Andrew","Angel","Angela","Angelica","Angelina","Anna","Anthony","Antonio","Ariana","Arianna","Ashley","Ashlyn","Ashton","Aubrey","Audrey","Austin","Autumn","Ava","Avery","Ayden","Bailey","Benjamin","Bianca","Blake","Braden","Bradley","Brady","Brandon","Brayden","Breanna","Brendan","Brian","Briana","Brianna","Brittany","Brody","Brooke","Brooklyn","Bryan","Bryce","Bryson","Caden","Caitlin","Caitlyn","Caleb","Cameron","Camila","Carlos","Caroline","Carson","Carter","Cassandra","Cassidy","Catherine","Cesar","Charles","Charlotte","Chase","Chelsea","Cheyenne","Chloe","Christian","Christina","Christopher","Claire","Cody","Colby","Cole","Colin","Collin","Colton","Conner","Connor","Cooper","Courtney","Cristian","Crystal","Daisy","Dakota","Dalton","Damian","Daniel","Daniela","Danielle","David","Delaney","Derek","Destiny","Devin","Devon","Diana","Diego","Dominic","Donovan","Dylan","Edgar","Eduardo","Edward","Edwin","Eli","Elias","Elijah","Elizabeth","Ella","Ellie","Emily","Emma","Emmanuel","Eric","Erica","Erick","Erik","Erin","Ethan","Eva","Evan","Evelyn","Faith","Fernando","Francisco","Gabriel","Gabriela","Gabriella","Gabrielle","Gage","Garrett","Gavin","Genesis","George","Gianna","Giovanni","Giselle","Grace","Gracie","Grant","Gregory","Hailey","Haley","Hannah","Hayden","Hector","Henry","Hope","Hunter","Ian","Isaac","Isabel","Isabella","Isabelle","Isaiah","Ivan","Jack","Jackson","Jacob","Jacqueline","Jada","Jade","Jaden","Jake","Jalen","James","Jared","Jasmin","Jasmine","Jason","Javier","Jayden","Jayla","Jazmin","Jeffrey","Jenna","Jennifer","Jeremiah","Jeremy","Jesse","Jessica","Jesus","Jillian","Jocelyn","Joel","John","Johnathan","Jonah","Jonathan","Jordan","Jordyn","Jorge","Jose","Joseph","Joshua","Josiah","Juan","Julia","Julian","Juliana","Justin","Kaden","Kaitlyn","Kaleb","Karen","Karina","Kate","Katelyn","Katherine","Kathryn","Katie","Kayla","Kaylee","Kelly","Kelsey","Kendall","Kennedy","Kenneth","Kevin","Kiara","Kimberly","Kyle","Kylee","Kylie","Landon","Laura","Lauren","Layla","Leah","Leonardo","Leslie","Levi","Liam","Liliana","Lillian","Lilly","Lily","Lindsey","Logan","Lucas","Lucy","Luis","Luke","Lydia","Mackenzie","Madeline","Madelyn","Madison","Makayla","Makenzie","Malachi","Manuel","Marco","Marcus","Margaret","Maria","Mariah","Mario","Marissa","Mark","Martin","Mary","Mason","Matthew","Max","Maxwell","Maya","Mckenzie","Megan","Melanie","Melissa","Mia","Micah","Michael","Michelle","Miguel","Mikayla","Miranda","Molly","Morgan","Mya","Naomi","Natalia","Natalie","Nathan","Nathaniel","Nevaeh","Nicholas","Nicolas","Nicole","Noah","Nolan","Oliver","Olivia","Omar","Oscar","Owen","Paige","Parker","Patrick","Paul","Payton","Peter","Peyton","Preston","Rachel","Raymond","Reagan","Rebecca","Ricardo","Richard","Riley","Robert","Ruby","Ryan","Rylee","Sabrina","Sadie","Samantha","Samuel","Sara","Sarah","Savannah","Sean","Sebastian","Serenity","Sergio","Seth","Shane","Shawn","Shelby","Sierra","Skylar","Sofia","Sophia","Sophie","Spencer","Stephanie","Stephen","Steven","Summer","Sydney","Tanner","Taylor","Thomas","Tiffany","Timothy","Travis","Trenton","Trevor","Trinity","Tristan","Tyler","Valeria","Valerie","Vanessa","Veronica","Victor","Victoria","Vincent","Wesley","William","Wyatt","Xavier","Zachary","Zoe","Zoey"];static lastNameList=["Smith","Johnson","Williams","Brown","Jones","Miller","Davis","Garcia","Rodriguez","Wilson","Martinez","Anderson","Taylor","Thomas","Hernandez","Moore","Martin","Jackson","Thompson","White","Lopez","Lee","Gonzalez","Harris","Clark","Lewis","Robinson","Walker","Perez","Hall","Young","Allen","Sanchez","Wright","King","Scott","Green","Baker","Adams","Nelson","Hill","Ramirez","Campbell","Mitchell","Roberts","Carter","Phillips","Evans","Turner","Torres","Parker","Collins","Edwards","Stewart","Flores","Morris","Nguyen","Murphy","Rivera","Cook","Rogers","Morgan","Peterson","Cooper","Reed","Bailey","Bell","Gomez","Kelly","Howard","Ward","Cox","Diaz","Richardson","Wood","Watson","Brooks","Bennett","Gray","James","Reyes","Cruz","Hughes","Price","Myers","Long","Foster","Sanders","Ross","Morales","Powell","Sullivan","Russell","Ortiz","Jenkins","Gutierrez","Perry","Butler","Barnes","Fisher","Henderson","Coleman","Simmons","Patterson","Jordan","Reynolds","Hamilton","Graham","Kim","Gonzales","Alexander","Ramos","Wallace","Griffin","West","Cole","Hayes","Chavez","Gibson","Bryant","Ellis","Stevens","Murray","Ford","Marshall","Owens","Mcdonald","Harrison","Ruiz","Kennedy","Wells","Alvarez","Woods","Mendoza","Castillo","Olson","Webb","Washington","Tucker","Freeman","Burns","Henry","Vasquez","Snyder","Simpson","Crawford","Jimenez","Porter","Mason","Shaw","Gordon","Wagner","Hunter","Romero","Hicks","Dixon","Hunt","Palmer","Robertson","Black","Holmes","Stone","Meyer","Boyd","Mills","Warren","Fox","Rose","Rice","Moreno","Schmidt","Patel","Ferguson","Nichols","Herrera","Medina","Ryan","Fernandez","Weaver","Daniels","Stephens","Gardner","Payne","Kelley","Dunn","Pierce","Arnold","Tran","Spencer","Peters","Hawkins","Grant","Hansen","Castro","Hoffman","Hart","Elliott","Cunningham","Knight","Bradley"];static adjList=["Aristotelian","Arthurian","Bohemian","Brethren","Mosaic","Oceanic","Proctor","Terran","Tudor","abroad","absorbing","abstract","academic","accelerated","accented","accountant","acquainted","acute","addicting","addictive","adjustable","admired","adult","adverse","advised","aerosol","afraid","aggravated","aggressive","agreeable","alienate","aligned","all-round","alleged","almond","alright","altruistic","ambient","ambivalent","amiable","amino","amorphous","amused","anatomical","ancestral","angelic","angrier","answerable","antiquarian","antiretroviral","appellate","applicable","apportioned","approachable","appropriated","archer","aroused","arrested","assertive","assigned","athletic","atrocious","attained","authoritarian","autobiographical","avaricious","avocado","awake","awsome","backstage","backwoods","balding","bandaged","banded","banned","barreled","battle","beaten","begotten","beguiled","bellied","belted","beneficent","besieged","betting","big-money","biggest","biochemical","bipolar","blame","blessed","blindfolded","bloat","blocked","blooded","blue-collar","blushing","boastful","bolder","bolstered","bonnie","bored","boundary","bounded","bounding","branched","brawling","brazen","breeding","bridged","brimming","brimstone","broadest","broiled","broker","bronze","bruising","buffy","bullied","bungling","burial","buttery","candied","canonical","cantankerous","cardinal","carefree","caretaker","casual","cathartic","causal","chapel","characterized","charcoal","cheeky","cherished","chipotle","chirping","chivalrous","circumstantial","civic","civil","civilised","clanking","clapping","claptrap","classless","cleansed","cleric","cloistered","codified","colloquial","colour","combat","combined","comely","commissioned","commonplace","commuter","commuting","comparable","complementary","compromising","conceding","concentrated","conceptual","conditioned","confederate","confident","confidential","confining","confuse","congressional","consequential","conservative","constituent","contaminated","contemporaneous","contraceptive","convertible","convex","cooked","coronary","corporatist","correlated","corroborated","cosmic","cover","crash","crypto","culminate","cushioned","dandy","dashing","dazzled","decreased","decrepit","dedicated","defaced","defective","defenseless","deluded","deodorant","departed","depress","designing","despairing","destitute","detective","determined","devastating","deviant","devilish","devoted","diagonal","dictated","didactic","differentiated","diffused","dirtier","disabling","disconnected","discovered","disdainful","diseased","disfigured","disheartened","disheveled","disillusioned","disparate","dissident","doable","doctrinal","doing","dotted","double-blind","downbeat","dozen","draining","draught","dread","dried","dropped","dulled","duplicate","eaten","echoing","economical","elaborated","elastic","elective","electoral","elven","embryo","emerald","emergency","emissary","emotional","employed","enamel","encased","encrusted","endangered","engraved","engrossing","enlarged","enlisted","enlivened","ensconced","entangled","enthralling","entire","envious","eradicated","eroded","esoteric","essential","evaporated","ever-present","evergreen","everlasting","exacting","exasperated","excess","exciting","executable","existent","exonerated","exorbitant","exponential","export","extraordinary","exultant","exulting","facsimile","fading","fainter","faith-based","fallacious","faltering","famous","fancier","fast-growing","fated","favourable","fearless","feathered","fellow","fermented","ferocious","fiddling","filling","firmer","fitted","flammable","flawed","fledgling","fleshy","flexible","flickering","floral","flowering","flowing","foggy","folic","foolhardy","foolish","footy","forehand","forked","formative","formulaic","foul-mouthed","fractional","fragrant","fraudulent","freakish","freckled","freelance","freight","fresh","fretted","frugal","fulfilling","fuming","funded","funny","garbled","gathered","geologic","geometric","gibberish","gilded","ginger","glare","glaring","gleaming","glorified","glorious","goalless","gold-plated","goody","grammatical","grande","grateful","gratuitous","graven","greener","grinding","grizzly","groaning","grudging","guaranteed","gusty","hand-held","handheld","hands-off","hard-pressed","healing","healthier","healthiest","heart","heart-shaped","heathen","hedonistic","heralded","herbal","high-density","high-performance","high-res","high-yield","hissy","hitless","holiness","homesick","honorable","hooded","hopeless","horrendous","horrible","hot-button","huddled","human","humbling","humid","humiliating","hypnotized","idealistic","idiosyncratic","ignited","illustrated","illustrative","imitated","immense","immersive","immigrant","immoral","impassive","impressionable","improbable","impulsive","in-between","in-flight","inattentive","inbound","inbounds","incalculable","incomprehensible","indefatigable","indigo","indiscriminate","indomitable","inert","inflate","inform","inheriting","injured","injurious","inking","inoffensive","insane","insensible","insidious","insincere","insistent","insolent","insufferable","intemperate","interdependent","interesting","interfering","intern","interpreted","intersecting","intolerable","intolerant","intuitive","irresolute","irritate","jealous","jerking","joining","joint","journalistic","joyful","keyed","knowing","lacklustre","laden","lagging","lamented","laughable","layered","leather","leathern","leery","left-footed","legible","leisure","lessening","liberating","life-size","lifted","lightest","limitless","listening","literary","liver","livid","lobster","locked","long-held","long-lasting","long-running","long-suffering","loudest","loveliest","low-budget","low-carb","lowering","lucid","luckless","lusty","luxurious","magazine","maniac","manmade","maroon","mastered","mated","material","materialistic","meaningful","measuring","mediaeval","medical","meditated","medley","melodic","memorable","memorial","metabolic","metallic","metallurgical","metering","midair","midterm","midway","mighty","migrating","mind-blowing","mind-boggling","minor","mirrored","misguided","misshapen","mitigated","mixed","modernized","molecular","monarch","monastic","morbid","motley","motorized","mounted","multi-million","multidisciplinary","muscled","muscular","muted","mysterious","mythic","nail-biting","natural","nauseous","negative","networked","neurological","neutered","newest","night","nitrous","no-fly","noncommercial","nonsense","north","nuanced","occurring","offensive","oldest","oncoming","one-eyed","one-year","onstage","onward","opaque","open-ended","operating","opportunist","opposing","opt-in","ordinate","outdone","outlaw","outsized","overboard","overheated","oversize","overworked","oyster","paced","panting","paralyzed","paramount","parental","parted","partisan","passive","pastel","patriot","peacekeeping","pedestrian","peevish","penal","penned","pensive","perceptual","perky","permissible","pernicious","perpetuate","perplexed","pervasive","petrochemical","philosophical","picturesque","pillaged","piped","piquant","pitching","plausible","pliable","plumb","politician","polygamous","poorest","portmanteau","posed","positive","possible","postpartum","prank","pre-emptive","precocious","predicted","premium","preparatory","prerequisite","prescient","preserved","presidential","pressed","pressurized","presumed","prewar","priced","pricier","primal","primer","primetime","printed","private","problem","procedural","process","prodigious","professional","programmed","progressive","prolific","promising","promulgated","pronged","proportionate","protracted","pulled","pulsed","purgatory","quick","rapid-fire","raunchy","razed","reactive","readable","realizing","recognised","recovering","recurrent","recycled","redeemable","reflecting","regal","registering","reliable","reminiscent","remorseless","removable","renewable","repeating","repellent","reserve","resigned","respectful","rested","restrict","resultant","retaliatory","retiring","revelatory","reverend","reversing","revolving","ridiculous","right-hand","ringed","risque","robust","roomful","rotating","roused","rubber","run-down","running","runtime","rustling","safest","salient","sanctioned","saute","saved","scandalized","scarlet","scattering","sceptical","scheming","scoundrel","scratched","scratchy","scrolled","seated","second-best","segregated","self-taught","semiautomatic","senior","sensed","sentient","sexier","shadowy","shaken","shaker","shameless","shaped","shiny","shipped","shivering","shoestring","short","short-lived","signed","simplest","simplistic","sizable","skeleton","skinny","skirting","skyrocketed","slamming","slanting","slapstick","sleek","sleepless","sleepy","slender","slimmer","smacking","smokeless","smothered","smouldering","snuff","socialized","solid-state","sometime","sought","spanking","sparing","spattered","specialized","specific","speedy","spherical","spiky","spineless","sprung","squint","stainless","standing","starlight","startled","stately","statewide","stereoscopic","sticky","stimulant","stinky","stoked","stolen","storied","strained","strapping","strengthened","stubborn","stylized","suave","subjective","subjugated","subordinate","succeeding","suffering","summary","sunset","sunshine","supernatural","supervisory","supply-side","surrogate","suspended","suspenseful","swarthy","sweating","sweeping","swinging","swooning","sympathize","synchronized","synonymous","synthetic","tailed","tallest","tangible","tanked","tarry","technical","tectonic","telepathic","tenderest","territorial","testimonial","theistic","thicker","threatening","tight-lipped","timed","timely","timid","torrent","totalled","tougher","traditional","transformed","trapped","traveled","traverse","treated","trial","trunk","trusting","trying","twisted","two-lane","tyrannical","unaided","unassisted","unassuming","unattractive","uncapped","uncomfortable","uncontrolled","uncooked","uncooperative","underground","undersea","undisturbed","unearthly","uneasy","unequal","unfazed","unfinished","unforeseen","unforgivable","unidentified","unimaginative","uninspired","unintended","uninvited","universal","unmasked","unorthodox","unparalleled","unpleasant","unprincipled","unread","unreasonable","unregulated","unreliable","unremitting","unsafe","unsanitary","unsealed","unsuccessful","unsupervised","untimely","unwary","unwrapped","uppity","upstart","useless","utter","valiant","valid","valued","vanilla","vaulting","vaunted","veering","vegetative","vented","verbal","verifying","veritable","versed","vinyl","virgin","visceral","visual","voluptuous","walk-on","wanton","warlike","washed","waterproof","waved","weakest","well-bred","well-chosen","well-informed","wetting","wheeled","whirlwind","widen","widening","willful","willing","winnable","winningest","wireless","wistful","woeful","wooded","woodland","wordless","workable","worldly","worldwide","worst-case","worsted","worthless"];adjList=[].concat(adjList,["able","abnormal","absent-minded","above average","adventurous","affectionate","agile","agreeable","alert","amazing","ambitious","amiable","amusing","analytical","angelic","apathetic","apprehensive","ardent","artificial","artistic","assertive","attentive","average","awesome","awful","balanced","beautiful","below average","beneficent","blue","blunt","boisterous","brave","bright","brilliant","buff","callous","candid","cantankerous","capable","careful","careless","caustic","cautious","charming","childish","childlike","cheerful","chic","churlish","circumspect","civil","clean","clever","clumsy","coherent","cold","competent","composed","conceited","condescending","confident","confused","conscientious","considerate","content","cool","cool-headed","cooperative","cordial","courageous","cowardly","crabby","crafty","cranky","crass","critical","cruel","curious","cynical","dainty","decisive","deep","deferential","deft","delicate","demonic","dependent","delightful","demure","depressed","devoted","dextrous","diligent","direct","dirty","disagreeable","discerning","discreet","disruptive","distant","distraught","distrustful","dowdy","dramatic","dreary","drowsy","drugged","drunk","dull","dutiful","eager","earnest","easy-going","efficient","egotistical","elfin","emotional","energetic","enterprising","enthusiastic","evasive","even-tempered","exacting","excellent","excitable","experienced","fabulous","fastidious","ferocious","fervent","fiery","flabby","flaky","flashy","frank","friendly","funny","fussy","generous","gentle","gloomy","glutinous","good","grave","great","groggy","grouchy","guarded","hateful","hearty","helpful","hesitant","hot-headed","hypercritical","hysterical","idiotic","idle","illogical","imaginative","immature","immodest","impatient","imperturbable","impetuous","impractical","impressionable","impressive","impulsive","inactive","incisive","incompetent","inconsiderate","inconsistent","independent","indiscreet","indolent","indefatigable","industrious","inexperienced","insensitive","inspiring","intelligent","interesting","intolerant","inventive","irascible","irritable","irritating","jocular","jovial","joyous","judgmental","keen","kind","lame","lazy","lean","leery","lethargic","level-headed","listless","lithe","lively","local","logical","long-winded","lovable","love-lorn","lovely","maternal","mature","mean","meddlesome","mercurial","methodical","meticulous","mild","miserable","modest","moronic","morose","motivated","musical","naive","nasty","natural","naughty","negative","nervous","noisy","normal","nosy","numb","obliging","obnoxious","old-fashioned","one-sided","orderly","ostentatious","outgoing","outspoken","passionate","passive","paternal","paternalistic","patient","peaceful","peevish","pensive","persevering","persnickety","petulant","picky","plain","plain-speaking","playful","pleasant","plucky","polite","popular","positive","powerful","practical","prejudiced","pretty","proficient","proud","provocative","prudent","punctual","quarrelsome","querulous","quick","quick-tempered","quiet","realistic","reassuring","reclusive","reliable","reluctant","resentful","reserved","resigned","resourceful","respected","respectful","responsible","restless","revered","ridiculous","sad","sassy","saucy","sedate","self-assured","selfish","sensible","sensitive","sentimental","serene","serious","sharp","short-tempered","shrewd","shy","silly","sincere","sleepy","slight","sloppy","slothful","slovenly","slow","smart","snazzy","sneering","snobby","somber","sober","sophisticated","soulful","soulless","sour","spirited","spiteful","stable","staid","steady","stern","stoic","striking","strong","stupid","sturdy","subtle","sullen","sulky","supercilious","superficial","surly","suspicious","sweet","tactful","tactless","talented","testy","thinking","thoughtful","thoughtless","timid","tired","tolerant","touchy","tranquil","ugly","unaffected","unbalanced","uncertain","uncooperative","undependable","unemotional","unfriendly","unguarded","unhelpful","unimaginative","unmotivated","unpleasant","unpopular","unreliable","unsophisticated","unstable","unsure","unthinking","unwilling","venal","versatile","vigilant","warm","warmhearted","wary","watchful","weak","well-behaved","well-developed","well-intentioned","well-respected","well-rounded","willing","wonderful","volcanic","vulnerable","zealous"]);adjList=[].concat(adjList,["aah","ack","agreed","ah","aha","ahem","alas","all right","amen","argh","as if","aw","ay","aye","bah","blast","boo hoo","bother","boy","brr","by golly","bye","cheerio","cheers","chin up","come on","crikey","curses","dear me","doggone","drat","duh","easy does it","eek","egads","er","exactly","fair enough","fiddle-dee-dee","fiddlesticks","fie","foo","fooey","gadzooks","gah","gangway","g'day","gee","gee whiz","geez","gesundheit","get lost","get outta here","go on","good","good golly","good job","gosh","gracious","great","grr","gulp","ha","ha-ha","hah","hallelujah","harrumph","haw","hee","here","hey","hmm","ho hum","hoo","hooray","hot dog","how","huh","hum","humbug","hurray","huzza","I say","ick","is it","ixnay","jeez","just kidding","just a sec","just wondering","kapish","la","la-di-dah","lo","look","look here","long time","lordy","man","meh","mmm","most certainly","my","my my","my word","nah","naw","never","no","no can do","nooo","not","no thanks","no way","nuts","oh","oho","oh-oh","oh no","okay","okey-dokey","om","oof","ooh","oopsey","over","oy","oyez","peace","pff","pew","phew","pish posh","psst","ptui","quite","rah","rats","ready","right","right on","roger","roger that","rumble","say","see ya","shame","shh","shoo","shucks","sigh","sleep tight","snap","sorry","sssh","sup","ta","ta-da","ta ta","take that","tally ho","tch","thanks","there","there there","time out","toodles","touche","tsk","tsk-tsk","tut","tut-tut","ugh","uh","uh-oh","um","ur","urgh","very nice","very well","voila","vroom","wah","well","well done","well, well","what","whatever","whee","when","whoa","whoo","whoopee","whoops","whoopsey","whew","why","word","wow","wuzzup","ya","yea","yeah","yech","yikes","yippee","yo","yoo-hoo","you bet","you don't say","you know","yow","yum","yummy","zap","zounds","zowie","zzz"]);adjList=[].concat(adjList,["Quick","Big","Mean","The","Bad","Cool","Mad","Night","Lil","Sweet","Dirty","Clean","Iron","Flash","Flying","Hawk","Spider","Goose","Tiger","Cat","Crime","Candy","Sugar","Bat","Ball","Left","Right","Small","Biggie","Wiggly","Wormy","Squirmy","Milk","Little","Shark","Wolf","Dog","Spooky","Slimy","Doctor","Professor","Judge","Sparkle","Baby","Special","Normal","Nice","Mega","Kilo","Hard","President","Honest","Doc","Skinny","Mayor","Colonel","Captain","Wreck-it","Pintsize","Master","Lord","Detective","Major","Admiral","Ambassador","Chief","Commodore","Lieutenant","Senator","Cousin","Half","Sheriff","Deputy","Pudding","Rattle","Butter","Jail","Chunky","Glass","Milkshake","Grumpy","Rubber","Rusty","Broken","Plush","Sunny","Pro","Super","Incomplete","Silver","timeless","classic","dreamy","creamy","strong","mesmerizing","handsome","charming","attractive","hypnotic","enthralling","magnetic","stunning","gorgeous","devastating","striking","famous","first-class","regal","sublime","heavenly","athletic","dapper","stylish","suave","virile","fake","crazy","cool","creepy","weird","idiosyncratic","quirky","golden","eccentric","odd","strange","distinctive","singular","perfect","superior","unique","special","distinguished","abnormal","foreign","irregular","unusual","amazing","bizarre","incredible","phenomenal","awe-inspiring","prominent","prodigious","unparalleled","friendly","magic","magical","refined","reptilian","Titanic","Double","Triple","Birthday","Bounce","Brave","Bump","Busy","Chatterbox","Cheerful","Christmas","Clever","Clumsy","Cool","Daydream","Dizzy","Forgetful","Funny","Fussy","Good","Greedy","Grumble","Grumpy","Happy","Impossible","Jelly","Lazy","Mean","Messy","Mischief","Muddle","Nobody","Noisy","Nonsense","Nosey","Perfect","Quiet","Rude","Rush","Silly","Skinny","Slow","Small","Sneeze","Snow","Strong","Tall","Tickle","Topsy-Turvy","Worry","Wrong","Bad","Birthday","Bossy","Brainy","Busy","Chatterbox","Christmas","Contrary","Curious","Dotty","Fickle","Fun","Giggles","Greedy","Helpful","Hug","Late","Lucky","Magic","Naughty","Neat","Princess","Quick","Scary","Scatterbrain","Shy","Somersault","Splendid","Star","Stubborn","Sunshine","Tidy","Tiny","Trouble","Twins","Whoops","Wise","abnormal","accursed","amorphous","antediluvian","antique","antiquarian","blasphemy","blasphemous","cat","charnel","comprehension","cyclopean","dank","decadent","daemoniac","effulgence","eldritch","fainted","fainting","foetid","fungus","fungoid","fungous","furtive","gambrel","gibbous","gibbered","gibbering","hideous","immemorial","indescribable","iridescence","loathing","loathsome","lurk","madness","manuscript","mortal","nameless","noisome","non-euclidean","proportion","disproportionate","shunned","singularly","spectral","squamous","stench","stygian","swarthy","tenebrous","tentacle","ululating","unmentionable","unnamable","unutterable","achieved","adapted","addressed","administered","advised","analyzed","arranged","assembled","assessed","assisted","attained","audited","budgeted","calculated","classified","coached","collected","communicated","compiled","composed","computed","conducted","consolidated","constructed","consulted","coordinated","counseled","created","critiqued","defined","designed","detected","determined","devised","diagnosed","directed","discovered","displayed","earned","edited","eliminated","enforced","established","estimated","evaluated","examined","expanded","explained","experimented","financed","formulated","gathered","generated","grossed","guided","handled","hypothesized","identified","illustrated","implemented","improved","increased","influenced","initiated","inspected","installed","instituted","instructed","interpreted","interviewed","invented","investigated","lectured","managed","marketed","mediated","modeled","monitored","motivated","negotiated","obtained","operated","ordered","organized","oversaw","performed","persuaded","photographed","planned","prepared","presented","printed","processed","produced","projected","promoted","proofread","provided","publicized","purchased","received","recommended","reconciled","recorded","recruited","reduced","referred","refined","rehabilitated","repaired","reported","represented","researched","resolved","responded","restored","retrieved","reviewed","scheduled","selected","solved","sorted","studied","summarized","supervised","supplied","surveyed","tested","trained","transcribed","translated","traveled","tutored","upgraded","utilized","wrote"]);static nickNameList=["Alpha","Bravo","Charlie","Delta","Echo","Foxtrot","Golf","Hotel","India","Juliett","Kilo","Lima","Mike","November","Oscar","Papa","Quebec","Romeo","Sierra","Tango","Uniform","Victor","Whiskey","X-ray","Yankee","Zulu","a","abbey","abby","abigail","absurdity","ace","achilles","addie","aggravator","agnes","aj","ajax","albert","alex","alexander","alf","alfie","alice","allie","ally","alvin","amazon","amber","amelia","amy","andy","angel","angie","angus","anheuser","ankle","anna","annabelle","annie","apollo","apple","apple","applesauce","april","archer","archie","ari","ariel","arlo","arm","arthur","artie","arya","ash","ashley","astro","athena","atlas","atticus","audrey","augie","august","augustus","aurora","austin","autumn","ava","avenger","avery","axel","babble","baby","baby","baci","back","bacon","bagel","bags","bailey","balderdash","baloney","bam","bambi","bandit","bane","banjo","barbie","barkley","barley","barney","baron","basil","batman","baxter","beak","bean","bear","bear","beau","beauty","bebe","becky","beef","belch","bella","belle","ben","bender","benjamin","benji","benny","benson","bentley","bernie","bessie","bessie","betsy","betty","bianca","bibi","big","biggie","bijou","billie","billy","bingo","bird","birdie","biscuit","bishop","bite","bites","blake","blanca","blather","blaze","blitz","blondie","blu","blue","bo","bob","bobby","bobo","bodhi","bodie","bone","bones","bonnie","boo","booger","boom","boomer","boots","boots","boris","bosco","bottle","bowie","box","boy","bradley","brady","brain","braincase","brainpan","brandi","brando","brandy","bread","brewster","brodie","brody","bronx","brooke","brooklyn","brownie","browny","bruce","bruiser","brundon","bruno","brutus","bub","bubba","bubblegum","bubbles","bubs","buck","buckley","bucky","buddha","buddy","buffoonery","buffy","bug","bugsy","bull","bullet","bully","bunny","business","buster","butch","butter","butterbuns","buttercup","butters","button","button","buttons","buzz","buzz","caesar","cake","cakes","cali","callie","calvin","can","candy","candycane","capone","captain","cara","caramel","card","carly","carrying-on","carter","casey","cash","cashew","casper","cassidy","cassie","cat","centaur","cesar","chai","champ","chance","chanel","charles","charley","charlie","charlotte","charly","chase","cheech","cheeks","chelsea","cherry","chester","chewbacca","chewbacca","chewie","chewy","chi","chica","chicanery","chichi","chico","chief","child","chin","china","chip","chiqui","chiquita","chloe","choco","chocolate","chop","chopper","choppers","christmas","chubs","chuck","chucky","chulo","chum","cici","cindy","cinnamon","cj","clancy","claptrap","clara","clarice","clementine","cleo","cleopatra","clover","clyde","coby","coco","cocoa","coconut","cody","coffee","colby","cole","coleslaw","comet","cookie","cookie","cookie","cooper","copper","cora","corky","cosmo","cotton","cottonball","creeper","cricket","crock","cruella","crunch","crystal","cuddler","cuddles","cup","cupcake","cutie","cyrus","dagger","daisy","dakota","dallas","danny","dante","daphne","darby","darcy","darla","darwin","dash","dee","delilah","demon","derp","desi","destiny","devilry","dexter","diamond","diddly","diego","diesel","dino","dior","dip","dirt","diva","dixie","dj","django","django","dobby","doc","dog","dolce","dolly","dome","domino","donuts","dora","dory","dory","dottie","dough","dove","doyle","dragon","dread","dribble","drill","drive","drivel","duchess","duck","dudley","duffy","duke","dulce","duncan","dunkin","dusty","dutch","dutchess","dylan","ears","ebony","echo","eddie","edie","egg","einstein","eleanor","eli","ella","ellie","eloise","elsa","elvis","emily","emma","emmie","emmy","endzone","enzo","ernie","eva","evie","eye","eyes","face","faith","feet","felix","fendi","ferguson","fifi","fifi","filth","fingers","finley","finn","finnegan","fiona","fish","fist","flanders","flash","flimflam","flora","floyd","fluffy","foolishness","foot","fork","fox","fox","foxy","frances","frank","frankfurter","frankie","franklin","freckles","fred","freddie","freddy","freya","frida","friday","fritz","frodo","frogger","fun","gabby","garbage","garfunkel","gatsby","gemma","george","georgia","georgie","ghost","gia","giant","gibberish","gidget","gigi","gina","ginger","gino","gio","gizmo","glass","gobbledygook","goldie","goldilocks","gooch","goonie","goose","goose","gordo","gotti","grace","gracie","grayson","greta","griffin","grizzly","gucci","guinness","gump","gunner","gunther","gus","gypsy","hachi","hailey","hair","haley","halo","hamilton","hammer","hana","hand","hands","hank","hanky-panky","hannah","happy","harlem","harley","harlow","harper","harry","harvey","hazel","head","heart","heidi","hendrix","hennessy","henry","herbie","hercules","hero","hershey","highjinks","hiro","hobbes","hogwash","hokey-pokey","holly","homer","homer","honey","honeycomb","honker","hooey","hope","hornswoggle","horseapples","horsefeathers","horseplay","horsepuckey","house","huddles","hudson","hugger","huggies","hugginkiss","hugo","hulk","humphrey","hunter","hunter","ice","ick","iggy","ike","impropriety","india","indiana","indie","indy","iris","isabella","isabelle","isis","ivy","izzy","jabber","jack","jackie","jackson","jacob","jada","jade","jake","james","jameson","jamie","jammies","jane","jasmine","jasper","java","jax","jaxx","jay","jazz","jazzy","jeans","jelly","jenny","jerry","jersey","jesse","jessie","jet","jeter","jezebel","jiggery-pokery","jimmy","jinx","jj","joe","joey","johnny","jojo","jordan","josie","joy","julie","juliet","julius","june","junior","junior","juniper","junk","juno","kai","kaiser","kali","kane","katie","kato","kaya","kayla","keiko","kelly","kenny","khloe","kid","kiki","kilo","king","king","kingston","kira","kirby","kitty","kiwi","knife","knight","knope","kobe","kobi","koda","kodi","kody","koko","kona","kuma","kylie","lacey","lacy","lady","laika","laila","lala","lala","lana","layla","leg","legs","leia","leila","lenny","leo","leonardo","leonidas","leroy","less","levi","lexi","lexie","lexington","lexy","liam","libby","lighter","lil","lila","lilah","lili","lilly","lilo","lily","lincoln","linda","linus","lips","little","lizzie","lizzy","loaf","lobo","logan","loki","lola","lolita","london","lou","louie","louis","louise","lovegood","luca","lucas","lucille","lucky","lucy","luigi","luka","luke","lula","lulu","luna","lunacy","lupe","lyla","mabel","mac","mac","macaroni","macho","mack","macy","maddie","maddy","madison","maggie","magic","magnet","maisie","maisy","major","maker","malarkey","mama","mandy","mango","manny","map","maple","marcel","marco","marcus","marge","mario","marley","marshall","marshmallow","martin","marty","marvin","mary","mason","matilda","maui","maverick","max","maxi","maxie","maximus","maxine","maxwell","maxx","maya","mcflip","mcgee","meatball","meeko","melo","melody","memphis","merlin","mia","mickey","midnight","mika","mike","mikey","mila","miles","miley","millie","milly","milo","mimi","mindy","mini","minnie","mirror","misha","mishka","mishmash","miso","miss","missy","mister","misty","mittens","mitts","mo","moby","mocha","mochi","moe","mojo","mollie","molly","momo","mona","money","monte","monty","mookie","moose","mop","morgan","moses","moves","moxie","mr","mr.","muck","muffin","muffin","muffin","muffins","mug","mugsy","mumbo-jumbo","munchkin","muneca","murphy","murray","mustache","mya","mylo","nacho","nala","name","nana","napoleon","nash","natasha","nathan","neck","nellie","nelly","nemo","nena","nene","neo","nick","nicky","nico","nigel","nikita","nikki","nikko","niko","nina","nino","noah","noel","noggin","nola","noodle","noodle","noodles","nora","norman","not","nova","nugget","nut","nyla","oakley","obi","odie","odin","olive","oliver","olivia","ollie","onyx","ophelia","opie","oreo","orion","oscar","oskar","oso","otis","otto","owen","ozzie","ozzy","pablo","pablo","paco","painter","paisley","pancho","panda","pants","papi","paris","parker","patches","paulie","paw","paws","peaches","peanut","pearl","pebbles","peeper","peepers","peggy","peluche","penelope","penny","pepe","pepper","pepsi","percy","perla","pete","peter","petey","petunia","phoebe","phoenix","picker","pickle","pickles","pie","pierre","piffle","piggy","pinky","pip","piper","pippa","pippin","pixie","pj","pluto","polly","polo","pony","poochie","pookie","popcorn","popeye","poppy","poppycock","poppycock","pork","porter","prattle","precious","presley","preston","prince","princess","puck","puffy","pumpkin","punts","puppy","quaker","queen","queenie","quincy","quinn","racer","raider","ralph","ralphie","rambo","ranger","ranger","rapunzel","rascal","raspberry","rat","raven","red","reese","reeses","refuse","reggie","remi","remington","remy","rex","ricky","rico","rider","riffraff","rigmarole","ringo","rio","ripley","rita","river","robber","robin","rocco","rock","rocket","rocko","rocky","roger","romeo","roo","rooster","rory","rosco","roscoe","rose","rosie","roxanne","roxie","roxy","roy","rubbish","rubble","ruby","rudy","rufio","rufus","rug","rugby","rummy","runner","rupert","russell","rusty","ryder","sable","sabrina","sadie","sage","sailor","sailor","sally","sam","samantha","sammi","sammie","sammy","sampson","samson","sandy","sara","sarah","sarge","sasha","sassafras","sassy","savannah","sawyer","scarlet","scarlett","schnozz","scooby","scooter","scotty","scout","scrappy","scrubs","scruffy","seamus","sebastian","shadow","shaggy","shakira","shane","shayna","shea","sheba","sheila","shelby","shell","shenanigans","sherlock","sherman","shiloh","shiro","shoes","shorty","sidney","sienna","silliness","simba","simon","sir","skipper","skippy","skittles","skull","sky","skye","skylar","skyler","slacker","smarts","smokey","snickerdoodle","snickers","snickers","snoop","snoopy","snoopy","snow","snowball","snowflake","snowy","snuggler","snuggles","socks","sofia","sofie","sonny","sookie","sophia","sophie","spanky","sparkle","sparky","spartacus","spencer","spike","spongebob","spoon","spot","spring","spud","stanley","star","starbux","stella","stevie","stewie","stick","stinko","stitch","storm","strumpet","style","sugar","suki","summer","sunny","sunshine","sushi","susie","suzie","suzy","swan","sweet","sweetie","sydney","tackles","taco","taco","taffy","tail","tallulah","tammy","tango","tank","tank","tara","tart","tasha","taylor","taz","teddy","teeth","terry","tess","tessa","theo","theodore","thief","thomas","thor","thunder","ticker","tickler","tiffany","tiger","tigger","tiki","time","timmy","tina","tinkerbell","tino","tiny","titan","tito","tj","tobey","tobi","toby","toe","toes","tomfoolery","tommy","tony","toodles","toots","tootsie","toto","trap","trapper","trash","travis","trevor","tripe","trixie","trooper","trouble","troy","truffle","truman","tucker","twaddle","twin","twinkie","twinkie","ty","tyler","tyson","uselessness","vader","valentina","valentino","vanilla","venus","victoria","vinny","violet","vito","waffles","waffles","wallace","wally","walter","watson","wednesday","wendy","whiskey","wilbur","wiley","willie","willow","willy","wilson","winnie","winston","winter","wire","wizzer","wolfgang","wolfie","wonka","woody","wrecked","wrench","wrigley","wyatt","xena","xiao","yankee","yoda","yogi","yoshi","yoyo","yuki","zachary","zack","zara","zeke","zelda","zena","zero","zeus","ziggy","zoe","zoey","zombie","zooey","zorro","avocado","boba","catboy","doggo","eggnog","fangirl","goblin","hotsauce","internet","jam","kisses","lemonade","magpie","naptime","omelette","podcast","quinoa","robot","steampunk","tummyache","underwear","vintage","witchy","xylophone","yarrow","zipper","onesie","throuple","quad shot","fiver","sevenescence","eightober","ninetails"];static places=[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Anaheim",abbreviation:"ANA"},{name:"Acadia",abbreviation:"AC"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"Asgard",abbreviation:"ASG"},{name:"Atlantis",abbreviation:"ATL"},{name:"Austin",abbreviation:"AUS"},{name:"Avalon",abbreviation:"AVA"},{name:"Baltimore",abbreviation:"BAL"},{name:"Boston",abbreviation:"BOS"},{name:"Breckenridge",abbreviation:"BREC"},{name:"Brooklyn",abbreviation:"BKN"},{name:"Buffalo",abbreviation:"BUF"},{name:"California",abbreviation:"CA"},{name:"Canada",abbreviation:"CAN"},{name:"Carolina",abbreviation:"CAR"},{name:"Charleston",abbreviation:"CHAS"},{name:"Charlotte",abbreviation:"CLT"},{name:"Chicago",abbreviation:"CHI"},{name:"Cincinnati",abbreviation:"CIN"},{name:"Ciudad de México",abbreviation:"CDMX"},{name:"Cleveland",abbreviation:"CLE"},{name:"Colorado",abbreviation:"CO"},{name:"Columbus",abbreviation:"CLB"},{name:"Connecticut",abbreviation:"CT"},{name:"Core",abbreviation:"CORE"},{name:"Dallas",abbreviation:"DAL"},{name:"Death Valley",abbreviation:"DV"},{name:"Delaware",abbreviation:"DE"},{name:"Denver",abbreviation:"DEN"},{name:"Detroit",abbreviation:"DET"},{name:"Edmonton",abbreviation:"EDM"},{name:"El Dorado",abbreviation:"ELD"},{name:"Elysium",abbreviation:"ELY"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Golden State",abbreviation:"GS"},{name:"Green Bay",abbreviation:"GB"},{name:"Hades",abbreviation:"HDS"},{name:"Hartford",abbreviation:"HFD"},{name:"Hawaii",abbreviation:"HI"},{name:"Hellmouth",abbreviation:"HELL"},{name:"Houston",abbreviation:"HOU"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Indianapolis",abbreviation:"IND"},{name:"Iowa",abbreviation:"IA"},{name:"Jacksonville",abbreviation:"JAX"},{name:"Joshua Tree",abbreviation:"JT"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Las Vegas",abbreviation:"LV"},{name:"Lemuria",abbreviation:"LEM"},{name:"London",abbreviation:"LON"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Mammoth Cave",abbreviation:"MC"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Memphis",abbreviation:"MEM"},{name:"Miami",abbreviation:"MIA"},{name:"Michigan",abbreviation:"MI"},{name:"Milwaukee",abbreviation:"MIL"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Montreal",abbreviation:"MTL"},{name:"Nashville",abbreviation:"NSH"},{name:"Nebraska",abbreviation:"NEB"},{name:"Nevada",abbreviation:"NV"},{name:"New England",abbreviation:"NE"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New Orleans",abbreviation:"NOLA"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Oakland",abbreviation:"OAK"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Olympus",abbreviation:"OLY"},{name:"Oregon",abbreviation:"OR"},{name:"Orlando",abbreviation:"ORL"},{name:"Ottawa",abbreviation:"OTT"},{name:"Pangea",abbreviation:"PAN"},{name:"Paris",abbreviation:"PAR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Philly",abbreviation:"PHI"},{name:"Phoenix",abbreviation:"PHX"},{name:"Pittsburgh",abbreviation:"PIT"},{name:"Portland",abbreviation:"POR"},{name:"Quebec",abbreviation:"QUE"},{name:"Rhode Island",abbreviation:"RI"},{name:"Sacramento",abbreviation:"SAC"},{name:"San Antonio",abbreviation:"SA"},{name:"San Diego",abbreviation:"SD"},{name:"San Francisco",abbreviation:"SF"},{name:"San Jose",abbreviation:"SJ"},{name:"Seattle",abbreviation:"SEA"},{name:"Shangri-La",abbreviation:"SHL"},{name:"South Carolina",abbreviation:"SC"},{name:"St. Louis",abbreviation:"STL"},{name:"Tampa Bay",abbreviation:"TB"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Tokyo",abbreviation:"TKO"},{name:"Toronto",abbreviation:"TOR"},{name:"Utah",abbreviation:"UT"},{name:"Valhalla",abbreviation:"VAL"},{name:"Vancouver",abbreviation:"VAN"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington, D.C.",abbreviation:"DC"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Winnipeg",abbreviation:"WPG"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"},{name:"Xanadu",abbreviation:"XAN"},{name:"Yellowstone",abbreviation:"YELL"}];static teamNameList=["Aardvarks","Abnormalities","Absolutists","Absurd","Accidentals","Accountants","Acids","Acres","Action","Actors","Actually","Actuaries","Adders","Adjudicators","Adventure","Afters","Agents","Agile","Airline Pilots","Algae","Alkalis","Allergies","Alligators","Alpacas","Alumni","Ambience","Amphibians","Ancestors","Anchors","Ancients","Anglers","Animators","Anime","Answerers","Anteaters","Antelopes","Anthropologists","Antiques","Antlers","Ants","Apocrypha","Arbitrators","Archeologists","Archers","Architects","Armadillos","Armors","Aroma","Art Teachers","Arthurs","Artists","Assemblers","Astronomers","Athletes","Attendants","Auditors","Auks","Australians","Authors","Avatars","Avenues","Avocados","Axes","Axioms","Babysitters","Baboons","Backers","Bacteria","Bad Guys","Bad Habits","Badgers","Bagpipers","Bailiffs","Bakers","Ballers","Bangers","Banjos","Bankers","Barbarians","Barbeques","Barbers","Bards","Barkers","Barracudas","Barristers","Bass","Bats","Bazaars","Beakers","Bears","Beavers","Beepers","Bees","Beetles","Believers","Bell Curves","Bellhops","Bendables","Benders","Betrothed","Beyond","Bffs","Bicycles","Bidders","Bikers","Biographers","Birds","Bisons","Biters","Bitterns","Bizarre","Blackbirds","Blasters","Blenders","Blinkers","Blisters","Bloodhounds","Bloomers","Blotters","Blowers","Boars","Boaters","Boba","Bobolinks","Boilermakers","Bold","Bonkers","Bongos","Bookkeepers","Boomers","Bots","Boxers","Boxes","Breakers","Breath Mints","Brickmasons","Bros","Buffalos","Bugs","Bullfinches","Bullocks","Bulls","Burgers","Burlesque","Bus Drivers","Butchers","Butterflies","Buyers","Buzzards","Buzzers","Cabinetmakers","Cacti","Caesars","Callers","Camels","Canaries","Candies","Canons","Capers","Capons","Capuchins","Capybaras","Cardboard","Cardinals","Carnivores","Carp","Carpenters","Cartographers","Cashiers","Casual","Catboys","Catchers","Caterpillars","Cattle","Caviars","Cedars","Cellars","Censors","Centaurs","Cerebral","Chambers","Chameleons","Chapters","Charters","Chauffeurs","Cheapers","Checkers","Cheerleaders","Cheesers","Cheetahs","Chefs","Chemists","Chic","Chickadees","Chickens","Chiffon","Children","Chimpanzees","Chinchillas","Chipmunks","Chiropractors","Choirs","Choreographers","Cicadas","Civets","Clams","Cleaners","Clerics","Clovers","Clusters","Cobblers","Cobras","Cockroaches","Coders","Coffees","Cold","Collars","Composers","Computers","Concertos","Concierges","Concise","Condors","Confetti","Confusion","Conservatories","Conspiracy","Convergence","Cooks","Coots","Coppers","Corduroy","Cormorants","Cosplayers","Cougars","Counselors","Couriers","Cows","Coyotes","Cozy","Crabs","Cranes","Crashers","Craters","Crickets","Critters","Crocodiles","Crows","Crude","Crusaders","Crustaceans","Cubes","Cupcakes","Curators","Curlews","Cursors","Cynics","Daddies","Daggers","Daisies","Dale","Dalmations","Dancers","Dandies","Dappers","Dark Comedy","Datas","Daughters","Decembers","Deer","Delicates","Demons","Denim","Dentists","Desire","Detectives","Detours","Dice","Dictators","Dietitians","Diners","Dingos","Dinosaurs","Dippers","Directors","Dishes","Dishwashers","Dismal","Dispatchers","Doctors","TheFlightlessFowls","Dogs","Dollars","Donkeys","Doodles","Dorsal Fins","Doves","Dozers","Drafters","Drapers","Dressmakers","Drivers","Dromedaries","Droolers","Droppers","Druids","Drummers","Dryers","Duckers","Ducks","Dyers","Dynamic","Dystopia","Eagles","Eclairs","Eclectic","Economists","Editors","Eels","Eggnogs","Eggplants","Eggs","Elders","Electricians","Elephants","Elevators","Elk","Elves","Embellishment","Embers","Emergence","Emphasis","Emus","Enders","Engineers","Epic","Epochs","Equations","Equator","Errata","Etchers","Eternal","Evidence","Evokers","Ewes","Excavators","Exclusivity","Exponents","Extinction","Extra Large","Fab","Factors","Fakers","Fantasy","Fathers","Favors","Feels","Feet","Felt","Feral","Ferrets","Ferriers","Fevers","Fibbers","Fibres","Fiction","Fighters","Film Noir","Finches","Finers","Fireballs","Firefighters","Fish","Fishes","Fivers","Fixers","Flamingoes","Flannel","Flautists","Flavors","Fleas","Fletchers","Flexables","Flexers","Flickers","Flies","Floppers","Flowers","Fluff","Forever","Fossil Fuels","Fowlers","Foxes","Fractures","Friars","Fridays","Froggers","Frogs","Frost","Fungi","Furbies","Furries","Futures","Gamers","Garages","Gators","Gaussians","Gazelles","Geese","Geezers","Geometry","Georgias","Gestures","Giggles","Gila Monsters","Giraffes","Givers","Glaciers","Glamours","Glee","Gliders","Glitter","Glovers","Gnats","Gnus","Goats","Goblins","Goers","Goldfinches","Golfers","Goners","Gophers","Goshawks","Governors","Grackles","Graffiti","Grandparents","Grasshoppers","Greyhounds","Grits","Grizzly Bears","Groove","Ground Hogs","Growers","Gruff","Grumps","Guinea Pigs","Guitars","Gulls","Gunners","Hackers","Haggard","Halves","Hamsters","Handsomes","Hangars","Haptics","Harbors","Hares","Hatters","Haunted Dolls","Hawks","Hazard","Heartthrobs","Hedgehogs","Heels","Heir Apparents","Herbivores","Heroes","Herons","Hikers","Himalayas","Hippies","Hippopotamuses","Hippos","Hoers","Hogs","Homeschoolers","Hooves","Hoppers","Hornets","Horrible","Horrors","Horses","Hotsauce","Howlers","Huggers","Hummingbirds","Humongous","Humors","Hunger","Hunters","Hustle","Hyenas","Hypotheses","Ibexes","Idealists","Iguanas","Illustrators","Immortals","Impalas","Indoor Cats","Inertia","Influencers","Insects","Inspectors","Instructors","Internets","Intruders","Invaders","Jackals","Jaguars","Jailers","Jams","Janitors","Jays","Jazz Hands","Jimbos","Joggers","Jokers","Judges","Jugglers","Juncos","Juniors","Junipers","Jupiters","Jurors","Kangaroos","Kisses","Knives","Koalas","Kooks","Lambs","Lapwings","Larks","Larvae","Laters","Laundry","Lavenders","Lawyers","Layers","Leeches","Legendary","Legislators","Lemmings","Lemonades","Lemurs","Leopards","Lethal","Levers","Liars","Librarians","Lifeguards","Lift","Literally","Livers","Lizards","Llamas","Loathing","Lobsters","Locksmiths","Locusts","Losers","Lovers","Lumberjacks","Luster","Lynxes","Magic","Magpies","Makers","Mallards","Mammals","Mandrills","Mappers","Marmosets","Martens","Massive","Masters","Math","Matrix","Mayors","Mean","Mechanics","Memoirs","Memories","Messes","Metaphors","Mice","Middleschoolers","Millennials","Millers","Mindfulness","Miners","Minimalists","Minions","Minks","Minnows","Mirrors","Mites","Mixers","Mockingbirds","Models","Moist Talkers","Molars","Moles","Mollusks","Momentum","Monarchs","Mongooses","Monitors","Monkeys","Monsters","Moonbeams","Moose","Mops","Morticians","Mothers","Moths","Motors","Mountain Goats","Mouses","Mowers","Mudhens","Mules","Musicians","Muskrats","Mustangs","Mynah Birds","Mystery","Myth","Naptime","Naysayers","Nebulous","Nectars","Neighbors","Newts","Nibbles","Nifty","Nightingales","Nocturnals","Northerners","Novembers","Nuclei","Nudists","Occult","Ocelots","Octobers","Octoroks","Offers","Omelettes","Omniscience","Onesies","Opossums","Opticians","Optimists","Optometrists","Orangutans","Orderlies","Orthodontists","Orthotists","Oryxes","Others","Otters","Outfielders","Owls","Oxen","Oysters","Pagers","Painters","Paladins","Pallbearers","Pandas","Pantsuits","Papers","Parakeets","Paralegals","Paramedics","Parentheses","Parlors","Parrots","Pastors","Patches","Pavers","Paws","Payers","Peacocks","Peddlers","Pediatricians","Pedicurists","Pelicans","Penguins","People","Pep","Pewters","Pharmacists","Photographers","Physicians","Piers","Pies","Pigeons","Pigs","Pillagers","Pillars","Pine Barrens","Pipers","Pizzas","Plasterers","Platypuses","Plumbers","Plushies","Plyers","Podcast","Podiatrists","Poets","Pokemón","Pokers","Polar Bears","Polecats","Pop","Poplars","Porcupines","Porpoises","Possibilities","Postmasters","Potatoes","Power","Pragmatists","Prairie Dogs","Precision","Presidents","Primates","Probability","Procedurals","Proctors","Producers","Proofreaders","Propoganda","Psychics","Ptarmigans","Pulsars","Pumas","Puppies","Purists","Purveyors","Pythons","Quadcopters","Quakers","Quasars","Queens","Quibbles","Quinoa","Quirks","Quizzes","Rabbits","Raccoons","Racers","Radar","Radicals","Radii","Rafters","Rainclouds","Rakers","Ramps","Ranchers","Randomness","Rangers","Rats","Rattlesnakes","Ravagers","Razors","Realists","Realtors","Recyclables","Referees","Reindeer","Remote Controls","Reporters","Reptiles","Reruns","Rhinoceroses","Riders","Rippers","Robins","Robots","Rodents","Roebucks","Roguelikes","Rooks","Roosters","Ropers","Ruffs","Rulers","Rumours","Runners","Sagas","Sailors","Salamanders","Saltines","Samplers","Sandpipers","Sarcasm","Sardines","Sawyers","Scarves","Schoolkids","Sci-Fi","Science","Scissors","Scorpions","Scrum","Seabirds","Seals","Sectors","Seeders","Sensors","Septembers","Several","Sewers","Shampooers","Sharps","Sheep","Sheldrakes","Shenanigans","Shoe Thieves","Showers","Shrews","Shrimp","Silk","Silver Foxes","Sisters","Sitars","Skeptics","Skunks","Skylarks","Slackers","Slappers","Slayers","Sliders","Slimes","Sloths","Slugs","Smartphones","Snails","Snakes","Snark","Sneakers","Snugglers","Soldiers","Solos","Sonars","Sorcerers","Spagetti","Sparkles","Sparrows","Speakers","Spiders","Spies","Spitters","Spoilers","Sponsors","Sprinkles","Squares","Squid","Squirrels","Staccato","Staff","Starfish","Starlings","Statisticians","Steaks","Steamboats","Steamfitters","Steampunks","Stickers","Stimuli","Stingrays","Stoats","Stomachs","Stonemasons","Storks","Stormchasers","Streamers","Striders","Strikers","Studios","Stuff","Suburbs","Suitors","Sulfurs","Sum","Summers","Sunbeams","Supers","Surfers","Surgeons","Surveyors","Suspense","Swallows","Swans","Swashbucklers","Swifts","Swine","Swords","Syllabi","Symbols","Tables","Tailors","Tails","Takers","Tangents","Tanners","Tapirs","Tartars","Taters","Teachers","Teeth","Telemarketers","Tenors","Termites","Terriers","Terrors","Themes","Thieves","Ticks","Tigers","Tiggers","Timbers","Tinkers","Titles","Toads","Tomatoes","Toners","Tortoises","Toxic","Tractors","Traders","Translators","Trappers","Tremors","Trimmers","Triumph","Trolls","Trouble","Truckers","Trunks","Tubes","Tummyaches","Tuners","Tunnels","Turkeys","Turtles","Tutors","Tweed","Tweeters","Twitchers","Typists","Ulcers","Umpires","Undertakers","Unexpected","Unlimited Tacos","Upholsterers","Urban Legends","Ushers","Utopians","Vampires","Variance","Vectors","Velvet","Venn Diagrams","Verbatim","Vespers","Veterinarians","Vibes","Vibrance","Victors","Videographers","Vignettes","Vigors","Villans","Vipers","Viral","Visionaries","Visiters","Visors","Voters","Vultures","Waders","Waffles","Waitresses","Walkers","Walruses","Warlocks","Warthogs","Wasps","Weasels","Weavers","Weighers","Welders","Westerns","Whales","Wheelers","Whimsy","Whisperers","Whodunit","Whoppers","Widgeons","Wielders","Wild Wings","Wildcats","Wilders","Wincers","Windsors","Winkers","Winners","Winters","Witches","Withers","Wives","Wizards","Wolves","Wombats","Wonders","Woodchucks","Woodcocks","Woodpeckers","Woodworkers","Woofers","Workers","Worms","Wow","Wowsers","Wrens","Writers","Xylophones","Yakkers","Yaks","Yardmasters","Yards","Yodlers","Yonders","Youngsters","Yowlers","Zappers","Zebras","Zeros","Zest","Zigzags","Zingers","Zippers","Zithers","Zombies","Zoologists","Zoomies","Zoos","Wheels","Axles","Pulleys","Inclined Planes","Wedges","Screws","Mitochondria","Ribosomes","Nausea","Qualms","Ego","Superego","Apathy","Blur","Infamy","Pride","Respect","Dignity","Human Rights","Amnesia","Destruction","Smash","Havoc","Subversion","Blaze","Gold","Jade","Lace","Nitro","Towers","Sirens","Turbo","Inferno","Storm","Rage","Voltage","Resistance","Amplitude","Phantoms","Rampage","Fury","Aroma","Atomic","Batteries","Cohesion","Combustion","Corrosion","Crystals","Electrons","Enzymes","Extraction","Fractions","Free Radicals","Frequency","Kinetics","Nobility","Osmosis","Pressure","Protons","Quarks","Radioactive","Skeletons","Solutions","Substitutes","Time","Temperature","Vapor","Volume","X-rays","Amnesia","Symposia","Aria","Mania","Trivia"];static webSafeEmojiCodes=["⚽","⚾","⛳","✌","✨","❤","🌋","🌞","🌮","🌰","🌱","🌲","🌳","🌴","🌵","🌷","🌸","🌹","🌺","🌻","🌼","🌿","🍀","🍁","🍂","🍃","🍄","🍇","🍈","🍉","🍊","🍋","🍌","🍍","🍎","🍏","🍐","🍑","🍒","🍓","🍔","🍕","🍖","🍗","🍗","🍘","🍙","🍚","🍛","🍜","🍝","🍞","🍟","🍠","🍡","🍢","🍣","🍤","🍥","🍦","🍧","🍨","🍩","🍪","🍫","🍬","🍬","🍭","🍮","🍯","🍰","🍱","🍲","🍳","🍴","🍵","🍶","🍷","🍸","🍹","🍺","🍻","🍼","🍽","🎣","🎭","🎮","🎯","🎰","🎱","🎲","🎳","🎴","🎸","🎽","🎾","🎿","🏀","🏁","🏂","🏃","🏄","🏅","🏆","🏇","🏋","🏝","🏰","🐅","🐇","🐈","🐉","🐊","🐋","🐌","🐌","🐍","🐎","🐏","🐐","🐑","🐒","🐓","🐔","🐕","🐖","🐗","🐘","🐙","🐚","🐛","🐜","🐝","🐞","🐟","🐠","🐡","🐢","🐣","🐤","🐥","🐦","🐧","🐨","🐩","🐪","🐫","🐬","🐭","🐮","🐯","🐰","🐱","🐲","🐳","🐴","🐵","🐶","🐷","🐸","🐹","🐺","🐻","🐼","🐾","🐿","👀","👁","👂","👃","👄","👅","👆","👇","👈","👉","👊","👋","👌","👍","👎","👐","👟","👿","💀","💋","💐","💙","💚","💛","💜","💝","💞","💟","💮","💯","💻","💼","💽","💾","💿","📀","📁","📂","📃","📄","📅","📆","📇","📈","📉","📊","📋","📌","📍","📎","📏","📐","📑","📒","📓","📔","📕","📖","📗","📘","📙","📚","📛","📜","📝","📞","📟","📠","📡","📢","📣","📤","📥","📦","📧","📨","📩","📪","📱","🔥","🔱","🕵","🗣","🗽","🗿","😈","🚀","🚁","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚋","🚌","🚍","🚎","🚏","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚤","🛠","🤠","🤬","🥀","🥝","🥩","🥭","🥯","🥳","🦀","🧡","🧢","🧣","🧤","🧥","🧦","🧧","🧩"];static profileEmojis=["👶","🧒","👦","👧","🧑","👱","👨","🧔","🧔‍♀️","🧔‍♂️","👨‍🦰","👨‍🦱","👨‍🦳","👨‍🦲","👩","👩‍🦰","🧑‍🦰","👩‍🦱","🧑‍🦱","👩‍🦳","🧑‍🦳","👩‍🦲","🧑‍🦲","👱‍♀️","👱‍♂️","🧓","👴","👵","🙍","🙍‍♂️","🙍‍♀️","🙎","🙎‍♂️","🙎‍♀️","🙅","🙅‍♂️","🙅‍♀️","🙆","🙆‍♂️","🙆‍♀️","💁","💁‍♂️","💁‍♀️","🙋","🙋‍♂️","🙋‍♀️","🧏","🧏‍♂️","🧏‍♀️","🙇","🙇‍♂️","🙇‍♀️","🤦","🤦‍♂️","🤦‍♀️","🤷","🤷‍♂️","🤷‍♀️","🧑‍⚕️","👨‍⚕️","👩‍⚕️","🧑‍🎓","👨‍🎓","👩‍🎓","🧑‍🏫","👨‍🏫","👩‍🏫","🧑‍⚖️","👨‍⚖️","👩‍⚖️","🧑‍🌾","👨‍🌾","👩‍🌾","🧑‍🍳","👨‍🍳","👩‍🍳","🧑‍🔧","👨‍🔧","👩‍🔧","🧑‍🏭","👨‍🏭","👩‍🏭","🧑‍💼","👨‍💼","👩‍💼","🧑‍🔬","👨‍🔬","👩‍🔬","🧑‍💻","👨‍💻","👩‍💻","🧑‍🎤","👨‍🎤","👩‍🎤","🧑‍🎨","👨‍🎨","👩‍🎨","🧑‍✈️","👨‍✈️","👩‍✈️","🧑‍🚀","👨‍🚀","👩‍🚀","🧑‍🚒","👨‍🚒","👩‍🚒","🕵","🕵‍♂️","🕵‍♀️","💂","💂‍♂️","💂‍♀️","🥷","👷","👷‍♂️","👷‍♀️","🫅","🤴","👸","👳","👳‍♂️","👳‍♀️","👲","🧕","🤵","🤵‍♂️","🤵‍♀️","👰","👰‍♂️","👰‍♀️","🫄","🫃","🤰","🧑‍🍼","👨‍🍼","👩‍🍼","🤱","👼","🎅","🤶","🧑‍🎄","🦸","🦸‍♂️","🦸‍♀️","🦹","🦹‍♂️","🦹‍♀️","🧙","🧙‍♂️","🧙‍♀️","🧚","🧚‍♂️","🧚‍♀️","🧛","🧛‍♂️","🧛‍♀️","🧜","🧜‍♂️","🧜‍♀️","🧝","🧝‍♂️","🧝‍♀️","💆","💆‍♂️","💆‍♀️","💇","💇‍♂️","💇‍♀️","🚶","🚶‍♂️","🚶‍♀️","🧍","🧍‍♂️","🧍‍♀️","🧎","🧎‍♂️","🧎‍♀️","🧑‍🦯","👨‍🦯","👩‍🦯","🧑‍🦼","👨‍🦼","👩‍🦼","🧑‍🦽","👨‍🦽","👩‍🦽","🏃","🏃‍♂️","🏃‍♀️","🚶‍➡️","🚶‍♀️‍➡️","🚶‍♂️‍➡️","🧎‍➡️","🧎‍♀️‍➡️","🧎‍♂️‍➡️","🧑‍🦯‍➡️","👨‍🦯‍➡️","👩‍🦯‍➡️","🧑‍🦼‍➡️","👨‍🦼‍➡️","👩‍🦼‍➡️","🧑‍🦽‍➡️","👨‍🦽‍➡️","👩‍🦽‍➡️","🏃‍➡️","🏃‍♀️‍➡️","🏃‍♂️‍➡️","💃","🕺","🕴","🧖","🧖‍♂️","🧖‍♀️","🧗","🧗‍♂️","🧗‍♀️","🏇","🏂","🏌","🏌‍♂️","🏌‍♀️","🏄","🏄‍♂️","🏄‍♀️","🚣","🚣‍♂️","🚣‍♀️","🏊","🏊‍♂️","🏊‍♀️","⛹","⛹‍♂️","⛹‍♀️","🏋","🏋‍♂️","🏋‍♀️","🚴","🚴‍♂️","🚴‍♀️","🚵","🚵‍♂️","🚵‍♀️","🤸","🤸‍♂️","🤸‍♀️","🤽","🤽‍♂️","🤽‍♀️","🤾","🤾‍♂️","🤾‍♀️","🤹","🤹‍♂️","🤹‍♀️","🧘","🧘‍♂️","🧘‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏽","🧒🏽","👦🏽","👧🏽","🧑🏽","👱🏽","👨🏽","🧔🏽","🧔🏽‍♀️","🧔🏽‍♂️","👨🏽‍🦰","👨🏽‍🦱","👨🏽‍🦳","👨🏽‍🦲","👩🏽","👩🏽‍🦰","🧑🏽‍🦰","👩🏽‍🦱","🧑🏽‍🦱","👩🏽‍🦳","🧑🏽‍🦳","👩🏽‍🦲","🧑🏽‍🦲","👱🏽‍♀️","👱🏽‍♂️","🧓🏽","👴🏽","👵🏽","🙍🏽","🙍🏽‍♂️","🙍🏽‍♀️","🙎🏽","🙎🏽‍♂️","🙎🏽‍♀️","🙅🏽","🙅🏽‍♂️","🙅🏽‍♀️","🙆🏽","🙆🏽‍♂️","🙆🏽‍♀️","💁🏽","💁🏽‍♂️","💁🏽‍♀️","🙋🏽","🙋🏽‍♂️","🙋🏽‍♀️","🧏🏽","🧏🏽‍♂️","🧏🏽‍♀️","🙇🏽","🙇🏽‍♂️","🙇🏽‍♀️","🤦🏽","🤦🏽‍♂️","🤦🏽‍♀️","🤷🏽","🤷🏽‍♂️","🤷🏽‍♀️","🧑🏽‍⚕️","👨🏽‍⚕️","👩🏽‍⚕️","🧑🏽‍🎓","👨🏽‍🎓","👩🏽‍🎓","🧑🏽‍🏫","👨🏽‍🏫","👩🏽‍🏫","🧑🏽‍⚖️","👨🏽‍⚖️","👩🏽‍⚖️","🧑🏽‍🌾","👨🏽‍🌾","👩🏽‍🌾","🧑🏽‍🍳","👨🏽‍🍳","👩🏽‍🍳","🧑🏽‍🔧","👨🏽‍🔧","👩🏽‍🔧","🧑🏽‍🏭","👨🏽‍🏭","👩🏽‍🏭","🧑🏽‍💼","👨🏽‍💼","👩🏽‍💼","🧑🏽‍🔬","👨🏽‍🔬","👩🏽‍🔬","🧑🏽‍💻","👨🏽‍💻","👩🏽‍💻","🧑🏽‍🎤","👨🏽‍🎤","👩🏽‍🎤","🧑🏽‍🎨","👨🏽‍🎨","👩🏽‍🎨","🧑🏽‍✈️","👨🏽‍✈️","👩🏽‍✈️","🧑🏽‍🚀","👨🏽‍🚀","👩🏽‍🚀","🧑🏽‍🚒","👨🏽‍🚒","👩🏽‍🚒","🕵🏽","🕵🏽‍♂️","🕵🏽‍♀️","💂🏽","💂🏽‍♂️","💂🏽‍♀️","🥷🏽","👷🏽","👷🏽‍♂️","👷🏽‍♀️","🫅🏽","🤴🏽","👸🏽","👳🏽","👳🏽‍♂️","👳🏽‍♀️","👲🏽","🧕🏽","🤵🏽","🤵🏽‍♂️","🤵🏽‍♀️","👰🏽","👰🏽‍♂️","👰🏽‍♀️","🫄🏽","🫃🏽","🤰🏽","🧑🏽‍🍼","👨🏽‍🍼","👩🏽‍🍼","🤱🏽","👼🏽","🎅🏽","🤶🏽","🧑🏽‍🎄","🦸🏽","🦸🏽‍♂️","🦸🏽‍♀️","🦹🏽","🦹🏽‍♂️","🦹🏽‍♀️","🧙🏽","🧙🏽‍♂️","🧙🏽‍♀️","🧚🏽","🧚🏽‍♂️","🧚🏽‍♀️","🧛🏽","🧛🏽‍♂️","🧛🏽‍♀️","🧜🏽","🧜🏽‍♂️","🧜🏽‍♀️","🧝🏽","🧝🏽‍♂️","🧝🏽‍♀️","💆🏽","💆🏽‍♂️","💆🏽‍♀️","💇🏽","💇🏽‍♂️","💇🏽‍♀️","🚶🏽","🚶🏽‍♂️","🚶🏽‍♀️","🧍🏽","🧍🏽‍♂️","🧍🏽‍♀️","🧎🏽","🧎🏽‍♂️","🧎🏽‍♀️","🧑🏽‍🦯","👨🏽‍🦯","👩🏽‍🦯","🧑🏽‍🦼","👨🏽‍🦼","👩🏽‍🦼","🧑🏽‍🦽","👨🏽‍🦽","👩🏽‍🦽","🏃🏽","🏃🏽‍♂️","🏃🏽‍♀️","🚶🏽‍➡️","🚶🏽‍♀️‍➡️","🚶🏽‍♂️‍➡️","🧎🏽‍➡️","🧎🏽‍♀️‍➡️","🧎🏽‍♂️‍➡️","🧑🏽‍🦯‍➡️","👨🏽‍🦯‍➡️","👩🏽‍🦯‍➡️","🧑🏽‍🦼‍➡️","👨🏽‍🦼‍➡️","👩🏽‍🦼‍➡️","🧑🏽‍🦽‍➡️","👨🏽‍🦽‍➡️","👩🏽‍🦽‍➡️","🏃🏽‍➡️","🏃🏽‍♀️‍➡️","🏃🏽‍♂️‍➡️","💃🏽","🕺🏽","🕴🏽","🧖🏽","🧖🏽‍♂️","🧖🏽‍♀️","🧗🏽","🧗🏽‍♂️","🧗🏽‍♀️","🏇🏽","🏂🏽","🏌🏽","🏌🏽‍♂️","🏌🏽‍♀️","🏄🏽","🏄🏽‍♂️","🏄🏽‍♀️","🚣🏽","🚣🏽‍♂️","🚣🏽‍♀️","🏊🏽","🏊🏽‍♂️","🏊🏽‍♀️","⛹🏽","⛹🏽‍♂️","⛹🏽‍♀️","🏋🏽","🏋🏽‍♂️","🏋🏽‍♀️","🚴🏽","🚴🏽‍♂️","🚴🏽‍♀️","🚵🏽","🚵🏽‍♂️","🚵🏽‍♀️","🤸🏽","🤸🏽‍♂️","🤸🏽‍♀️","🤽🏽","🤽🏽‍♂️","🤽🏽‍♀️","🤾🏽","🤾🏽‍♂️","🤾🏽‍♀️","🤹🏽","🤹🏽‍♂️","🤹🏽‍♀️","🧘🏽","🧘🏽‍♂️","🧘🏽‍♀️","👶🏿","🧒🏿","👦🏿","👧🏿","🧑🏿","👱🏿","👨🏿","🧔🏿","🧔🏿‍♀️","🧔🏿‍♂️","👨🏿‍🦰","👨🏿‍🦱","👨🏿‍🦳","👨🏿‍🦲","👩🏿","👩🏿‍🦰","🧑🏿‍🦰","👩🏿‍🦱","🧑🏿‍🦱","👩🏿‍🦳","🧑🏿‍🦳","👩🏿‍🦲","🧑🏿‍🦲","👱🏿‍♀️","👱🏿‍♂️","🧓🏿","👴🏿","👵🏿","🙍🏿","🙍🏿‍♂️","🙍🏿‍♀️","🙎🏿","🙎🏿‍♂️","🙎🏿‍♀️","🙅🏿","🙅🏿‍♂️","🙅🏿‍♀️","🙆🏿","🙆🏿‍♂️","🙆🏿‍♀️","💁🏿","💁🏿‍♂️","💁🏿‍♀️","🙋🏿","🙋🏿‍♂️","🙋🏿‍♀️","🧏🏿","🧏🏿‍♂️","🧏🏿‍♀️","🙇🏿","🙇🏿‍♂️","🙇🏿‍♀️","🤦🏿","🤦🏿‍♂️","🤦🏿‍♀️","🤷🏿","🤷🏿‍♂️","🤷🏿‍♀️","🧑🏿‍⚕️","👨🏿‍⚕️","👩🏿‍⚕️","🧑🏿‍🎓","👨🏿‍🎓","👩🏿‍🎓","🧑🏿‍🏫","👨🏿‍🏫","👩🏿‍🏫","🧑🏿‍⚖️","👨🏿‍⚖️","👩🏿‍⚖️","🧑🏿‍🌾","👨🏿‍🌾","👩🏿‍🌾","🧑🏿‍🍳","👨🏿‍🍳","👩🏿‍🍳","🧑🏿‍🔧","👨🏿‍🔧","👩🏿‍🔧","🧑🏿‍🏭","👨🏿‍🏭","👩🏿‍🏭","🧑🏿‍💼","👨🏿‍💼","👩🏿‍💼","🧑🏿‍🔬","👨🏿‍🔬","👩🏿‍🔬","🧑🏿‍💻","👨🏿‍💻","👩🏿‍💻","🧑🏿‍🎤","👨🏿‍🎤","👩🏿‍🎤","🧑🏿‍🎨","👨🏿‍🎨","👩🏿‍🎨","🧑🏿‍✈️","👨🏿‍✈️","👩🏿‍✈️","🧑🏿‍🚀","👨🏿‍🚀","👩🏿‍🚀","🧑🏿‍🚒","👨🏿‍🚒","👩🏿‍🚒","🕵🏿","🕵🏿‍♂️","🕵🏿‍♀️","💂🏿","💂🏿‍♂️","💂🏿‍♀️","🥷🏿","👷🏿","👷🏿‍♂️","👷🏿‍♀️","🫅🏿","🤴🏿","👸🏿","👳🏿","👳🏿‍♂️","👳🏿‍♀️","👲🏿","🧕🏿","🤵🏿","🤵🏿‍♂️","🤵🏿‍♀️","👰🏿","👰🏿‍♂️","👰🏿‍♀️","🫄🏿","🫃🏿","🤰🏿","🧑🏿‍🍼","👨🏿‍🍼","👩🏿‍🍼","🤱🏿","👼🏿","🎅🏿","🤶🏿","🧑🏿‍🎄","🦸🏿","🦸🏿‍♂️","🦸🏿‍♀️","🦹🏿","🦹🏿‍♂️","🦹🏿‍♀️","🧙🏿","🧙🏿‍♂️","🧙🏿‍♀️","🧚🏿","🧚🏿‍♂️","🧚🏿‍♀️","🧛🏿","🧛🏿‍♂️","🧛🏿‍♀️","🧜🏿","🧜🏿‍♂️","🧜🏿‍♀️","🧝🏿","🧝🏿‍♂️","🧝🏿‍♀️","💆🏿","💆🏿‍♂️","💆🏿‍♀️","💇🏿","💇🏿‍♂️","💇🏿‍♀️","🚶🏿","🚶🏿‍♂️","🚶🏿‍♀️","🧍🏿","🧍🏿‍♂️","🧍🏿‍♀️","🧎🏿","🧎🏿‍♂️","🧎🏿‍♀️","🧑🏿‍🦯","👨🏿‍🦯","👩🏿‍🦯","🧑🏿‍🦼","👨🏿‍🦼","👩🏿‍🦼","🧑🏿‍🦽","👨🏿‍🦽","👩🏿‍🦽","🏃🏿","🏃🏿‍♂️","🏃🏿‍♀️","🚶🏿‍➡️","🚶🏿‍♀️‍➡️","🚶🏿‍♂️‍➡️","🧎🏿‍➡️","🧎🏿‍♀️‍➡️","🧎🏿‍♂️‍➡️","🧑🏿‍🦯‍➡️","👨🏿‍🦯‍➡️","👩🏿‍🦯‍➡️","🧑🏿‍🦼‍➡️","👨🏿‍🦼‍➡️","👩🏿‍🦼‍➡️","🧑🏿‍🦽‍➡️","👨🏿‍🦽‍➡️","👩🏿‍🦽‍➡️","🏃🏿‍➡️","🏃🏿‍♀️‍➡️","🏃🏿‍♂️‍➡️","💃🏿","🕺🏿","🕴🏿","🧖🏿","🧖🏿‍♂️","🧖🏿‍♀️","🧗🏿","🧗🏿‍♂️","🧗🏿‍♀️","🏇🏿","🏂🏿","🏌🏿","🏌🏿‍♂️","🏌🏿‍♀️","🏄🏿","🏄🏿‍♂️","🏄🏿‍♀️","🚣🏿","🚣🏿‍♂️","🚣🏿‍♀️","🏊🏿","🏊🏿‍♂️","🏊🏿‍♀️","⛹🏿","⛹🏿‍♂️","⛹🏿‍♀️","🏋🏿","🏋🏿‍♂️","🏋🏿‍♀️","🚴🏿","🚴🏿‍♂️","🚴🏿‍♀️","🚵🏿","🚵🏿‍♂️","🚵🏿‍♀️","🤸🏿","🤸🏿‍♂️","🤸🏿‍♀️","🤽🏿","🤽🏿‍♂️","🤽🏿‍♀️","🤾🏿","🤾🏿‍♂️","🤾🏿‍♀️","🤹🏿","🤹🏿‍♂️","🤹🏿‍♀️","🧘🏿","🧘🏿‍♂️","🧘🏿‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏻","🧒🏻","👦🏻","👧🏻","🧑🏻","👱🏻","👨🏻","🧔🏻","🧔🏻‍♀️","🧔🏻‍♂️","👨🏻‍🦰","👨🏻‍🦱","👨🏻‍🦳","👨🏻‍🦲","👩🏻","👩🏻‍🦰","🧑🏻‍🦰","👩🏻‍🦱","🧑🏻‍🦱","👩🏻‍🦳","🧑🏻‍🦳","👩🏻‍🦲","🧑🏻‍🦲","👱🏻‍♀️","👱🏻‍♂️","🧓🏻","👴🏻","👵🏻","🙍🏻","🙍🏻‍♂️","🙍🏻‍♀️","🙎🏻","🙎🏻‍♂️","🙎🏻‍♀️","🙅🏻","🙅🏻‍♂️","🙅🏻‍♀️","🙆🏻","🙆🏻‍♂️","🙆🏻‍♀️","💁🏻","💁🏻‍♂️","💁🏻‍♀️","🙋🏻","🙋🏻‍♂️","🙋🏻‍♀️","🧏🏻","🧏🏻‍♂️","🧏🏻‍♀️","🙇🏻","🙇🏻‍♂️","🙇🏻‍♀️","🤦🏻","🤦🏻‍♂️","🤦🏻‍♀️","🤷🏻","🤷🏻‍♂️","🤷🏻‍♀️","🧑🏻‍⚕️","👨🏻‍⚕️","👩🏻‍⚕️","🧑🏻‍🎓","👨🏻‍🎓","👩🏻‍🎓","🧑🏻‍🏫","👨🏻‍🏫","👩🏻‍🏫","🧑🏻‍⚖️","👨🏻‍⚖️","👩🏻‍⚖️","🧑🏻‍🌾","👨🏻‍🌾","👩🏻‍🌾","🧑🏻‍🍳","👨🏻‍🍳","👩🏻‍🍳","🧑🏻‍🔧","👨🏻‍🔧","👩🏻‍🔧","🧑🏻‍🏭","👨🏻‍🏭","👩🏻‍🏭","🧑🏻‍💼","👨🏻‍💼","👩🏻‍💼","🧑🏻‍🔬","👨🏻‍🔬","👩🏻‍🔬","🧑🏻‍💻","👨🏻‍💻","👩🏻‍💻","🧑🏻‍🎤","👨🏻‍🎤","👩🏻‍🎤","🧑🏻‍🎨","👨🏻‍🎨","👩🏻‍🎨","🧑🏻‍✈️","👨🏻‍✈️","👩🏻‍✈️","🧑🏻‍🚀","👨🏻‍🚀","👩🏻‍🚀","🧑🏻‍🚒","👨🏻‍🚒","👩🏻‍🚒","🕵🏻","🕵🏻‍♂️","🕵🏻‍♀️","💂🏻","💂🏻‍♂️","💂🏻‍♀️","🥷🏻","👷🏻","👷🏻‍♂️","👷🏻‍♀️","🫅🏻","🤴🏻","👸🏻","👳🏻","👳🏻‍♂️","👳🏻‍♀️","👲🏻","🧕🏻","🤵🏻","🤵🏻‍♂️","🤵🏻‍♀️","👰🏻","👰🏻‍♂️","👰🏻‍♀️","🫄🏻","🫃🏻","🤰🏻","🧑🏻‍🍼","👨🏻‍🍼","👩🏻‍🍼","🤱🏻","👼🏻","🎅🏻","🤶🏻","🧑🏻‍🎄","🦸🏻","🦸🏻‍♂️","🦸🏻‍♀️","🦹🏻","🦹🏻‍♂️","🦹🏻‍♀️","🧙🏻","🧙🏻‍♂️","🧙🏻‍♀️","🧚🏻","🧚🏻‍♂️","🧚🏻‍♀️","🧛🏻","🧛🏻‍♂️","🧛🏻‍♀️","🧜🏻","🧜🏻‍♂️","🧜🏻‍♀️","🧝🏻","🧝🏻‍♂️","🧝🏻‍♀️","💆🏻","💆🏻‍♂️","💆🏻‍♀️","💇🏻","💇🏻‍♂️","💇🏻‍♀️","🚶🏻","🚶🏻‍♂️","🚶🏻‍♀️","🧍🏻","🧍🏻‍♂️","🧍🏻‍♀️","🧎🏻","🧎🏻‍♂️","🧎🏻‍♀️","🧑🏻‍🦯","👨🏻‍🦯","👩🏻‍🦯","🧑🏻‍🦼","👨🏻‍🦼","👩🏻‍🦼","🧑🏻‍🦽","👨🏻‍🦽","👩🏻‍🦽","🏃🏻","🏃🏻‍♂️","🏃🏻‍♀️","🚶🏻‍➡️","🚶🏻‍♀️‍➡️","🚶🏻‍♂️‍➡️","🧎🏻‍➡️","🧎🏻‍♀️‍➡️","🧎🏻‍♂️‍➡️","🧑🏻‍🦯‍➡️","👨🏻‍🦯‍➡️","👩🏻‍🦯‍➡️","🧑🏻‍🦼‍➡️","👨🏻‍🦼‍➡️","👩🏻‍🦼‍➡️","🧑🏻‍🦽‍➡️","👨🏻‍🦽‍➡️","👩🏻‍🦽‍➡️","🏃🏻‍➡️","🏃🏻‍♀️‍➡️","🏃🏻‍♂️‍➡️","💃🏻","🕺🏻","🕴🏻","🧖🏻","🧖🏻‍♂️","🧖🏻‍♀️","🧗🏻","🧗🏻‍♂️","🧗🏻‍♀️","🏇🏻","🏂🏻","🏌🏻","🏌🏻‍♂️","🏌🏻‍♀️","🏄🏻","🏄🏻‍♂️","🏄🏻‍♀️","🚣🏻","🚣🏻‍♂️","🚣🏻‍♀️","🏊🏻","🏊🏻‍♂️","🏊🏻‍♀️","⛹🏻","⛹🏻‍♂️","⛹🏻‍♀️","🏋🏻","🏋🏻‍♂️","🏋🏻‍♀️","🚴🏻","🚴🏻‍♂️","🚴🏻‍♀️","🚵🏻","🚵🏻‍♂️","🚵🏻‍♀️","🤸🏻","🤸🏻‍♂️","🤸🏻‍♀️","🤽🏻","🤽🏻‍♂️","🤽🏻‍♀️","🤾🏻","🤾🏻‍♂️","🤾🏻‍♀️","🤹🏻","🤹🏻‍♂️","🤹🏻‍♀️","🧘🏻","🧘🏻‍♂️","🧘🏻‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏾","🧒🏾","👦🏾","👧🏾","🧑🏾","👱🏾","👨🏾","🧔🏾","🧔🏾‍♀️","🧔🏾‍♂️","👨🏾‍🦰","👨🏾‍🦱","👨🏾‍🦳","👨🏾‍🦲","👩🏾","👩🏾‍🦰","🧑🏾‍🦰","👩🏾‍🦱","🧑🏾‍🦱","👩🏾‍🦳","🧑🏾‍🦳","👩🏾‍🦲","🧑🏾‍🦲","👱🏾‍♀️","👱🏾‍♂️","🧓🏾","👴🏾","👵🏾","🙍🏾","🙍🏾‍♂️","🙍🏾‍♀️","🙎🏾","🙎🏾‍♂️","🙎🏾‍♀️","🙅🏾","🙅🏾‍♂️","🙅🏾‍♀️","🙆🏾","🙆🏾‍♂️","🙆🏾‍♀️","💁🏾","💁🏾‍♂️","💁🏾‍♀️","🙋🏾","🙋🏾‍♂️","🙋🏾‍♀️","🧏🏾","🧏🏾‍♂️","🧏🏾‍♀️","🙇🏾","🙇🏾‍♂️","🙇🏾‍♀️","🤦🏾","🤦🏾‍♂️","🤦🏾‍♀️","🤷🏾","🤷🏾‍♂️","🤷🏾‍♀️","🧑🏾‍⚕️","👨🏾‍⚕️","👩🏾‍⚕️","🧑🏾‍🎓","👨🏾‍🎓","👩🏾‍🎓","🧑🏾‍🏫","👨🏾‍🏫","👩🏾‍🏫","🧑🏾‍⚖️","👨🏾‍⚖️","👩🏾‍⚖️","🧑🏾‍🌾","👨🏾‍🌾","👩🏾‍🌾","🧑🏾‍🍳","👨🏾‍🍳","👩🏾‍🍳","🧑🏾‍🔧","👨🏾‍🔧","👩🏾‍🔧","🧑🏾‍🏭","👨🏾‍🏭","👩🏾‍🏭","🧑🏾‍💼","👨🏾‍💼","👩🏾‍💼","🧑🏾‍🔬","👨🏾‍🔬","👩🏾‍🔬","🧑🏾‍💻","👨🏾‍💻","👩🏾‍💻","🧑🏾‍🎤","👨🏾‍🎤","👩🏾‍🎤","🧑🏾‍🎨","👨🏾‍🎨","👩🏾‍🎨","🧑🏾‍✈️","👨🏾‍✈️","👩🏾‍✈️","🧑🏾‍🚀","👨🏾‍🚀","👩🏾‍🚀","🧑🏾‍🚒","👨🏾‍🚒","👩🏾‍🚒","🕵🏾","🕵🏾‍♂️","🕵🏾‍♀️","💂🏾","💂🏾‍♂️","💂🏾‍♀️","🥷🏾","👷🏾","👷🏾‍♂️","👷🏾‍♀️","🫅🏾","🤴🏾","👸🏾","👳🏾","👳🏾‍♂️","👳🏾‍♀️","👲🏾","🧕🏾","🤵🏾","🤵🏾‍♂️","🤵🏾‍♀️","👰🏾","👰🏾‍♂️","👰🏾‍♀️","🫄🏾","🫃🏾","🤰🏾","🧑🏾‍🍼","👨🏾‍🍼","👩🏾‍🍼","🤱🏾","👼🏾","🎅🏾","🤶🏾","🧑🏾‍🎄","🦸🏾","🦸🏾‍♂️","🦸🏾‍♀️","🦹🏾","🦹🏾‍♂️","🦹🏾‍♀️","🧙🏾","🧙🏾‍♂️","🧙🏾‍♀️","🧚🏾","🧚🏾‍♂️","🧚🏾‍♀️","🧛🏾","🧛🏾‍♂️","🧛🏾‍♀️","🧜🏾","🧜🏾‍♂️","🧜🏾‍♀️","🧝🏾","🧝🏾‍♂️","🧝🏾‍♀️","💆🏾","💆🏾‍♂️","💆🏾‍♀️","💇🏾","💇🏾‍♂️","💇🏾‍♀️","🚶🏾","🚶🏾‍♂️","🚶🏾‍♀️","🧍🏾","🧍🏾‍♂️","🧍🏾‍♀️","🧎🏾","🧎🏾‍♂️","🧎🏾‍♀️","🧑🏾‍🦯","👨🏾‍🦯","👩🏾‍🦯","🧑🏾‍🦼","👨🏾‍🦼","👩🏾‍🦼","🧑🏾‍🦽","👨🏾‍🦽","👩🏾‍🦽","🏃🏾","🏃🏾‍♂️","🏃🏾‍♀️","🚶🏾‍➡️","🚶🏾‍♀️‍➡️","🚶🏾‍♂️‍➡️","🧎🏾‍➡️","🧎🏾‍♀️‍➡️","🧎🏾‍♂️‍➡️","🧑🏾‍🦯‍➡️","👨🏾‍🦯‍➡️","👩🏾‍🦯‍➡️","🧑🏾‍🦼‍➡️","👨🏾‍🦼‍➡️","👩🏾‍🦼‍➡️","🧑🏾‍🦽‍➡️","👨🏾‍🦽‍➡️","👩🏾‍🦽‍➡️","🏃🏾‍➡️","🏃🏾‍♀️‍➡️","🏃🏾‍♂️‍➡️","💃🏾","🕺🏾","🕴🏾","🧖🏾","🧖🏾‍♂️","🧖🏾‍♀️","🧗🏾","🧗🏾‍♂️","🧗🏾‍♀️","🏇🏾","🏂🏾","🏌🏾","🏌🏾‍♂️","🏌🏾‍♀️","🏄🏾","🏄🏾‍♂️","🏄🏾‍♀️","🚣🏾","🚣🏾‍♂️","🚣🏾‍♀️","🏊🏾","🏊🏾‍♂️","🏊🏾‍♀️","⛹🏾","⛹🏾‍♂️","⛹🏾‍♀️","🏋🏾","🏋🏾‍♂️","🏋🏾‍♀️","🚴🏾","🚴🏾‍♂️","🚴🏾‍♀️","🚵🏾","🚵🏾‍♂️","🚵🏾‍♀️","🤸🏾","🤸🏾‍♂️","🤸🏾‍♀️","🤽🏾","🤽🏾‍♂️","🤽🏾‍♀️","🤾🏾","🤾🏾‍♂️","🤾🏾‍♀️","🤹🏾","🤹🏾‍♂️","🤹🏾‍♀️","🧘🏾","🧘🏾‍♂️","🧘🏾‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","👶🏼","🧒🏼","👦🏼","👧🏼","🧑🏼","👱🏼","👨🏼","🧔🏼","🧔🏼‍♀️","🧔🏼‍♂️","👨🏼‍🦰","👨🏼‍🦱","👨🏼‍🦳","👨🏼‍🦲","👩🏼","👩🏼‍🦰","🧑🏼‍🦰","👩🏼‍🦱","🧑🏼‍🦱","👩🏼‍🦳","🧑🏼‍🦳","👩🏼‍🦲","🧑🏼‍🦲","👱🏼‍♀️","👱🏼‍♂️","🧓🏼","👴🏼","👵🏼","🙍🏼","🙍🏼‍♂️","🙍🏼‍♀️","🙎🏼","🙎🏼‍♂️","🙎🏼‍♀️","🙅🏼","🙅🏼‍♂️","🙅🏼‍♀️","🙆🏼","🙆🏼‍♂️","🙆🏼‍♀️","💁🏼","💁🏼‍♂️","💁🏼‍♀️","🙋🏼","🙋🏼‍♂️","🙋🏼‍♀️","🧏🏼","🧏🏼‍♂️","🧏🏼‍♀️","🙇🏼","🙇🏼‍♂️","🙇🏼‍♀️","🤦🏼","🤦🏼‍♂️","🤦🏼‍♀️","🤷🏼","🤷🏼‍♂️","🤷🏼‍♀️","🧑🏼‍⚕️","👨🏼‍⚕️","👩🏼‍⚕️","🧑🏼‍🎓","👨🏼‍🎓","👩🏼‍🎓","🧑🏼‍🏫","👨🏼‍🏫","👩🏼‍🏫","🧑🏼‍⚖️","👨🏼‍⚖️","👩🏼‍⚖️","🧑🏼‍🌾","👨🏼‍🌾","👩🏼‍🌾","🧑🏼‍🍳","👨🏼‍🍳","👩🏼‍🍳","🧑🏼‍🔧","👨🏼‍🔧","👩🏼‍🔧","🧑🏼‍🏭","👨🏼‍🏭","👩🏼‍🏭","🧑🏼‍💼","👨🏼‍💼","👩🏼‍💼","🧑🏼‍🔬","👨🏼‍🔬","👩🏼‍🔬","🧑🏼‍💻","👨🏼‍💻","👩🏼‍💻","🧑🏼‍🎤","👨🏼‍🎤","👩🏼‍🎤","🧑🏼‍🎨","👨🏼‍🎨","👩🏼‍🎨","🧑🏼‍✈️","👨🏼‍✈️","👩🏼‍✈️","🧑🏼‍🚀","👨🏼‍🚀","👩🏼‍🚀","🧑🏼‍🚒","👨🏼‍🚒","👩🏼‍🚒","🕵🏼","🕵🏼‍♂️","🕵🏼‍♀️","💂🏼","💂🏼‍♂️","💂🏼‍♀️","🥷🏼","👷🏼","👷🏼‍♂️","👷🏼‍♀️","🫅🏼","🤴🏼","👸🏼","👳🏼","👳🏼‍♂️","👳🏼‍♀️","👲🏼","🧕🏼","🤵🏼","🤵🏼‍♂️","🤵🏼‍♀️","👰🏼","👰🏼‍♂️","👰🏼‍♀️","🫄🏼","🫃🏼","🤰🏼","🧑🏼‍🍼","👨🏼‍🍼","👩🏼‍🍼","🤱🏼","👼🏼","🎅🏼","🤶🏼","🧑🏼‍🎄","🦸🏼","🦸🏼‍♂️","🦸🏼‍♀️","🦹🏼","🦹🏼‍♂️","🦹🏼‍♀️","🧙🏼","🧙🏼‍♂️","🧙🏼‍♀️","🧚🏼","🧚🏼‍♂️","🧚🏼‍♀️","🧛🏼","🧛🏼‍♂️","🧛🏼‍♀️","🧜🏼","🧜🏼‍♂️","🧜🏼‍♀️","🧝🏼","🧝🏼‍♂️","🧝🏼‍♀️","💆🏼","💆🏼‍♂️","💆🏼‍♀️","💇🏼","💇🏼‍♂️","💇🏼‍♀️","🚶🏼","🚶🏼‍♂️","🚶🏼‍♀️","🧍🏼","🧍🏼‍♂️","🧍🏼‍♀️","🧎🏼","🧎🏼‍♂️","🧎🏼‍♀️","🧑🏼‍🦯","👨🏼‍🦯","👩🏼‍🦯","🧑🏼‍🦼","👨🏼‍🦼","👩🏼‍🦼","🧑🏼‍🦽","👨🏼‍🦽","👩🏼‍🦽","🏃🏼","🏃🏼‍♂️","🏃🏼‍♀️","🚶🏼‍➡️","🚶🏼‍♀️‍➡️","🚶🏼‍♂️‍➡️","🧎🏼‍➡️","🧎🏼‍♀️‍➡️","🧎🏼‍♂️‍➡️","🧑🏼‍🦯‍➡️","👨🏼‍🦯‍➡️","👩🏼‍🦯‍➡️","🧑🏼‍🦼‍➡️","👨🏼‍🦼‍➡️","👩🏼‍🦼‍➡️","🧑🏼‍🦽‍➡️","👨🏼‍🦽‍➡️","👩🏼‍🦽‍➡️","🏃🏼‍➡️","🏃🏼‍♀️‍➡️","🏃🏼‍♂️‍➡️","💃🏼","🕺🏼","🕴🏼","🧖🏼","🧖🏼‍♂️","🧖🏼‍♀️","🧗🏼","🧗🏼‍♂️","🧗🏼‍♀️","🏇🏼","🏂🏼","🏌🏼","🏌🏼‍♂️","🏌🏼‍♀️","🏄🏼","🏄🏼‍♂️","🏄🏼‍♀️","🚣🏼","🚣🏼‍♂️","🚣🏼‍♀️","🏊🏼","🏊🏼‍♂️","🏊🏼‍♀️","⛹🏼","⛹🏼‍♂️","⛹🏼‍♀️","🏋🏼","🏋🏼‍♂️","🏋🏼‍♀️","🚴🏼","🚴🏼‍♂️","🚴🏼‍♀️","🚵🏼","🚵🏼‍♂️","🚵🏼‍♀️","🤸🏼","🤸🏼‍♂️","🤸🏼‍♀️","🤽🏼","🤽🏼‍♂️","🤽🏼‍♀️","🤾🏼","🤾🏼‍♂️","🤾🏼‍♀️","🤹🏼","🤹🏼‍♂️","🤹🏼‍♀️","🧘🏼","🧘🏼‍♂️","🧘🏼‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🏃","🏃‍♂️","🏃‍♀️","🤹","🤹‍♂️","🧖","🧖‍♂️","🧖‍♀️","🕴️","🕺","💃","🧑‍⚕️","👨‍⚕️","👩‍⚕️","🧑‍🎓","👨‍🎓","👩‍🎓","🧑‍🏫","👨‍🏫","👩‍🏫","🧑‍⚖️","👨‍⚖️","👩‍⚖️","🧑‍🌾","👨‍🌾","👩‍🌾","🧑‍🍳","👨‍🍳","👩‍🍳","🤵","🤵‍♂️","🤵‍♀️","👰","👰‍♂️","👰‍♀️","🎅","🤶","🧑‍🎄","🦸","🦸‍♂️","🦸‍♀️","🦹","🦹‍♂️","🦹‍♀️","🧙","🧙‍♂️","🧙‍♀️","🧚","🧚‍♂️","🧚‍♀️","🧛","🧛‍♂️","🧛‍♀️","🧜","🧜‍♂️","🧜‍♀️","🧝","🧝‍♂️","🧝‍♀️","🧞","🧞‍♂️","🧞‍♀️","🧟","🧟‍♂️","🧟‍♀️","🧌","🧌","🙍","🙍‍♂️","🙍‍♀️","🙎","🙎‍♂️","🙎‍♀️","🙅","🙅‍♂️","🙅‍♀️","🙆","🙆‍♂️","🙆‍♀️","💁","💁‍♂️","💁‍♀️","🙋","🙋‍♂️","🙋‍♀️","🤦","🤦‍♂️","🤦‍♀️","🤷","🤷‍♂️","🤷‍♀️","🚶","🚶‍♂️","🚶‍♀️","🧕","🤰","🤱","🧘","🧘‍♂️","🧘‍♀️","🤾‍♀️","🤾‍♂️","🤾","🤽‍♀️","🤽‍♂️","🤽","🤸‍♀️","🤸‍♂️","🤸","💆","💆‍♂️","💆‍♀️","💇","💇‍♂️","💇‍♀️","🤺","🏇","⛷","🏂","🏌","🏌️‍♂️","🏌️‍♀️","🏄","🏄‍♂️","🏄‍♀️","🚣","🚣‍♂️","🚣‍♀️","🏊","🏊‍♂️","🏊‍♀️","⛹","⛹️‍♂️","⛹️‍♀️","🏋","🏋️‍♂️","🏋️‍♀️","🚴","🚴‍♂️","🚴‍♀️","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿","🧸","🎃","⛄","☃","🌞","🌝","🌜","🌛"];static adStart=["Brought to you by ","Supported by ","Presented by ","Sponsored by ","Made possible by ","This segment is brought to you by ","Thanks to our sponsor, ","In association with ","Powered by ","With special thanks to ","Developed by ","Special thanks to our sponsor ","Thanks to ","Supported in part by ","Thank you to our sponsor ","Special thank to "];static companyNames=["Solutions","Technologies","Concepts","Systems","Products","Services","Ideas","Strategies","Experiences","Designs","Google","Twitter","Facebook","Youtube","Instagram","Wikipedia","Reddit","Yahoo","Amazon","Netflix","Microsoft","Roblox","Minecraft"];static catchphraseBeginnings=["For a Brighter ","Where Dreams Meet ","Empowering Your ","Simplifying Your ","Unlocking ","Bringing Ideas to ","Innovating Your ","Transforming the ","Crafting a Better ","Building the Path to ","Shaping the World of ","Redefining Your ","Igniting the ","Leading the Charge for ","Creating Endless ","Connecting You to ","Designing the ","Empowering the Next ","Pioneering the ","Revolutionizing Your ","Inspiring the ","Guiding the ","Advancing the ","Illuminating Your ","Enhancing the ","Nurturing a Better ","Driving the Future of ","Harnessing the Power of ","Leaders in ","First in ","Get the ","Don't be ","Just ","Get ","","100% ","Experience the ","Stay Ahead with ","The Power of ","Focus on ","Your Source for ","Setting the Standard for ","Full Speed ","Discover ","Maximize Your ","Let's Go ","Built for ","Delivering ","Elevate Your ","Destroy ","Demolish ","Annihilate ","Obliterate ","Ruin ","Overthrow ","Devastate ","Wreck ","Dismantle ","Emasculate ","Destabilize ","Diminish ","Undermine ","Subdue ","Suppress ","Humiliate ","Belittle ","Disempower ","Dethrone ","Deflate ","Discourage ","Dishearten ","Reduce ","Invalidate ","Deter ","Eradicate ","You're One-Stop Shop For ","Made for ","Designed for ","Built for ","Think "];static catchphraseMiddles=["Tomorrow","Reality","Future","Life","Potential","You","World","Ordinary","Possibilities","Innovation","Success","Horizon","Journey","Excellence","Vision","Beyond","Adventure","Dreams","Opportunities","Change","Solutions","Evolution","Growth","Progress","Ambition","Momentum","Exploration","Discovery","Transformation","Evil","Wickedness","Malevolence","Sin","Iniquity","Villainy","Depravity","Corruption","Malice","Immorality","Wrongdoing","Deception","Fraud","Dishonesty","Trickery","Duplicity","Scam","Betrayal","Subterfuge","Lies","Scum","Falsification","Nature","Health","Family","Business","Money","Capitalism","Democracy","Community","Civilization","Republic","Liberty","Society","Humanism","Justice","Sustainability","Equality","Citizenship"];static catchphraseEndings=["","","","","","","","","",""," in the USA"," Today"," Tomorrow"," Forever"," for All"," Always"," for Now","-ish"," Fun",", Dude!",", Bro!"," to the Extreme"," and Love"," of Business"," and Family"," and Beyond"," and More"," for Everyone"," at Heart"," with Style"," like Never Before"," in Style"," to the Max"," to the Core"," with Passion"," on Steroids"," for the Win"," and Adventure"," and Happiness"," and Joy"," and Fun"," in Every Step"," and the Future"," for the Brave"," with Flair"," to the Moon"," like a Boss"," and Unity"," and Peace"," with Purpose"," and Energy"];static playerPositions=["1st Base","2nd Base","3rd Base","Absurdist","Agitator","All-rounder","Artist","Backfielder","Banjo Hitter","Base Administrator","Base Compliance Officer","Base Coordinator","Base Logistics Manager","Baseman","Base Services Coordinator","Base Supervisor","Batboy","Bat Conservation Officer","Batgirl","Bat Habitat Manager","Batman","Bat Research Engineer","Batter","Benchwarmer","Big Whiffer","Boatswain","Bowler","Butcher","Caregiver","Catcher","Catchall","Catch-22","Center Base","Center Fielder","Clairvoyant","Coach","Color Commentator","Comeback Kid","Comedian","Corner Outfielder","Data Analyst","Debaser","Debater","Defender","Diamond Appraiser","Diamond Cutter","Diamond Polisher","Distracter","Enforcer","Entertainer","Equipment Manager","Existentialist","Feminist","Field Consultant","Field Data Analyst","Field Engineer","Field Hand","Field Operations Specialist","Field Research Scientist","Field Service Manager","Field Technician","First Base","First Baseman","First Mate","Forward","Fourth Baseman","Gatekeeper","Ghost Runner","Glove Distribution Technician","Glover","Goofball","Hit and Run Analyst","Hitmaker","Hitman","Idealist","Illusionist","Infield","Infielder","Last Base","Left Base","Left Fielder","Leftist","Left-winger","Mastermind","Mendoza Line","Mentor","Midfielder","Nihilist","Nonconformist","null","Optimist","Ornithologist","Outfield","Outfielder","Pacifist","Park Naturalist","Park Patrol Officer","Park Ranger","Pessimist","Phantom Ballplayer","Pianist","Pinch Hitter","Pinch Runner","Plagiarist","Pragmatist","Professor","Prophet","Quartermaster","Rebel","Renegade","Right Base","Right Fielder","Second Base","Second Baseman","Shortstop","Sign Stealer","Streaker","Strike Force Supervisor","Strike Negotiation Specialist","Strike Planning Consultant","Striker","Sweeper","Switch Hitter","Team Captain","Team Mascot","Third Base","Third Baseman","Tight End","Underdog","Utility Infielder","Wicketkeeper","Winger"];static find_first_vowel(t){for(let e=0;e<t.length;e++){var a=t[e];if("aeiou".includes(a.toLowerCase()))return e}return-1}static findLetterMatch(t,a,s){if(0==s)return null;for(let e=0;e<t.length;e++){var r=t[e];if(!(r.length<s)&&a.substring(0,s).toLowerCase()==r.substring(0,s).toLowerCase())return r.charAt(0).toUpperCase()+r.slice(1)}return Name.findLetterMatch(t,a,s-1)}static create_first_name(){var e=HelpMe.randomItem(Name.firstNameList),t=HelpMe.randomItem(Name.firstNameList);let a=e.substring(0,Name.find_first_vowel(e));return a=(a+=t.substring(Name.find_first_vowel(t))).charAt(0).toUpperCase()+a.substring(1).toLowerCase()}static create_last_name(){var e=HelpMe.randomItem(Name.lastNameList),t=HelpMe.randomItem(Name.lastNameList);let a=e.substring(0,Name.find_first_vowel(e));return a=(a+=t.substring(Name.find_first_vowel(t))).charAt(0).toUpperCase()+a.substring(1).toLowerCase()}static create_nickName(e,t){var a=HelpMe.randomItem(Name.adjList);let s="";Model.rng.random()<.3?(r=Name.findLetterMatch(Name.adjList,e,3),s=null!=r?r:a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()):Model.rng.random()<.3&&(s=a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()),1<s.length&&(s+=Model.rng.random()<.5?"-":" ");var r=HelpMe.randomItem(Name.nickNameList);let i=r.charAt(0).toUpperCase()+r.substring(1).toLowerCase();return Model.rng.random()<.3?null!=(a=Name.findLetterMatch(Name.nickNameList,t,3))&&(i=a):Model.rng.random()<.3?null!=(r=Name.findLetterMatch(Name.nickNameList,e,3))&&(i=r):Model.rng.random()<.3?i=t[0]:Model.rng.random()<.3&&(i=e[0]),(s+=i).length<3&&(-1<Name.find_first_vowel(e)?(s=e.substring(0,Name.find_first_vowel(e)+1),s+=e.substring(0,Name.find_first_vowel(e)+1).toLowerCase()):s=e[0]+e[0]),s}static create_name(){var e=Name.create_first_name(),t=Name.create_last_name();return e+' "'+Name.create_nickName(e,t)+'" '+t}static create_college(){var e=Name.places[Math.floor(Model.rng.random()*Name.places.length)],t=Math.round(Model.rng.random())+Math.round(Model.rng.random())+Math.round(Model.rng.random());return 0==t?"U"+e:1==t?e+"U":2==t?e+" State":3==t?e+" Tech":void 0}static generateAd(){var e=HelpMe.randomItem(Name.adStart),t=HelpMe.randomItem(Name.companyNames),a=HelpMe.randomItem(Name.adjList);return`AD: ${e}${a.charAt(0).toUpperCase()+a.slice(1,Math.ceil(a.length/2))}${t.slice(Math.floor(t.length/2))}™ - `+(HelpMe.randomItem(Name.catchphraseBeginnings)+HelpMe.randomItem(Name.catchphraseMiddles)+HelpMe.randomItem(Name.catchphraseEndings))}static getCharSum(e){let t=0;for(var a=0;a<e.length;a++)t+=e.charCodeAt(a);return t}}let colorCombinations=[{light:"#7fffbf",mid:"#e05151",dark:"#072644"},{light:"#8cbff2",mid:"#ff3232",dark:"#0f5633"},{light:"#9292eb",mid:"#ea4747",dark:"#004c00"},{light:"#7fff7f",mid:"#e05151",dark:"#070744"},{light:"#bff28c",mid:"#ff3232",dark:"#0f5656"},{light:"#bf92eb",mid:"#ea4747",dark:"#264c00"},{light:"#7ffeff",mid:"#e05151",dark:"#320a5b"},{light:"#f1f9d1",mid:"#ff3232",dark:"#738a18"},{light:"#dafae7",mid:"#ff3232",dark:"#1a934a"},{light:"#e3edfb",mid:"#ff3232",dark:"#1b4e9c"},{light:"#f9ecfc",mid:"#ff3232",dark:"#891da4"},{light:"#7ffff4",mid:"#e08d51",dark:"#070c44"},{light:"#8c94f2",mid:"#ff8832",dark:"#0f5650"},{light:"#b792eb",mid:"#ea8b47",dark:"#004c1f"},{light:"#7fffb4",mid:"#e08d51",dark:"#210744"},{light:"#94f28c",mid:"#ff8832",dark:"#0f3856"},{light:"#e492eb",mid:"#ea8b47",dark:"#064c00"},{light:"#7fc9ff",mid:"#e08d51",dark:"#540a5b"},{light:"#e0f9d1",mid:"#ff8832",dark:"#448a18"},{light:"#dafaf4",mid:"#ff8832",dark:"#1a937d"},{light:"#e3e3fb",mid:"#ff8832",dark:"#1d1b9c"},{light:"#fcecf9",mid:"#ff8832",dark:"#a41d87"},{light:"#7fd4ff",mid:"#e0c851",dark:"#1c0744"},{light:"#ae8cf2",mid:"#ffdd32",dark:"#0f3e56"},{light:"#dc92eb",mid:"#eacf47",dark:"#004c3f"},{light:"#7fffe9",mid:"#e0c851",dark:"#3a0744"},{light:"#8cf2ae",mid:"#ffdd32",dark:"#0f1b56"},{light:"#eb92ce",mid:"#eacf47",dark:"#004c19"},{light:"#7f94ff",mid:"#e0c851",dark:"#5b0a40"},{light:"#d1f9d2",mid:"#ffdd32",dark:"#188a1c"},{light:"#daf3fa",mid:"#ffdd32",dark:"#1a7793"},{light:"#eee3fb",mid:"#ffdd32",dark:"#531b9c"},{light:"#fcecf2",mid:"#ffdd32",dark:"#a41d4e"},{light:"#7f9fff",mid:"#bce051",dark:"#350744"},{light:"#d88cf2",mid:"#ccff32",dark:"#0f2156"},{light:"#eb92d5",mid:"#c1ea47",dark:"#00394c"},{light:"#7fdfff",mid:"#bce051",dark:"#440735"},{light:"#8cf2d8",mid:"#ccff32",dark:"#210f56"},{light:"#eb92a8",mid:"#c1ea47",dark:"#004c39"},{light:"#9f7fff",mid:"#bce051",dark:"#5b0a1e"},{light:"#d1f9e3",mid:"#ccff32",dark:"#188a4b"},{light:"#dae5fa",mid:"#ccff32",dark:"#1a4493"},{light:"#f8e3fb",mid:"#ccff32",dark:"#881b9c"},{light:"#fcedec",mid:"#ccff32",dark:"#a4231d"},{light:"#947fff",mid:"#81e051",dark:"#44073a"},{light:"#f28ce1",mid:"#76ff32",dark:"#1b0f56"},{light:"#eb92b0",mid:"#7dea47",dark:"#00194c"},{light:"#7fa9ff",mid:"#81e051",dark:"#44071c"},{light:"#8ce1f2",mid:"#76ff32",dark:"#3e0f56"},{light:"#eba192",mid:"#7dea47",dark:"#003f4c"},{light:"#d47fff",mid:"#81e051",dark:"#5b170a"},{light:"#d1f9f4",mid:"#76ff32",dark:"#188a7b"},{light:"#dcdafa",mid:"#76ff32",dark:"#221a93"},{light:"#fbe3f5",mid:"#76ff32",dark:"#9c1b79"},{light:"#fcf4ec",mid:"#76ff32",dark:"#a45c1d"},{light:"#c97fff",mid:"#51e05d",dark:"#440721"},{light:"#f28cb6",mid:"#32ff44",dark:"#380f56"},{light:"#eb9a92",mid:"#47ea55",dark:"#06004c"},{light:"#8a7fff",mid:"#51e05d",dark:"#440c07"},{light:"#8cb6f2",mid:"#32ff44",dark:"#560f50"},{light:"#ebc692",mid:"#47ea55",dark:"#001f4c"},{light:"#ff7ff4",mid:"#51e05d",dark:"#5b390a"},{light:"#d1eef9",mid:"#32ff44",dark:"#186a8a"},{light:"#eadafa",mid:"#32ff44",dark:"#541a93"},{light:"#fbe3eb",mid:"#32ff44",dark:"#9c1b44"},{light:"#fcfbec",mid:"#32ff44",dark:"#a4941d"},{light:"#ff7ffe",mid:"#51e099",dark:"#440707"},{light:"#f28c8c",mid:"#32ff99",dark:"#560f56"},{light:"#ebbf92",mid:"#47ea99",dark:"#26004c"},{light:"#bf7fff",mid:"#51e099",dark:"#442607"},{light:"#8c8cf2",mid:"#32ff99",dark:"#560f33"},{light:"#ebeb92",mid:"#47ea99",dark:"#00004c"},{light:"#ff7fbf",mid:"#51e099",dark:"#5b5b0a"},{light:"#d1ddf9",mid:"#32ff99",dark:"#183a8a"},{light:"#f7dafa",mid:"#32ff99",dark:"#871a93"},{light:"#fbe5e3",mid:"#32ff99",dark:"#9c281b"},{light:"#f8fcec",mid:"#32ff99",dark:"#7ca41d"},{light:"#ff7fc9",mid:"#51e0d4",dark:"#442107"},{light:"#f2b68c",mid:"#32ffee",dark:"#560f38"},{light:"#ebe492",mid:"#47eadd",dark:"#46004c"},{light:"#f47fff",mid:"#51e0d4",dark:"#443f07"},{light:"#b68cf2",mid:"#32ffee",dark:"#560f15"},{light:"#c6eb92",mid:"#47eadd",dark:"#1f004c"},{light:"#ff7f8a",mid:"#51e0d4",dark:"#395b0a"},{light:"#d5d1f9",mid:"#32ffee",dark:"#25188a"},{light:"#fadaf0",mid:"#32ffee",dark:"#931a6c"},{light:"#fbf0e3",mid:"#32ffee",dark:"#9c5d1b"},{light:"#f1fcec",mid:"#32ffee",dark:"#43a41d"},{light:"#ff7f94",mid:"#51b0e0",dark:"#443a07"},{light:"#f2e18c",mid:"#32baff",dark:"#560f1b"},{light:"#ceeb92",mid:"#47b4ea",dark:"#4c0032"},{light:"#ff7fd4",mid:"#51b0e0",dark:"#304407"},{light:"#e18cf2",mid:"#32baff",dark:"#56270f"},{light:"#a1eb92",mid:"#47b4ea",dark:"#3f004c"},{light:"#ffaa7f",mid:"#51b0e0",dark:"#175b0a"},{light:"#e6d1f9",mid:"#32baff",dark:"#55188a"},{light:"#fadae2",mid:"#32baff",dark:"#931a3a"},{light:"#fbfae3",mid:"#32baff",dark:"#9c931b"},{light:"#ecfcee",mid:"#32baff",dark:"#1da42f"},{light:"#ff9f7f",mid:"#5175e0",dark:"#354407"},{light:"#d8f28c",mid:"#3265ff",dark:"#56210f"},{light:"#a8eb92",mid:"#4770ea",dark:"#4c0013"},{light:"#ff7f9f",mid:"#5175e0",dark:"#164407"},{light:"#f28cd8",mid:"#3265ff",dark:"#56440f"},{light:"#92eba8",mid:"#4770ea",dark:"#4c0039"},{light:"#ffdf7f",mid:"#5175e0",dark:"#0a5b1e"},{light:"#f7d1f9",mid:"#3265ff",dark:"#85188a"},{light:"#fadfda",mid:"#3265ff",dark:"#932c1a"},{light:"#f3fbe3",mid:"#3265ff",dark:"#6f9c1b"},{light:"#ecfcf5",mid:"#3265ff",dark:"#1da467"},{light:"#ffd47f",mid:"#6951e0",dark:"#1c4407"},{light:"#aef28c",mid:"#5432ff",dark:"#563e0f"},{light:"#92eba1",mid:"#6247ea",dark:"#4c0c00"},{light:"#ff947f",mid:"#6951e0",dark:"#074411"},{light:"#f28cae",mid:"#5432ff",dark:"#4a560f"},{light:"#92ebce",mid:"#6247ea",dark:"#4c0019"},{light:"#e9ff7f",mid:"#6951e0",dark:"#0a5b40"},{light:"#f9d1ea",mid:"#5432ff",dark:"#8a1860"},{light:"#faecda",mid:"#5432ff",dark:"#935e1a"},{light:"#e9fbe3",mid:"#5432ff",dark:"#399c1b"},{light:"#ecfcfc",mid:"#5432ff",dark:"#1da4a0"},{light:"#f4ff7f",mid:"#a451e0",dark:"#07440c"},{light:"#8cf294",mid:"#a932ff",dark:"#50560f"},{light:"#92ebc6",mid:"#a647ea",dark:"#4c2c00"},{light:"#ffc97f",mid:"#a451e0",dark:"#07442b"},{light:"#f2948c",mid:"#a932ff",dark:"#2d560f"},{light:"#92e4eb",mid:"#a647ea",dark:"#4c0600"},{light:"#b4ff7f",mid:"#a451e0",dark:"#0a555b"},{light:"#f9d1d9",mid:"#a932ff",dark:"#8a1831"},{light:"#fafada",mid:"#a932ff",dark:"#93911a"},{light:"#e3fbe7",mid:"#a932ff",dark:"#1b9c33"},{light:"#ecf6fc",mid:"#a932ff",dark:"#1d70a4"},{light:"#bfff7f",mid:"#e051e0",dark:"#074426"},{light:"#8cf2bf",mid:"#ff32fe",dark:"#33560f"},{light:"#92ebeb",mid:"#ea47ea",dark:"#4c4c00"},{light:"#feff7f",mid:"#e051e0",dark:"#074444"},{light:"#f2bf8c",mid:"#ff32fe",dark:"#0f560f"},{light:"#92bfeb",mid:"#ea47ea",dark:"#4c2600"},{light:"#7fff7f",mid:"#e051e0",dark:"#0a325b"},{light:"#f9d9d1",mid:"#ff32fe",dark:"#8a2f18"},{light:"#edfada",mid:"#ff32fe",dark:"#62931a"},{light:"#e3fbf2",mid:"#ff32fe",dark:"#1b9c68"},{light:"#eceffc",mid:"#ff32fe",dark:"#1d38a4"},{light:"#8aff7f",mid:"#e051a4",dark:"#07443f"},{light:"#8cf2e9",mid:"#ff32aa",dark:"#15560f"},{light:"#92c6eb",mid:"#ea47a6",dark:"#2c4c00"},{light:"#c9ff7f",mid:"#e051a4",dark:"#072b44"},{light:"#f2e98c",mid:"#ff32aa",dark:"#0f562d"},{light:"#929aeb",mid:"#ea47a6",dark:"#4c4600"},{light:"#7fffb4",mid:"#e051a4",dark:"#0a105b"},{light:"#f9ead1",mid:"#ff32aa",dark:"#8a5e18"},{light:"#e0fada",mid:"#ff32aa",dark:"#30931a"},{light:"#e3fbfb",mid:"#ff32aa",dark:"#1b999c"},{light:"#f0ecfc",mid:"#ff32aa",dark:"#3a1da4"}];class HelpMe{static choice(e){return e[Math.floor(Model.rng.random()*e.length)]}static getRaggedArraySize(t){let a=0;for(let e=0;e<t.length;e++)Array.isArray(t[e])?a+=t[e].length:null!=t[e]&&(a+=1);return a}static isHexcodeDark(e){if(/^#([0-9A-F]{3}){1,2}$/i.test(e))return e=e.slice(1),.299*parseInt(3===e.length?e[0]+e[0]:e.substring(0,2),16)+.587*parseInt(3===e.length?e[1]+e[1]:e.substring(2,4),16)+.114*parseInt(3===e.length?e[2]+e[2]:e.substring(4,6),16)<128;throw new Error("Invalid hexcode")}static randomItem(e){return e[Math.floor(Model.rng.random()*e.length)]}static removeFirstHalfRandom(e){return null!=e&&0<e.length?e.splice(Math.floor(Model.rng.random()*e.length/2),1)[0]:null}static removeRandom(e){return null!=e&&0<e.length?e.splice(Math.floor(Model.rng.random()*e.length),1)[0]:null}static roundToTenth(e){return Math.round(10*e)/10}static shuffle(e){let t=e.length;for(;0!=t;){var a=Math.floor(Model.rng.random()*t);t--,[e[t],e[a]]=[e[a],e[t]]}return e}}class AbstractBaseballGameState{static restructure(e){switch(e.name){case"AwayPlayerAtBat":Object.setPrototypeOf(e,AwayPlayerAtBat.prototype);break;case"AwayPlayerStepsUpToBat":Object.setPrototypeOf(e,AwayPlayerStepsUpToBat.prototype);break;case"BottomOfTheInning":Object.setPrototypeOf(e,BottomOfTheInning.prototype);break;case"EndOfGame":Object.setPrototypeOf(e,EndOfGame.prototype);break;case"FinalMessage":Object.setPrototypeOf(e,FinalMessage.prototype);break;case"HomePlayerAtBat":Object.setPrototypeOf(e,HomePlayerAtBat.prototype);break;case"HomePlayerStepsUpToBat":Object.setPrototypeOf(e,HomePlayerStepsUpToBat.prototype);break;case"InningIsNowAnOuting":Object.setPrototypeOf(e,InningIsNowAnOuting.prototype);break;case"PlayBall":Object.setPrototypeOf(e,PlayBall.prototype);break;case"TopOfTheInning":Object.setPrototypeOf(e,TopOfTheInning.prototype)}return e}constructor(){if(this.name="AbstractBaseballGameState",void 0===this.handle)throw new Error("Must implement the method handle");if(void 0===this.nextState)throw new Error("Must implement the method nextState");if(void 0===this.previousState)throw new Error("Must implement the method previousState")}handle(e){throw new Error("Must implement the method handle")}nextState(e){throw new Error("Must implement the method nextState")}previousState(e){throw new Error("Must implement the method previousState")}}class AwayPlayerAtBat extends AbstractBaseballGameState{constructor(){super(),this.name="AwayPlayerAtBat"}handle(e){var t=e.nextPitch();return 3<=e.getOuts()?this.nextState(e):(3<=e.getStrikes()||4<=e.getBalls())&&(this.previousState(e),this.setCountToZero()),3<=e.getOuts()&&9<=e.getInning()&&e.scoreboard.getHomeScore()>e.scoreboard.getAwayScore()&&e.setGameState(new FinalMessage),t}nextState(e){e.setGameState(new BottomOfTheInning)}previousState(e){e.setGameState(new AwayPlayerStepsUpToBat)}}class AwayPlayerStepsUpToBat extends AbstractBaseballGameState{constructor(){super(),this.name="AwayPlayerStepsUpToBat"}handle(e){return this.nextState(e),e.nextBatter(),e.batter.getFullNameWithLink(20)+" steps up to bat for the "+e.awayTeam.getNameWithLink(20)}nextState(e){e.setGameState(new AwayPlayerAtBat)}previousState(e){throw new Error("Cannot move back to previous state")}}class BottomOfTheInning extends AbstractBaseballGameState{constructor(){super(),this.name="BottomOfTheInning"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],this.nextState(e),this.setupBottomInning(e)}nextState(e){e.setGameState(new HomePlayerStepsUpToBat)}previousState(e){throw new Error("Cannot move back to previous state")}setupBottomInning(e){return e.setInningTop(!1),e.setOffenseTeam(),e.setCountToZero(),e.addBoxScoreInning(),e.awayTeam.pitcher.manager.notify(new GameEvent(GameEventType.INNINGS_PITCHED,e.awayTeam.leagueIdNumber,e.awayTeam.pitcher.leagueIdNumber)),"Bottom of inning "+e.getInning()+", "+e.offenseTeam.getNameWithLink(20)+" batting."}}class EndOfGame extends AbstractBaseballGameState{constructor(){super(),this.name="EndOfGame"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],e.setGameOver(),e.homeTeam.batterUpNumber=0,e.awayTeam.batterUpNumber=0,e.getWinningTeam().getNameWithLink(20)+" defeated "+e.getLosingTeam().getNameWithLink(20)}nextState(e){throw new Error("Cannot move to next state")}previousState(e){throw new Error("Cannot move back to previous state")}}class FinalMessage extends AbstractBaseballGameState{constructor(){super(),this.name="FinalMessage"}handle(e){return e.finalMessage=!0,this.nextState(e),e.getWinningTeam().manager.notify(new GameEvent(GameEventType.GAME_WINNER,e.getWinningTeam().leagueIdNumber)),e.getLosingTeam().manager.notify(new GameEvent(GameEventType.GAME_LOSER,e.getLosingTeam().leagueIdNumber)),e.getWinningTeam().getNameWithLink(20)+" defeated "+e.getLosingTeam().getNameWithLink(20)}nextState(e){e.setGameState(new EndOfGame)}previousState(e){throw new Error("Cannot move back to previous state")}}class HomePlayerAtBat extends AbstractBaseballGameState{constructor(){super(),this.name="HomePlayerAtBat"}handle(e){var t=e.nextPitch();return 3<=e.getOuts()?this.nextState(e):(3<=e.getStrikes()||4<=e.getBalls())&&(this.previousState(e),this.setCountToZero()),3<=e.getOuts()&&9<=e.getInning()&&e.scoreboard.getHomeScore()!=e.scoreboard.getAwayScore()&&e.setGameState(new FinalMessage),t}nextState(e){e.setGameState(new InningIsNowAnOuting)}previousState(e){e.setGameState(new HomePlayerStepsUpToBat)}}class HomePlayerStepsUpToBat extends AbstractBaseballGameState{constructor(){super(),this.name="HomePlayerStepsUpToBat"}handle(e){return this.nextState(e),e.nextBatter(),e.batter.getFullNameWithLink(20)+" steps up to bat for the "+e.homeTeam.getNameWithLink(20)}nextState(e){e.setGameState(new HomePlayerAtBat)}previousState(e){throw new Error("Cannot move back to previous state")}}class InningIsNowAnOuting extends AbstractBaseballGameState{constructor(){super(),this.name="InningIsNowAnOuting"}handle(e){return this.nextState(e),"Inning "+e.getInning()+" is now an Outing."}nextState(e){e.setGameState(new TopOfTheInning)}previousState(e){throw new Error("Cannot move back to previous state")}}class PlayBall extends AbstractBaseballGameState{constructor(){super(),this.name="PlayBall"}handle(e){return e.defenseTeam=e.homeTeam,e.offenseTeam=e.awayTeam,e.homeTeam.batterUpNumber=0,e.awayTeam.batterUpNumber=0,e.pitcher=e.defenseTeam.getPitcher(),this.nextState(e),e.setGameStarted(),"PLAY BALL!"}nextState(e){e.setGameState(new TopOfTheInning)}previousState(e){throw new Error("Cannot move back to previous state")}}class TopOfTheInning extends AbstractBaseballGameState{constructor(){super(),this.name="TopOfTheInning"}handle(e){return e.count={balls:0,strikes:0,outs:0},e.onBase=[null,null,null],this.nextState(e),this.setupTopInning(e)}nextState(e){e.setGameState(new AwayPlayerStepsUpToBat)}previousState(e){throw new Error("Cannot move back to previous state")}setupTopInning(e){return e.setInningTop(!0),e.setOffenseTeam(),e.setCountToZero(),e.incrementInning(),e.addBoxScoreInning(),e.homeTeam.pitcher.manager.notify(new GameEvent(GameEventType.INNINGS_PITCHED,e.homeTeam.leagueIdNumber,e.homeTeam.pitcher.leagueIdNumber)),"Top of inning "+e.getInning()+", "+e.offenseTeam.getNameWithLink(20)+" batting."}}class Stats{static restructure(e){return e=Object.setPrototypeOf(e,Stats.prototype)}constructor(){this.gamesPlayed=0,this.wins=0,this.losses=0,this.plateAppearances=0,this.atBats=0,this.hits=0,this.singles=0,this.doubles=0,this.triples=0,this.homeRuns=0,this.runsScored=0,this.sacrificeFlies=0,this.totalBases=0,this.basesOnBalls=0,this.strikeoutsAtBat=0,this.stolenBases=0,this.hitByPitch=0,this.inningsPitched=0,this.strikeoutsThrown=0,this.runsAllowed=0,this.homeRunsAllowed=0,this.walksAllowed=0}getBattingAverage(){return 0<this.atBats?(this.hits/this.atBats).toFixed(3):0}getHitsPerGame(){return 0<this.gamesPlayed?(this.hits/this.gamesPlayed).toFixed(3):0}getOnBasePercentage(){return 0<this.atBats?((this.hits+this.basesOnBalls+this.hitByPitch)/(this.atBats+this.basesOnBalls+this.hitByPitch+this.sacrificeFlies)).toFixed(3):0}getOnBasePlusSlugging(){return 0<this.atBats?((this.atBats*(this.hits+this.basesOnBalls+this.hitByPitch)+this.totalBases*(this.atBats+this.basesOnBalls+this.sacrificeFlies+this.hitByPitch))/(this.atBats*(this.atBats+this.basesOnBalls+this.sacrificeFlies+this.hitByPitch))).toFixed(3):-1}getRunsPerGame(){return 0<this.gamesPlayed?(this.runsScored/this.gamesPlayed).toFixed(3):0}getRunsPerPlateAppearance(){return 0<this.plateAppearances?(this.runsScored/this.plateAppearances).toFixed(3):0}getEarnedRunAverage(){return 0<this.inningsPitched?(this.runsAllowed/this.inningsPitched*9).toFixed(3):999}getStrikeoutsPerNineInnings(){return 0===this.inningsPitched?0:(this.strikeoutsThrown/this.inningsPitched*9).toFixed(2)}stringFormatKey(e){return e.replace(/([A-Z])/g," $1").replace(/^./,e=>e.toUpperCase())}getRecordAndPitcherStats(){var{gamesPlayed:e,wins:t,losses:a,inningsPitched:s,strikeoutsThrown:r,runsAllowed:i,homeRunsAllowed:o,walksAllowed:n}=this;return`
        <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
            <tbody>
                ${`
        <tr>
            <td>${this.stringFormatKey("gamesPlayed")}</td>
            <td>${e}</td>
        </tr>
        <tr>
            <td>Win Percent</td>
            <td>${0<e?Math.round(t/e*100)+"%":"0%"}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("wins")}</td>
            <td>${t}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("losses")}</td>
            <td>${a}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("inningsPitched")}</td>
            <td>${s}</td>
        </tr>
        ${0<s?`
            <tr>
            <td>Earned Run Average</td>
            <td>${this.getEarnedRunAverage()}</td>
            </tr>
            <tr>
            <td>Strikeouts Per 9 Innings</td>
            <td>${this.getStrikeoutsPerNineInnings()}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("strikeoutsThrown")}</td>
            <td>${r}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("runsAllowed")}</td>
            <td>${i}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("homeRunsAllowed")}</td>
            <td>${o}</td>
            </tr>
            <tr>
            <td>${this.stringFormatKey("walksAllowed")}</td>
            <td>${n}</td>
            </tr>
        `:""}
        `}
            </tbody>
        </table>
    `.trim()}getBatterStats(){var{plateAppearances:e,atBats:t,hits:a,singles:s,doubles:r,triples:i,homeRuns:o,runsScored:n,stolenBases:l,strikeoutsAtBat:d,sacrificeFlies:c}=this;return`
        <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
        <tbody>
            ${`
        <tr>
            <td>Batting Average</td>
            <td>${this.getBattingAverage()}</td>
        </tr>
        <!--tr>
            <td>${this.stringFormatKey("plateAppearances")}</td>
            <td>${e}</td>
        </tr-->
        <tr>
            <td>${this.stringFormatKey("atBats")}</td>
            <td>${t}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("hits")}</td>
            <td>${a}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("singles")}</td>
            <td>${s}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("doubles")}</td>
            <td>${r}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("triples")}</td>
            <td>${i}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("homeRuns")}</td>
            <td>${o}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("runsScored")}</td>
            <td>${n}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("stolenBases")}</td>
            <td>${l}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("strikeoutsAtBat")}</td>
            <td>${d}</td>
        </tr>
        <tr>
            <td>${this.stringFormatKey("sacrificeFlies")}</td>
            <td>${c}</td>
        </tr>
        `}
        </tbody>
        </table>
    `.trim()}}let GameEventType={GAME_WINNER:0,GAME_LOSER:1,PLATE_APPEARANCES:2,HITS:3,SINGLES:4,DOUBLES:5,TRIPLES:6,HOME_RUNS:7,RUNS_SCORED:8,BASES_ON_BALLS:9,SACRIFICE_FLIES:10,STRIKEOUTS_AT_BAT:11,STOLEN_BASES:12,HIT_BY_PITCH:13,INNINGS_PITCHED:14,STRIKEOUTS_THROWN:15,RUNS_ALLOWED:18,HOME_RUNS_ALLOWED:19,WALKS_ALLOWED:20,AT_BATS:21,PITCHER_CARD_TRIGGERED:100,SLUGGER_CARD_TRIGGERED:101,FAV_TEAM_CARD_TRIGGERED:102,END_OF_DAY:103};class GameEvent{static restructure(e){return e=Object.setPrototypeOf(e,GameEvent.prototype)}constructor(e,t,a){this.eventType=e,this.teamId=t,this.playerId=a}}class EventManager{static restructure(e){return e=Object.setPrototypeOf(e,EventManager.prototype),new EventManager}constructor(){this.listeners=[]}subscribe(e){this.listeners.includes(e)||this.listeners.push(e)}unsubscribe(t){this.listeners=this.listeners.filter(e=>e!==t)}notify(t){this.listeners.forEach(e=>{null!=e&&e(t)})}}class PlayerAttributes{static restructure(e){return Object.setPrototypeOf(e,PlayerAttributes.prototype),e}static randomPlayer(){var e=new PlayerAttributes;return e.hunger=1,e.metabolism=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.healthiness=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.balance=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.strength=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.accuracy=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.swinginess=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.thwackiness=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.power=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.reliability=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e.teamwork=BaseballPlayer.normalizeToTen(6*Model.rng.random()+6*Model.rng.random()),e}constructor(){this.canBat=!0,this.canCatch=!0,this.canPitch=!0,this.hunger=0,this.metabolism=0,this.healthiness=0,this.balance=0,this.strength=0,this.accuracy=0,this.swinginess=0,this.thwackiness=0,this.power=0,this.reliability=0,this.teamwork=0}}class PlayerCondition{static restructure(e){Object.setPrototypeOf(e,PlayerCondition.prototype)}static SHAKEN=new PlayerCondition("Shaken","uncertain",20,{accuracy:-5,balance:-5,reliability:-5,teamwork:-5});constructor(e,t,a,s={}){this.name=e,this.description=t,this.duration=a,this.active=!0,this.modifiers=new PlayerAttributes;for(var[r,i]of Object.entries(s))this.modifiers[r]=i}canBat(){return 0!=this.modifiers.canBat}canCatch(){return 0!=this.modifiers.canCatch}canPitch(){return 0!=this.modifiers.canPitch}reduceDuration(){null!==this.duration&&0<this.duration&&--this.duration,0===this.duration&&(this.active=!1)}toString(){return this.name.toUpperCase()+" "+this.description}}class BaseballPlayer{static idCounter=0;static restructure(e){(e=Object.setPrototypeOf(e,BaseballPlayer.prototype)).attributes=PlayerAttributes.restructure(e.attributes),e.stats=Stats.restructure(e.stats),e.crest=Crest.restructure(e.crest),e.manager=EventManager.restructure(e.manager),e.attributes=PlayerAttributes.restructure(e.attributes);for(var[t,a]of Object.entries(e.conditions))PlayerCondition.restructure(e.conditions[t]);return e}static normalizeToTen(e){return(e=Math.abs(e)%20)<=10?e:10-(e-10)}static nameList=["Roynx Chewy","Chrordelia Cistine","Rustin Jiley","Schelly Kenbeck"];constructor(e,t){this.leagueIdNumber=e,this.playerIdNumber=BaseballPlayer.idCounter++,this.firstName=Name.create_first_name(),this.lastName=Name.create_last_name(),this.nickName=Name.create_nickName(this.firstName,this.lastName),this.jerseyNumber=0,this.teamPlaceAbbreviation=null,this.teamPlaceName=null,this.teamMascot=null,this.teamLeagueIdNumber=0,this.crest=null,this.colorScheme=null,this.position="null",this.tattoos=Name.webSafeEmojiCodes[Name.getCharSum(this.firstName)%Name.webSafeEmojiCodes.length]+Name.webSafeEmojiCodes[Name.getCharSum(this.lastName)%Name.webSafeEmojiCodes.length],this.profilePic=Name.profileEmojis[Name.getCharSum(this.firstName)*Name.getCharSum(this.lastName)%Name.profileEmojis.length],this.age=Math.floor(11*Model.rng.random())+20+t,this.attributes=PlayerAttributes.randomPlayer(),this.conditions={},this.stats=new Stats,this.manager=new EventManager}addPlateAppearances(){this.stats.plateAppearances++}addAtBats(){this.stats.atBats++}addBasesOnBalls(){this.stats.basesOnBalls++}addDoubles(){this.stats.doubles++,this.addHits(),this.addTotalBases(2)}addHits(){this.stats.hits++}addHomeRuns(){this.stats.homeRuns++,this.addHits(),this.addTotalBases(4)}addHomeRunsAllowed(){this.stats.homeRunsAllowed++}addInningsPitched(){this.stats.inningsPitched++}addLoss(){this.stats.losses++,this.stats.gamesPlayed++}addRunsAllowed(){this.stats.runsAllowed++}addRunsScored(){this.stats.runsScored++}addSacrificeFlies(){this.stats.sacrificeFlies++}addSingles(){this.stats.singles++,this.addHits(),this.addTotalBases(1)}addStrikeoutsAtBat(){this.stats.strikeoutsAtBat++}addStrikeoutsThrown(){this.stats.strikeoutsThrown++}addTotalBases(e){this.stats.totalBases+=e}addTriples(){this.stats.triples++,this.addHits(),this.addTotalBases(3)}addWalksAllowed(){this.stats.walksAllowed++}addWin(){this.stats.wins++,this.stats.gamesPlayed++}addCondition(e){this.conditions.hasOwnProperty(e.name)?this.conditions[e.name].duration=e.duration:this.conditions[e.name]=e}canBat(){for(var e of this.conditions)if(!e.modifiers.canBat)return!1;return!0}canCatch(){for(var e of this.conditions)if(!e.modifiers.canCatch)return!1;return!0}canPitch(){for(var e of this.conditions)if(!e.modifiers.canPitch)return!1;return!0}equals(e){return this.playerIdNumber===e.playerIdNumber&&this.leagueIdNumber===e.leagueIdNumber&&this.firstName===e.firstName&&this.lastName===e.lastName&&this.jerseyNumber===e.jerseyNumber}getAccuracy(){let e=this.attributes.accuracy;for(var t of Object.values(this.conditions))e+=t.modifiers.accuracy;return e}getBalance(){let e=this.attributes.balance;for(var t of Object.values(this.conditions))e+=t.modifiers.balance;return e}getBattingAptitude(){return(this.getSwinginess()+this.getThwackiness()+this.getPower()-this.getTiredness(50))/3}getConditions(){let e="";for(var t of Object.values(this.conditions))e+=t.toString()+", ";return e.slice(0,-2)||"Normal"}getDefaultPosition(){return Name.playerPositions[Name.getCharSum(this.firstName+this.lastName)%Name.playerPositions.length]}getDefenseAptitude(){return(this.getReliability()+this.getTeamwork()-this.getTiredness(50))/2}getDefenseScore(e){e=this.getTiredness(e);return BaseballPlayer.normalizeToTen((this.getReliability()+this.getTeamwork())/2+this.getHunger()-e)}getEra(){return 0==this.stats.gamesPitched?-1:this.stats.runsAllowed/this.stats.gamesPitched}getFullName(e=40){return this.crest.render(e)+"&nbsp;"+this.teamPlaceAbbreviation+" "+this.firstName+" "+this.lastName}getFullNameWithLink(e=40){return this.crest.render(e)+`&nbsp;<a href="#" 
                class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" 
                onclick="app.view.statsModal.update(${this.leagueIdNumber});" data-bs-target="#statsModal" data-bs-toggle="modal" >`+this.teamPlaceAbbreviation+" "+this.firstName+" "+this.lastName+"</a>"}getHealthiness(){let e=this.attributes.healthiness;for(var t of Object.values(this.conditions))e+=t.modifiers.healthiness;return e}getHitScore(e,t){e=this.getTiredness(e);return t=BaseballPlayer.normalizeToTen(t),BaseballPlayer.normalizeToTen(this.getPower()+this.getHunger()-e-Math.abs(t-5))}getHunger(){let e=this.attributes.hunger;for(var t of Object.values(this.conditions))e+=t.modifiers.hunger;return e}getMetabolism(){let e=this.attributes.metabolism;for(var t of Object.values(this.conditions))e+=t.modifiers.metabolism;return e}getName(e){if(null==e)return this.teamPlaceAbbreviation+"&nbsp;"+this.lastName;let t="";return e.firstName&&(t+=this.firstName+" "),e.nickName&&(t+=`"${this.nickName}" `),e.lastName&&(t+=this.lastName+" "),t}getNameWithLink(e=40){return this.crest.render(e)+`&nbsp;<a href="#" 
        class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" 
        onclick="app.view.statsModal.update(${this.leagueIdNumber});" data-bs-target="#statsModal" data-bs-toggle="modal" >`+this.teamPlaceAbbreviation+" "+this.lastName+"</a>"}getOverallAptitude(){return(this.getDefenseAptitude()+this.getPitchingAptitude()+this.getBattingAptitude()-this.getTiredness(50))/3}getPitchingAptitude(){return(this.getAccuracy()+this.getStrength()+this.getMetabolism()-this.getTiredness(50))/3}getPitchScore(e){var t=this.getTiredness(e),e=Math.abs(Math.sin(e*(10-this.getAccuracy())*.5)*(10-this.getAccuracy())*.5);return BaseballPlayer.normalizeToTen(this.getStrength()-e+this.getHunger()-2*t)}getPower(){let e=this.attributes.power;for(var t of Object.values(this.conditions))e+=t.modifiers.power;return e}getReliability(){let e=this.attributes.reliability;for(var t of Object.values(this.conditions))e+=t.modifiers.reliability;return e}getStatsTable(){return`
            <ul class="nav nav-tabs nav-fill" id="playerTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" 
                    type="button" role="tab" aria-controls="details" aria-selected="true">Player Details</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="attributes-tab" data-bs-toggle="tab" data-bs-target="#attributes" 
                    type="button" role="tab" aria-controls="attributes" aria-selected="false">Attributes</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" 
                    type="button" role="tab" aria-controls="stats" aria-selected="false">Stats</button>
                </li>
                <!-- lifetime stats -->
                <!--li class="nav-item" role="presentation">
                    <button class="nav-link link-secondary" id="lifetime-tab" data-bs-toggle="tab" data-bs-target="#lifetime" 
                    type="button" role="tab" aria-controls="lifetime" aria-selected="false">Lifetime</button>
                </li-->
            </ul>
    
            <div class="tab-content" id="playerTabContent">
                <!-- Player Details Tab -->
                <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
                    <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                        <tr>
                            <th colspan="2" class="text-center">Player Details</th>
                        </tr>
                        <tr><td>Team</td><td>
                            ${this.crest.render(40)} <a href="#" onclick="app.view.statsModal.update(${this.teamLeagueIdNumber})" 
                            class="link text-light link-offset-2 link-light link-underline-opacity-25 link-underline-opacity-100-hover">
                                ${this.teamPlaceAbbreviation} ${this.teamPlaceName} ${this.teamMascot}
                            </a>
                        </td></tr>
                        <tr><td>League ID</td><td>${this.leagueIdNumber}</td></tr>
                        <tr><td>Full Name</td><td>${this.firstName} "${this.nickName}" ${this.lastName}</td></tr>
                        <tr><td>Jersey Number</td><td>${this.jerseyNumber}</td></tr>
                        <tr><td>Position</td><td>${this.position}</td></tr>
                        <tr><td>Tattoos</td><td><span class='noto fs-3'>${this.tattoos}</span></td></tr>
                        <tr><td>Age</td><td>${this.age}</td></tr>
                    </table>
                </div>

                                <!-- Attributes Tab -->
                <div class="tab-pane fade" id="attributes" role="tabpanel" aria-labelledby="attributes-tab">
                    <div class="row">
                        <div class="col col-lg-6">    
                            <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                                <th colspan="2" class="text-center">Wellness</th>
                                 <tr><td>Status</td><td>${this.getConditions()}</td></tr>
                                <tr><td>Hunger</td><td>${this.getHunger().toFixed(1)}</td></tr>
                                <tr><td>Metabolism</td><td>${this.getMetabolism().toFixed(1)}</td></tr>
                                <tr><td>Healthiness</td><td>${this.getHealthiness().toFixed(1)}</td></tr>
                                <tr><td>Balance</td><td>${this.getBalance().toFixed(1)}</td></tr>
                                <tr>
                                    <th colspan="2" class="text-center">Pitching Attributes</th>
                                </tr>
                                <tr><td>Pitch Strength</td><td>${this.getStrength().toFixed(1)}</td></tr>
                                <tr><td>Pitch Accuracy</td><td>${this.getAccuracy().toFixed(1)}</td></tr>
                                <tr><td>Avg. Pitching Aptitude</td><td>${this.getPitchingAptitude().toFixed(1)}</td></tr>
                                <tr>
                            </table>
                        </div>
                        <div class="col col-lg-6">   
                            <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                                <th colspan="2" class="text-center">Batting Attributes</th>
                                </tr>
                                <tr><td>Swinginess</td><td>${this.getSwinginess().toFixed(1)}</td></tr>
                                <tr><td>Thwackiness</td><td>${this.getThwackiness().toFixed(1)}</td></tr>
                                <tr><td>Hitting Power</td><td>${this.getPower().toFixed(1)}</td></tr>
                                <tr><td>Avg. Batting Aptitude</td><td>${this.getBattingAptitude().toFixed(1)}</td></tr>
                                <tr>
                                    <th colspan="2" class="text-center">Defense Attributes</th>
                                </tr>
                                <tr><td>Reliability</td><td>${this.getReliability().toFixed(1)}</td></tr>
                                <tr><td>Teamwork</td><td>${this.getTeamwork().toFixed(1)}</td></tr>
                                <tr><td>Avg. Defense Aptitude</td><td>${this.getDefenseAptitude().toFixed(1)}</td></tr>
                            </table>
                        </div>
                    </div>
                </div>
    
                <!-- Stats Tab -->
                <div class="tab-pane fade" id="stats" role="tabpanel" aria-labelledby="stats-tab">
                    <div class="row">
                        <div class="col col-lg-6">
                        ${this.stats.getRecordAndPitcherStats()}
                        </div>
                        <div class="col col-lg-6">
                        ${this.stats.getBatterStats()}
                        </div>
                    </div>
                </div>
    

    
                <!-- Lifetime Stats Tab -->
                <!--div class="tab-pane fade" id="lifetime" role="tabpanel" aria-labelledby="lifetime-tab">
                    <div class="row">
                        <div class="col col-lg-6">
                        {//this.lifetimeStats.getRecordAndPitcherStats()}
                        </div>
                        <div class="col col-lg-6">
                        {//this.lifetimeStats.getBatterStats()}
                        </div>
                    </div>
                </div-->
            </div>
        `.trim()}getStrength(){let e=this.attributes.strength;for(var t of Object.values(this.conditions))e+=t.modifiers.strength;return e}getSummary(){return this.fullname+", "+this.position}getSwinginess(){let e=this.attributes.swinginess;for(var t of Object.values(this.conditions))e+=t.modifiers.swinginess;return e}getTeamwork(){let e=this.attributes.teamwork;for(var t of Object.values(this.conditions))e+=t.modifiers.teamwork;return e}getThwackiness(){let e=this.attributes.thwackiness;for(var t of Object.values(this.conditions))e+=t.modifiers.thwackiness;return e}getTiredness(e){var t=.65*Math.abs(25-this.age),a=Math.abs(Math.sin(e*(10-this.getBalance())*.5)*(10-this.getBalance())*.5);return BaseballPlayer.normalizeToTen((t+a)/this.getHealthiness()*e/500*50)}isContactingBall(e,t){e=this.getTiredness(e);return(t=BaseballPlayer.normalizeToTen(t))<=this.getThwackiness()+this.getHunger()-e||this.getThwackiness()+this.getHunger()-e>5*Model.rng.random()+5*Model.rng.random()}isSwingingBat(e,t){e=this.getTiredness(e);return(t=BaseballPlayer.normalizeToTen(t))+this.getHunger()>=10-this.getSwinginess()-e||this.getSwinginess()+this.getHunger()-e>6*Model.rng.random()+6*Model.rng.random()}removeCondition(e){delete this.conditions[e]}setHungerDown(){.01<this.getHunger()?this.attributes.hunger*=.5:this.attributes.hunger=.01}setHungerUp(){this.attributes.hunger+=Model.rng.random()*this.getMetabolism()*.1+Model.rng.random()*this.getMetabolism()*.1}setNameFromList(){var e=BaseballPlayer.nameList.pop();e&&(this.firstName=e.substring(0,e.indexOf(" ")),this.lastName=e.substring(e.indexOf(" "))),this.tattoos=Name.webSafeEmojiCodes[Name.getCharSum(this.firstName)%Name.webSafeEmojiCodes.length]+Name.webSafeEmojiCodes[Name.getCharSum(this.lastName)%Name.webSafeEmojiCodes.length],this.profilePic=Name.profileEmojis[Name.getCharSum(this.firstName)*Name.getCharSum(this.lastName)%Name.profileEmojis.length]}updateConditions(){for(var[e,t]of this.conditions)t.reduceDuration(),t.active||this.removeCondition(e)}}let fontList=["serif","sans-serif","monospace",'Josefin Sans", "monospac',"Graduate,serif","Fraunces,serif","Rye,serif",'Kelly Slab", "serif','Germania One", "serif'];class Crest{static crestCounter=0;static restructure(e){return e=Object.setPrototypeOf(e,Crest.prototype)}constructor(e,t,a,s,r,i){switch(this.id=Crest.crestCounter+=Math.ceil(5*Model.rng.random()),(null==a||40<=a)&&(a=this.id%40),(null==s||s>=fontList.length)&&(s=this.id%fontList.length),(null==r||25<=r)&&(r=this.id%25),(null==i||4<=i)&&(i=this.id%4),this.colorScheme=e,this.teamPlaceAbbreviation=t,this.shape=this.generateShape(a),this.fontStyle=fontList[s],this.shadowColor=null,this.fontColor=null,this.fontColor=this.colorScheme.light,this.shadowColor="rgba(0,0,0,0.95)",i){case 0:this.gradientDirection={x1:"0%",y1:"0%",x2:"0%",y2:"100%"};break;case 1:this.gradientDirection={x1:"0%",y1:"0%",x2:"100%",y2:"0%"};break;case 2:this.gradientDirection={x1:"0%",y1:"0%",x2:"100%",y2:"100%"};break;case 3:this.gradientDirection={x1:"0%",y1:"100%",x2:"100%",y2:"0%"}}this.size=40,this.stripePattern=r}getStripes(e){switch(e){case 0:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                </linearGradient>`;case 1:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </linearGradient>`;case 2:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    </linearGradient>`;case 3:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    </linearGradient>`;case 4:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="26%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="26%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="74%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="74%" stop-color="${this.colorScheme.dark}" />
                    </linearGradient>`;case 5:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                    <stop offset="26%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="26%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="42%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.mid}" />
                    <stop offset="58%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="74%" stop-color="${this.colorScheme.dark}" />
                    <stop offset="74%" stop-color="${this.colorScheme.mid}" />
                    </linearGradient>`;case 6:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 7:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="90%" r="44%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 8:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="25%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="36%" stop-color="${this.colorScheme.dark}" />
                <stop offset="36%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 9:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="45%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 10:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="33%" gradientUnits="userSpaceOnUse" spreadMethod="reflect">
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                </radialGradient>`;case 11:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.dark}" />
                </radialGradient>`;case 12:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" /> // 33% stripe
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="66%" stop-color="${this.colorScheme.mid}" />
                <stop offset="66%" stop-color="#000" />
                </linearGradient>`;case 13:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="#000" />
                </linearGradient>`;case 14:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="46%" stop-color="${this.colorScheme.mid}" />
                <stop offset="46%" stop-color="#000" />
                <stop offset="54%" stop-color="#000" />
                <stop offset="54%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 15:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 16:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 17:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="35%" stop-color="${this.colorScheme.dark}" />
                <stop offset="35%" stop-color="${this.colorScheme.mid}" />
                <stop offset="45%" stop-color="${this.colorScheme.mid}" />
                <stop offset="45%" stop-color="#000" />
                <stop offset="55%" stop-color="#000" />
                <stop offset="55%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 18:return`<linearGradient id="gradient${Crest.crestCounter}" x1="${this.gradientDirection.x1}" y1="${this.gradientDirection.y1}" x2="${this.gradientDirection.x2}" y2="${this.gradientDirection.y2}" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="35%" stop-color="${this.colorScheme.mid}" />
                <stop offset="35%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="${this.colorScheme.dark}" />
                <stop offset="45%" stop-color="#000" />
                <stop offset="55%" stop-color="#000" />
                <stop offset="55%" stop-color="${this.colorScheme.dark}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </linearGradient>`;case 19:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="33%" stop-color="${this.colorScheme.mid}" />
                <stop offset="33%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.dark}" />
                <stop offset="66%" stop-color="${this.colorScheme.mid}" />
                <stop offset="76%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 20:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="50%" gradientUnits="userSpaceOnUse">
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="25%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 21:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.dark}" />
                <stop offset="50%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 22:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="100%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.mid}" />
                <stop offset="65%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 23:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse" >
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="75%" stop-color="${this.colorScheme.mid}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`;case 24:return`<radialGradient id="gradient${Crest.crestCounter}" cx="50%" cy="0%" r="100%" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#000" />
                <stop offset="25%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.dark}" />
                <stop offset="40%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.mid}" />
                <stop offset="70%" stop-color="${this.colorScheme.dark}" />
                <stop offset="75%" stop-color="${this.colorScheme.dark}" />
                <stop offset="100%" stop-color="#000" />
                </radialGradient>`}}generateShape(e){switch(e){case 0:return"50,5 87,25 87,75 50,95 13,75 13,25";case 1:return"50,5 95,35 77,90 50,80 23,90 5,35";case 2:return"25,5 50,20 75,5 95,50 50,95 5,50";case 3:return"50,5 95,85 50,75 5,85";case 4:return"5,15 50,25 95,15 50,95";case 5:return"2,15 98,35 85,50, 98,65 2,85";case 6:return"20,5 80,5 95,95 50,80 5,95";case 7:return"5,5 95,5 80,95 50,80 20,95";case 8:return"50,5 95,50 50,95 5,50";case 9:return"87.0,34.7 34.7,13.0 13.0,65.3 65.3,87.0 87.0,34.7";case 10:return"95.0,50.0 93.5,61.6 89.0,72.5 81.8,81.8 72.5,89.0 61.6,93.5 50.0,95.0 38.4,93.5 27.5,89.0 18.2,81.8 11.0,72.5 6.5,61.6 5.0,50.0 6.5,38.4 11.0,27.5 18.2,18.2 27.5,11.0 38.4,6.5 50.0,5.0 61.6,6.5 72.5,11.0 81.8,18.2 89.0,27.5 93.5,38.4";case 11:return"50.0,81.0 37.0,89.9 21.8,88.8 16.0,74.7 20.5,59.6 8.0,50.0 4.3,35.2 16.0,25.3 31.8,24.9 37.0,10.1 50.0,2.0 63.0,10.1 68.2,24.9 84.0,25.3 95.7,35.2 92.0,50.0 79.5,59.6 84.0,74.7 78.2,88.8 63.0,89.9";case 12:return"30,5 70,5 70,30 95,30 95,70 70,70 70,95 30,95 30,70 5,70 5,30 30,30";case 13:return"30,5 70,5 90,30 90,70 70,95 30,95 10,70 10,30";case 14:return"50,5 40,8 30,20 3,50 30,80 40,92 50,95 60,92 70,80 97,50 70,20 60,8";case 15:return"5,50 8,40 20,30 50,3 80,30 92,40 95,50 92,60 80,70 50,97 20,70 8,60";case 16:return"20,5 50,15 80,5 75,85 50,95 25,85";case 17:return"10,15 90,15 90,58 50,97 10,58";case 18:return"8,30 25,30 15,8 85,8 75,30 92,30 76,70 59,70 50,92 50,92 41,70 24,70";case 19:return"75,15 95,50 75,85 15,85 35,50 15,15";case 20:return"25,25 97,3 75,75 3,97";case 21:return"75,25 3,3 25,75 97,97";case 22:return"50,33 80,12 90,88 50,66 10,88 20,12";case 23:return"62,25 50,16 38,25 30,20.5 15,11.5 12,14.2 9,18.7 7,23.2 5,28.6 4,34 4,37.6 5,41.2 9,47.5 15,55.6 25,65.5 50,88 75,65.5 85,55.6 91,47.5 95,41.2 96,37.6 96,34 95,28.6 93,23.2 91,18.7 88,14.2 85,11.5 70,20.5";case 24:return"86,51 84.8,61.44 81.2,71.25 75.44,79.62 68,86.1 59.28,90.15 50,91.5 40.72,90.15 32,86.1 24.56,79.62 18.8,71.25 15.2,61.44 14,51 14,8.7 86,8.7 86,51";case 25:return"88.25,50.5 86.975,60.36 83.15,69.625 77.03,77.53 69.125,83.65 59.86,87.475 50,88.75 40.14,87.475 30.875,83.65 22.97,77.53 16.85,69.625 13.025,60.36 11.75,50.5 11.75,10.55 30.875,19.05 50,10.55 69.125,19.05 88.25,10.55 88.25,50.5";case 26:return"88.25,50.5 86.975,60.36 83.15,69.625 77.03,77.53 69.125,83.65 59.86,87.475 50,88.75 40.14,87.475 30.875,83.65 22.97,77.53 16.85,69.625 13.025,60.36 11.75,50.5 11.75,10.55 24.5,19.05 37.25,10.55 50,19.05 62.75,10.55 75.5,19.05 88.25,10.55 88.25,50.5";case 27:return"80.0,50.0 86.4,76.5 59.3,78.5 36.1,92.8 25.7,67.6 5.0,50.0 25.7,32.4 36.1,7.2 59.3,21.5 86.4,23.5 ";case 28:return"74.3,67.6 63.9,92.8 40.7,78.5 13.6,76.5 20.0,50.0 13.6,23.5 40.7,21.5 63.9,7.2 74.3,32.4 95.0,50.0 ";case 29:return"50,98 56.6,93.4 62.6,88.2 68.2,82.4 73.1,76.1 77.4,69.4 81.1,62.3 84.0,54.8 84.0,10.8 16.0,10.8 16.0,54.8 18.9,62.3 22.6,69.4 26.9,76.1 31.8,82.4 37.4,88.2 43.4,93.4 50.0,98.0 ";case 30:return"50,98 62.3,87.7 73.0,75.8 81.9,62.6 88.9,48.2 93.9,33.0 96.6,17.2 89.2,14.2 81.6,11.7 73.9,9.8 66.0,8.4 58.0,7.6 50.0,7.3 42.0,7.6 34.0,8.4 26.1,9.8 18.4,11.7 10.8,14.2 3.4,17.2 6.1,33.0 11.1,48.2 18.1,62.6 27.0,75.8 37.7,87.7 50.0,98.0 ";case 31:return"50,98 54.0,92.3 59.0,87.3 64.7,83.3 72.9,79.5 79.8,73.5 84.8,65.9 87.4,57.2 87.6,48.1 85.4,39.9 84.5,31.6 84.7,23.2 86.2,14.9 88.9,7.0 50.0,7.0 11.1,7.0 13.8,14.9 15.3,23.2 15.5,31.6 14.6,39.9 12.4,48.1 12.6,57.2 15.2,65.9 20.2,73.5 27.1,79.5 35.3,83.3 41.0,87.3 46.0,92.3 50.0,98.0 ";case 32:return"50,98 60.7,89.0 70.1,78.6 77.9,67.0 84.1,54.4 88.4,41.1 90.8,27.3 83.3,24.3 76.1,20.7 69.1,16.7 62.4,12.2 56.0,7.2 50.0,1.8 50.0,1.8 44.0,7.2 37.6,12.2 30.9,16.7 23.9,20.7 16.7,24.3 9.2,27.3 11.6,41.1 15.9,54.4 22.1,67.0 29.9,78.6 39.3,89.0 50.0,98.0 ";case 33:return"50,98 60.7,89.0 70.1,78.7 78.0,67.2 84.2,54.8 88.8,41.6 91.5,27.9 92.4,14.0 87.7,17.1 82.6,19.4 77.1,20.8 71.5,21.2 65.9,20.7 60.5,19.1 55.4,16.7 50.9,13.4 50.0,13.4 49.1,13.4 44.6,16.7 39.5,19.1 34.1,20.7 28.5,21.2 22.9,20.8 17.4,19.4 12.3,17.1 7.6,14.0 8.5,27.9 11.2,41.6 15.8,54.8 22.0,67.2 29.9,78.7 39.3,89.0 50.0,98.0 ";case 34:return"50,98 55.2,90.6 61.5,84.3 68.9,79.1 75.8,75.9 81.6,70.8 85.8,64.4 88.0,57.1 88.1,49.5 85.8,40.8 84.7,31.8 84.9,22.8 86.3,14.0 88.9,5.3 86.1,7.4 82.8,8.4 79.4,8.4 76.1,7.4 73.3,5.3 70.6,7.4 67.3,8.4 63.8,8.4 60.6,7.4 57.8,5.3 55.0,7.4 51.7,8.4 48.3,8.4 45.0,7.4 42.2,5.3 39.4,7.4 36.1,8.4 32.7,8.4 29.4,7.4 26.6,5.3 23.8,7.4 20.6,8.4 17.1,8.4 13.8,7.4 11.1,5.3 13.7,14.0 15.1,22.8 15.2,31.8 14.2,40.8 11.8,49.5 12.0,57.1 14.2,64.4 18.4,70.8 24.1,75.9 31.1,79.1 38.4,84.3 44.8,90.6 50.0,98.0 ";case 35:return"50,98 55.8,91.1 62.7,85.3 70.5,80.8 77.6,78.2 83.7,73.7 88.3,67.6 91.0,60.5 91.5,52.9 89.5,44.1 88.8,35.2 89.3,26.2 91.1,17.4 94.0,8.9 96.3,4.4 93.3,8.0 89.3,10.3 84.7,11.1 80.1,10.3 76.1,8.0 73.1,4.4 70.2,8.0 66.1,10.3 61.6,11.1 57.0,10.3 53.0,8.0 50.0,4.4 47.0,8.0 43.0,10.3 38.4,11.1 33.8,10.3 29.8,8.0 26.8,4.4 23.8,8.0 19.8,10.3 15.2,11.1 10.7,10.3 6.6,8.0 3.7,4.4 8.9,17.4 10.6,26.2 11.1,35.2 10.4,44.1 8.5,52.9 9.0,60.5 11.7,67.6 16.2,73.7 22.3,78.2 29.5,80.8 37.3,85.3 44.2,91.1 50.0,98.0";case 36:return"50,98 56.3,95.0 63.0,92.9 69.9,91.5 77.9,91.0 85.0,87.4 90.1,81.2 92.5,73.6 91.1,60.8 90.8,48.0 91.5,35.3 93.1,22.6 95.8,10.1 97.2,5.3 93.2,10.1 87.7,13.3 81.5,14.3 75.3,13.3 69.8,10.1 65.7,5.3 61.7,10.1 56.2,13.3 50.0,14.3 43.8,13.3 38.3,10.1 34.3,5.3 30.2,10.1 24.7,13.3 18.5,14.3 12.3,13.3 6.8,10.1 2.8,5.3 4.2,10.1 6.7,22.6 8.3,35.3 8.8,48.1 8.4,60.9 6.9,73.6 9.2,81.3 14.3,87.5 21.4,91.2 29.4,91.8 36.2,93.2 42.9,95.4 49.2,98";case 37:return"50,77.5 80.0,77.5 95.5,19.5 92.6,23.0 88.6,25.3 84.1,26.1 79.7,25.3 75.7,23.0 72.8,19.5 69.8,23.0 65.9,25.3 61.4,26.1 56.9,25.3 52.9,23.0 50.0,19.5 47.1,23.0 43.1,25.3 38.6,26.1 34.1,25.3 30.2,23.0 27.2,19.5 24.3,23.0 20.3,25.3 15.9,26.1 11.4,25.3 7.4,23.0 4.5,19.5 20.0,77.5 50.0,77.5  ";case 38:return"8,27 20,25 23,15 77,15 80,25 92,27 88,72 77,74 74,84 26,84 23,74 12,72";case 39:return"94.0,50.0 80.5,39.7 88.9,18.2 62.6,25.1 50.0,14.0 37.4,25.1 11.1,18.2 19.5,39.7 6.0,50.0 19.5,60.3 11.1,81.8 37.4,74.9 50.0,86.0 62.6,74.9 88.9,81.8 80.5,60.3 94.0,50.0 "}}render(e=25){return`
        <svg xmlns="http://www.w3.org/2000/svg" width="${e}" height="${e}" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
            <defs>
                ${this.getStripes(this.stripePattern)}
            </defs>
            <polygon 
                points="${this.shape}" 
                fill="url(#gradient${Crest.crestCounter++})" 
                stroke="${this.colorScheme.light}"
                stroke-width="1.4"
            />
            <style>

            </style>
            <text 
                x="51%" 
                y="54%" 
                font-family="${this.fontStyle}" 
                font-weight="bold" 
                text-anchor="middle" 
                dominant-baseline="middle"
                fill="rgba(0,0,0,0.95)" 
                
                font-size="${93/this.teamPlaceAbbreviation.length+5.25}px" 
                style="-webkit-text-stroke: ${.005*e}px ${this.shadowColor}; text-shadow: ${.015*e}px ${.015*e}px 0px ${this.shadowColor}, -${.005*e}px -${.005*e}px 0px ${this.shadowColor}, -${.005*e}px ${.0075*e}px 0px ${this.shadowColor}, ${.005*e}px -${.005*e}px 0px ${this.shadowColor};"
        >
                ${this.teamPlaceAbbreviation}
            </text>
            <text 
                x="50%" 
                y="53%" 
                font-family="${this.fontStyle}" 
                font-weight="bold" 
                text-anchor="middle" 
                dominant-baseline="middle"
                fill="${this.fontColor}" 
                
                font-size="${93/this.teamPlaceAbbreviation.length+5.25}px" 
                style="-webkit-text-stroke: ${.005*e}px ${this.shadowColor}; text-shadow: ${.015*e}px ${.015*e}px 0px ${this.shadowColor}, -${.005*e}px -${.005*e}px 0px ${this.shadowColor}, -${.0075*e}px ${.0075*e}px 0px ${this.shadowColor}, ${.005*e}px -${.005*e}px 0px ${this.shadowColor};"
        >
                ${this.teamPlaceAbbreviation}
            </text>
        </svg>
    `}}class BaseballTeam{static idCounter=0;static restructure(t){(t=Object.setPrototypeOf(t,BaseballTeam.prototype)).crest=Crest.restructure(t.crest),t.manager=EventManager.restructure(t.manager),null!=t.pitcher&&(t.pitcher=BaseballPlayer.restructure(t.pitcher));for(let e=0;e<t.players.length;e++)t.players[e]=BaseballPlayer.restructure(t.players[e]);return null!=t.captain&&(t.captain=BaseballPlayer.restructure(t.captain)),t.stats=Stats.restructure(t.stats),t}static teamPlaceList=[];static playersPerTeam=9;constructor(e){this.leagueIdNumber=e,this.teamIdNumber=BaseballTeam.idCounter++,this.jerseyNumberList=[],this.colorScheme=colorCombinations.splice(Math.floor((3*(this.leagueIdNumber+1)+3*Model.rng.random())%colorCombinations.length),1)[0],this.place=null,0<Name.places.length&&(this.place=Name.places.splice(Math.floor(Model.rng.random()*Name.places.length),1)[0]),this.crest=new Crest(this.colorScheme,this.place.abbreviation),this.mascot=Name.teamNameList.splice(Math.floor(Model.rng.random()*Name.teamNameList.length),1)[0],this.pitcher=null,this.captain=null,this.mood=.5*Model.rng.random()+.5*Model.rng.random(),this.hunger=1,this.hungerRate=.35,this.players=[],this.stats=new Stats,this.xp=0,this.batterUpNumber=0,this.manager=new EventManager}addPlateAppearances(){this.stats.plateAppearances++}addAtBats(){this.stats.atBats++}addBasesOnBalls(){this.stats.basesOnBalls++}addDoubles(){this.stats.doubles++,this.addHits(),this.addTotalBases(2)}addHits(){this.stats.hits++}addHomeRuns(){this.stats.homeRuns++,this.addHits(),this.addTotalBases(4)}addHomeRunsAllowed(){this.stats.homeRunsAllowed++}addInningsPitched(){this.stats.inningsPitched++}addLoss(){this.stats.losses++,this.stats.gamesPlayed++;for(var e of this.players)e.addLoss()}addRunsAllowed(){this.stats.runsAllowed++}addRunsScored(){this.stats.runsScored++}addSacrificeFlies(){this.stats.sacrificeFlies++,this.addHits(),this.addTotalBases(1)}addSingles(){this.stats.singles++,this.addHits(),this.addTotalBases(1)}addStrikeoutsAtBat(){this.stats.strikeoutsAtBat++}addStrikeoutsThrown(){this.stats.strikeoutsThrown++}addTotalBases(e){this.stats.totalBases+=e}addTriples(){this.stats.triples++,this.addHits(),this.addTotalBases(3)}addWalksAllowed(){this.stats.walksAllowed++}addWin(){this.stats.wins++,this.stats.gamesPlayed++;for(var e of this.players)e.addWin()}addPlayer(e){e.teamPlaceAbbreviation=this.place.abbreviation,e.teamPlaceName=this.place.name,e.teamMascot=this.mascot,e.colorScheme=this.colorScheme,e.crest=this.crest,e.teamLeagueIdNumber=this.leagueIdNumber,e.jerseyNumber=this.getJerseyNumber(),this.players.push(e),this.setup()}equals(e){return this.teamIdNumber===e.teamIdNumber&&this.mascot===e.mascot&&this.teamPlaceName===e.teamPlaceName&&this.colorScheme===e.colorScheme}getJerseyNumber(){let t=Math.floor(98*Model.rng.random())+1;for(let e=0;e<BaseballTeam.playersPerTeam&&this.jerseyNumberList.includes(t);e++)t=Math.floor(98*Model.rng.random())+1;return this.jerseyNumberList.push(t),t}getName(e=40){return this.crest.render(e)+"&nbsp;"+this.place.abbreviation.toUpperCase()+" "+this.mascot}getNameWithLink(e=40){return this.crest.render(e)+'&nbsp;<a href="#" class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" onclick="app.view.statsModal.update('+this.leagueIdNumber+');" data-bs-target="#statsModal" data-bs-toggle="modal" >'+this.place.abbreviation.toUpperCase()+" "+this.mascot+"</a>"}getFullName(e=40){return this.crest.render(e)+"&nbsp;"+this.place.name.toUpperCase()+" "+this.mascot}getFullNameWithLink(e=40){return this.crest.render(e)+'&nbsp;<a href="#" class="link link-light link-underline-opacity-25 link-underline-opacity-100-hover" onclick="app.view.statsModal.update('+this.leagueIdNumber+');" data-bs-target="#statsModal" data-bs-toggle="modal" >'+this.place.name.toUpperCase()+" "+this.mascot+"</a>"}getPlace(e=40){return this.crest.render(e)+"&nbsp;"+this.place.name.toUpperCase()}getNextBatter(){return this.players[this.batterUpNumber++%this.players.length]}getPitcher(){return null==this.pitcher&&this.setup(),this.pitcher}getPlayerList(){let e="";for(var t of this.players)e+=`
            <tr>
                <td>
                    <a href="#" onclick="app.view.statsModal.update(${t.leagueIdNumber})" class="link text-light link-offset-2 link-light link-underline-opacity-25 link-underline-opacity-100-hover">
                        ${t.firstName} "${t.nickName}" ${t.lastName}
                    </a>
                </td>
                <td>${t.position}</td>
            </tr>
        `;return e.trim()}getRandomPlayer(){return this.players[Math.floor(Model.rng.random()*this.players.length)]}getSlugger(){var e;return 0!=this.stats.gamesPlayed&&((e=[...this.players]).sort((e,t)=>t.stats.hits-e.stats.hits),0<e[0].stats.hits)?e[0]:this.captain}getStats(){return this.getFullName()+"\n"+this.stats}getTeamAptitude(){let e=0;for(var t of this.players)e=(e+=parseFloat(t.getBattingAptitude()))+parseFloat(t.getDefenseAptitude());return(e+=this.pitcher.getPitchingAptitude())/(2*this.players.length+1)*100/100}getWinRatio(){return 0==this.stats.gamesPlayed?0:this.stats.gamesWon/this.stats.gamesPlayed}levelUpPlayers(){let e="";for(var t of this.players)t.isLevelUp()&&(e+=t.setLevelUp()),t.updateXp();return this.setup(),e}removePlayer(e){e.teamPlaceAbbreviation=null,e.teamMascot=null,e.colorScheme=null,e.crest=null,this.players.remove(e),this.setup()}resetSeasonStats(){this.stats=new Stats}setHungerUp(){for(var e of this.players)e.setHungerUp()}setHungerDown(){for(var e of this.players)e.setHungerDown()}setPositions(){for(var e of this.players)e.position=null;this.players.sort(function(e,t){return t.getPitchingAptitude()-e.getPitchingAptitude()});for(var t of this.players)if(null==t.position){t.position="Pitcher",this.pitcher=t;break}this.players.sort(function(e,t){return t.getBattingAptitude()-e.getBattingAptitude()});for(var a of this.players)if(null==a.position){a.position="Captain",this.captain=a;break}if(4<=this.players.length){var s,r=this.players[0];this.players[0]=this.players[3],this.players[3]=r;for(s of this.players)null==s.position&&(s.position=s.getDefaultPosition())}}setup(){this.setPositions()}getStatsTable(){return`
        <ul class="nav nav-tabs nav-fill" id="teamTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary active" id="players-tab" data-bs-toggle="tab" data-bs-target="#players" 
                type="button" role="tab" aria-controls="players" aria-selected="true">Players</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" 
                type="button" role="tab" aria-controls="info" aria-selected="false">Info</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="crest-tab" data-bs-toggle="tab" data-bs-target="#crest" 
                type="button" role="tab" aria-controls="crest" aria-selected="false">Crest</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" 
                type="button" role="tab" aria-controls="stats" aria-selected="false">Stats</button>
            </li>

            <!--li class="nav-item" role="presentation">
                <button class="nav-link link-secondary" id="lifetime-tab" data-bs-toggle="tab" data-bs-target="#lifetime" 
                type="button" role="tab" aria-controls="lifetime" aria-selected="false">Lifetime Stats</button>
            </li-->
        </ul>

        <div class="tab-content" id="teamTabContent">
            <!-- Players Tab -->
            <div class="tab-pane fade show active" id="players" role="tabpanel" aria-labelledby="players-tab">
                <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                    <tr>
                        <th colspan="2" class="text-center">Players</th>
                    </tr>
                    ${this.getPlayerList()}
                    <tr><td>Number of Players</td><td>${this.players.length}</td></tr>
                </table>
            </div>



            <!-- Info Tab -->
            <div class="tab-pane fade" id="info" role="tabpanel" aria-labelledby="info-tab">
                <table class="table table-dark table-striped table-bordered small table-sm table-borderless">
                    <tr><td>League ID</td><td>${this.leagueIdNumber}</td></tr>
                    <tr><td>Place</td><td>${this.place.abbreviation}, ${this.place.name}</td></tr>
                    <tr><td>Team Name</td><td>${this.mascot}</td></tr>
                    <tr><td>Crest</td><td>${this.crest.render()}</td></tr>
                    <tr><td>Color Scheme Light</td>
                        <td><div style="color:black;background:${this.colorScheme.light};">${this.colorScheme.light}</div></td>
                    </tr>
                    <tr><td>Color Scheme Mid</td>
                        <td><div style="color:black;background:${this.colorScheme.mid};">${this.colorScheme.mid}</div></td>
                    </tr>
                    <tr><td>Color Scheme Dark</td>
                        <td><div style="background:${this.colorScheme.dark};">${this.colorScheme.dark}</div></td>
                    </tr>
                    <tr><td>Team Aptitude</td><td>${this.getTeamAptitude().toFixed(1)}</td></tr>
                    <tr><td>Mood</td><td>${this.mood.toFixed(1)}</td></tr>
                    <tr><td>Hunger</td><td>${this.hunger.toFixed(1)}</td></tr>
                    <tr><td>Hunger Rate</td><td>${this.hungerRate.toFixed(1)}</td></tr>
                    <tr><td>XP</td><td>${this.xp.toFixed(1)}</td></tr>
                    <tr><td>Batter Up Number</td><td>${this.batterUpNumber}</td></tr>
                    <tr><td>Jersey Numbers</td><td>${this.jerseyNumberList.join(", ")}</td></tr>
                </table>
            </div>
                        <!-- Stats Tab -->
            <div class="tab-pane fade" id="crest" role="tabpanel" aria-labelledby="crest-tab">
                <div class="row">
                    <div class="col text-center">
                    ${this.crest.render(300)}
                    </div>
                    
                </div>
            </div>

                        <!-- Stats Tab -->
            <div class="tab-pane fade" id="stats" role="tabpanel" aria-labelledby="stats-tab">
                <div class="row">
                    <div class="col col-lg-6">
                    ${this.stats.getRecordAndPitcherStats()}
                    </div>
                    <div class="col col-lg-6">
                    ${this.stats.getBatterStats()}
                    </div>
                </div>
            </div>

            <!-- Lifetime Stats Tab -->
            <!--div class="tab-pane fade" id="lifetime" role="tabpanel" aria-labelledby="lifetime-tab">
                <div class="row">
                    <div class="col col-lg-6">
                    {//this.lifetimeStats.getRecordAndPitcherStats()}
                    </div>
                    <div class="col col-lg-6">
                    {//this.lifetimeStats.getBatterStats()}
                    </div>
                </div>
            </div-->
        </div>
    `.trim()}updateXp(){this.xp+=this.dailyXp,this.dailyXp=0}}class BaseballGameBoxScore{static restructure(e){return Object.setPrototypeOf(e,BaseballGameBoxScore.prototype),e}constructor(e,t){if(null===e)throw new Error("awayTeam can not be null");if(null===t)throw new Error("homeTeam can not be null");this.away={name:e.getFullNameWithLink(),innings:[],runs:0,hits:0,errors:0},this.home={name:t.getFullNameWithLink(),innings:[],runs:0,hits:0,errors:0}}addNewInning(e,t){if(null===e)throw new Error("isTopOfInning can not be null");if(null===t)throw new Error("inningNumber can not be null");e&&t>this.away.innings.length&&this.away.innings.push(0),!e&&t>this.home.innings.length&&this.home.innings.push(0)}incrementHits(e){if(null===e)throw new Error("isTopOfInning can not be null");e?this.away.hits++:this.home.hits++}incrementScore(e){if(null===e)throw new Error("isTopOfInning can not be null");e?(this.away.innings[this.away.innings.length-1]++,this.away.runs++):(this.home.innings[this.home.innings.length-1]++,this.home.runs++)}getBoxScoreTable(){var e=Math.max(this.away.innings.length,this.home.innings.length),t=(a,e)=>Array.from({length:e},(e,t)=>`<td>${a[t]??""}</td>`).join("");return`
            <table class="table table-dark table-striped table-bordered text-center shadow overflow-hidden">
                <thead>
                    <tr>
                        <th class="text-secondary">Team</th>
                        ${Array.from({length:e},(e,t)=>`<th class="text-secondary">${t+1}</th>`).join("")}
                        <th class="text-secondary">R</th>
                        <th class="text-secondary">H</th>
                        <th class="text-secondary">E</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="text-start">${this.away.name}</td>
                        ${t(this.away.innings,e)}
                        <td>${this.away.runs}</td>
                        <td>${this.away.hits}</td>
                        <td>${this.away.errors}</td>
                    </tr>
                    <tr>
                        <td class="text-start">${this.home.name}</td>
                        ${t(this.home.innings,e)}
                        <td>${this.home.runs}</td>
                        <td>${this.home.hits}</td>
                        <td>${this.home.errors}</td>
                    </tr>
                </tbody>
            </table>
        `.trim()}getScore(e){if(null===e)throw new Error("inningString can not be null");return 0==this.away.innings.length?this.away.name+" @ "+this.home.name:"<span class='pe-4'>"+e+"</span><span class='pe-4'>"+this.away.name+":&nbsp;"+this.getAwayScore()+"</span><span class='pe-4'>"+this.home.name+":&nbsp;"+this.getHomeScore()+"</span>"}getAwayScore(){return this.away.runs}getHomeScore(){return this.home.runs}}class BaseballGameMessage{static restructure(e){return Object.setPrototypeOf(e,BaseballGameMessage.prototype),e}constructor(e,t){this.name=e.name,this.inning=e.getInningString(),this.homeTeam=e.homeTeam.getName(),this.homeTeamPlace=e.homeTeam.place,this.homeNameWithLink=e.homeTeam.getNameWithLink(),this.homeId=e.homeTeam.leagueIdNumber,this.awayTeam=e.awayTeam.getName(),this.awayNameWithLink=e.awayTeam.getNameWithLink(),this.awayId=e.awayTeam.leagueIdNumber,this.score=structuredClone({away:e.scoreboard.getAwayScore(),home:e.scoreboard.getHomeScore()}),this.scoreString=e.getScore(),this.baseIcons=e.getBaseIcons(),this.count=structuredClone(e.count),this.boxScoreTable=e.scoreboard.getBoxScoreTable(),this.done=e.done,this.log="",null!=t&&(this.log+=t)}add(e){"string"==typeof e?this.log.append(e):BaseballGameMessage.prototype.isPrototypeOf(e)&&(this.log+=e.log)}setGameState(e){this.name=e.name,this.inning=e.getInningString(),this.homeTeam=e.homeTeam.getName(),this.homeTeamPlace=e.homeTeam.place,this.homeNameWithLink=e.homeTeam.getNameWithLink(),this.homeId=e.homeTeam.leagueIdNumber,this.awayTeam=e.awayTeam.getName(),this.awayNameWithLink=e.awayTeam.getNameWithLink(),this.awayId=e.awayTeam.leagueIdNumber,this.score=structuredClone({away:e.scoreboard.getAwayScore(),home:e.scoreboard.getHomeScore()}),this.scoreString=e.getScore(),this.baseIcons=e.getBaseIcons(),this.count=structuredClone(e.count),this.boxScoreTable=e.scoreboard.getBoxScoreTable(),this.done=e.done}}class BaseballGame{static idCounter=0;static restructure(e){return Object.setPrototypeOf(e,BaseballGame.prototype),e.homeTeam=BaseballTeam.restructure(e.homeTeam),e.awayTeam=BaseballTeam.restructure(e.awayTeam),e.defenseTeam=BaseballTeam.restructure(e.defenseTeam),e.offenseTeam=BaseballTeam.restructure(e.offenseTeam),e.scoreboard=BaseballGameBoxScore.restructure(e.scoreboard),null!=e.batter&&(e.batter=BaseballPlayer.restructure(e.batter)),e.pitcher=BaseballPlayer.restructure(e.pitcher),e.gameState=AbstractBaseballGameState.restructure(e.gameState),null!=e.onBase[0]&&(e.onBase[0]=BaseballPlayer.restructure(e.onBase[0])),null!=e.onBase[1]&&(e.onBase[1]=BaseballPlayer.restructure(e.onBase[1])),null!=e.onBase[2]&&(e.onBase[2]=BaseballPlayer.restructure(e.onBase[2])),e}static useAOrAn(e){return-1!="aeiou".indexOf(e.toLowerCase().charAt(0))?"an":"a"}static pitchDescriptions=["mint condition++","excellent++","outstanding++","exceptional++","superior++","impressive++","good+","competent+","strong+","reliable+","admirable+","average","satisfactory","adequate","mediocre","passable","meh-","deficient-","insufficient-","inadequate-","weak-","flailing--","unacceptable--","unsatisfactory--","lacking--","inferior--","wild--"];constructor(e,t){if(null===e)throw new Error("awayTeamObject can not be null");if(null===t)throw new Error("homeTeamObject can not be null");this.name=e.getNameWithLink()+" @ "+t.getNameWithLink(),this.hasStarted=!1,this.done=!1,this.finalMessage=!1,this.gameIdNumber=BaseballGame.idCounter++,this.homeTeam=t,this.awayTeam=e,this.pitchNumber=0,this.defenseTeam=this.homeTeam,this.offenseTeam=this.awayTeam,this.batter=null,this.count={balls:0,strikes:0,outs:0},this.scoreboard=new BaseballGameBoxScore(e,t),this.inning=0,this.isTopOfInning=!0,this.gameState=new PlayBall,this.onBase=[null,null,null]}addBoxScoreInning(){this.scoreboard.addNewInning(this.isTopOfInning,this.inning)}getBaseRunnerAdvancesOrScores(e,t,a=!1){return this.onBase[e]&&3<=e+t?this.getBaseRunnerScores(e,t,a):(this.onBase[e]&&0<t&&(this.onBase[e+t]=this.onBase[e],this.onBase[e]=null),"")}getBaseRunnerCount(){let e=0;for(var t of this.onBase)null!=t&&e++;return e}getBaseRunnerMovement(e,t=!1){var a="";return(a+=this.getBaseRunnerScores(2,e=e||0,t))+this.getBaseRunnerAdvancesOrScores(1,e)+this.getBaseRunnerAdvancesOrScores(0,e)}getBaseRunnerScores(e,t,a=!1){return this.onBase[e]&&3<=e+t?(t=this.onBase[e],this.incrementScore(),this.offenseTeam.manager.notify(new GameEvent(GameEventType.RUNS_SCORED,this.offenseTeam.leagueIdNumber,t.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.RUNS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.onBase[e]=null,a&&this.batter.manager.notify(new GameEvent(GameEventType.SACRIFICE_FLIES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),`<br>${t.getFullNameWithLink(20)} SCORES!`):""}getAtBat(e){let t="";var a;return this.batter.isSwingingBat(this.pitchNumber,e)?this.batter.isContactingBall(this.pitchNumber,e)?(a=this.batter.getHitScore(this.pitchNumber,e),t+=this.getFlyBall(a)):(this.count.strikes++,t+="<br>"+this.batter.getFullNameWithLink(20)+" gets a STRIKE swinging, "+this.count.balls+"-"+this.count.strikes,3<=this.count.strikes&&(this.count.outs++,t+=" "+this.batter.getFullNameWithLink(20)+" STRIKES OUT swinging. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_AT_BAT,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_THROWN,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.setCountToZero(),this.gameState.previousState(this))):5<e?(this.count.strikes++,t+="<br>"+this.batter.getFullNameWithLink(20)+" gets a STRIKE looking, "+this.count.balls+"-"+this.count.strikes,3<=this.count.strikes&&(this.count.outs++,t+=" "+this.batter.getFullNameWithLink(20)+" STRIKES OUT looking. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_AT_BAT,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.STRIKEOUTS_THROWN,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),this.setCountToZero(),this.gameState.previousState(this))):(this.count.balls++,t+="<br>"+this.batter.getFullNameWithLink(20)+" is looking. BALL looking, "+this.count.balls+"-"+this.count.strikes,this.pitcher.setHungerUp(),4<=this.count.balls&&(this.gameState.previousState(this),t+=". Take your base.",this.batter.manager.notify(new GameEvent(GameEventType.BASES_ON_BALLS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.WALKS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber)),t+=this.walkAndAdvanceBaseRunners(),this.setCountToZero())),t}equals(e){return this.gameIdNumber===e.gameIdNumber&&this.homeTeam.equals(e.homeTeam)&&this.awayTeam.equals(e.awayTeam)&&this.jerseyNumber===e.jerseyNumber}getFlyBall(e){let t="";if(e<=2.5&&.5<Model.rng.random())t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a foul ball",this.count.strikes<2&&this.count.strikes++;else{var a=this.defenseTeam.getRandomPlayer(),s=a.getDefenseScore(this.pitchNumber);if(2*e<=s)t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a ground out to ",this.count.outs++,t+=a.getFullNameWithLink(20)+". "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),a.setHungerDown(),this.batter.setHungerUp(),this.count.outs<3&&(t+=this.getBaseRunnerMovement(1,!0));else if(e<=s)t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a fly ball. ",this.count.outs++,t+=a.getFullNameWithLink(20)+" makes the catch. "+this.getOutsString(),this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),a.setHungerDown(),this.batter.setHungerUp(),this.count.outs<3&&(t+=this.getBaseRunnerMovement(1,!0));else if(e<=1.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a SINGLE")+this.getBaseRunnerMovement(1),this.onBase[0]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.SINGLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else if(e<=2.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a DOUBLE")+this.getBaseRunnerMovement(2),this.onBase[1]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.DOUBLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else if(e<=3.999*s)t=(t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a TRIPLE")+this.getBaseRunnerMovement(3),this.onBase[2]=this.batter,this.incrementHits(),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.TRIPLES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber));else{switch(this.getBaseRunnerCount()){case 0:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a HOME RUN!";break;case 1:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a TWO-RUN HOME RUN!";break;case 2:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a THREE-RUN HOME RUN!";break;case 3:t+="<br>"+this.batter.getFullNameWithLink(20)+" hits a GRAND SLAM HOME RUN!"}this.incrementScore(),this.incrementHits(),t+=this.getBaseRunnerMovement(4),this.pitcher.setHungerUp(),a.setHungerUp(),this.batter.setHungerDown(),this.batter.manager.notify(new GameEvent(GameEventType.HOME_RUNS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.HOME_RUNS_ALLOWED,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.offenseTeam.manager.notify(new GameEvent(GameEventType.RUNS_SCORED,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.pitcher.manager.notify(new GameEvent(GameEventType.RUNS_ALLOWED,this.defenseTeam.leagueIdNumber,this.pitcher.leagueIdNumber))}this.gameState.previousState(this),this.count.balls=0,this.count.strikes=0}return t}setCountToZero(){4<=this.count.balls&&(this.batter.setHungerDown(),this.pitcher.setHungerUp(),this.count.strikes=0,this.count.balls=0),3<=this.count.strikes&&(this.batter.setHungerUp(),this.pitcher.setHungerDown(),this.count.strikes=0,this.count.balls=0)}getAwayTeamName(){return this.awayTeam.getName()}getBalls(){return this.count.balls}getBaseIcons(){let e="";return null!=this.onBase[2]?e+="⬥":e+="⬦",null!=this.onBase[1]?e+="⬥":e+="⬦",null!=this.onBase[0]?e+="⬥":e+="⬦",e}getBatterFullName(){return this.batter.getFullName(20)}getBatterName(){return this.batter.getName()}getCountString(){return"B: "+this.count.balls+"<br>S: "+this.count.strikes+"<br>O: "+this.count.outs}getGameDetails(){return new BaseballGameMessage(this,"")}getHomeTeamName(){return this.homeTeam.getName()}getInning(){return this.inning}getInningString(){let e="";return 0==this.inning?e="🔜":0!=this.inning&&0==this.done?(e=this.inning+"▲ ",this.offenseTeam.equals(this.homeTeam)&&(e=this.inning+"▼ ")):0!=this.inning&&this.finalMessage&&(e="FINAL "+this.inning+"▲ ",this.offenseTeam.equals(this.homeTeam))&&(e="FINAL "+this.inning+"▼ "),e}getLosingTeam(){return this.scoreboard.getHomeScore()<this.scoreboard.getAwayScore()?this.homeTeam:this.scoreboard.getHomeScore()>this.scoreboard.getAwayScore()?this.awayTeam:null}getOuts(){return this.count.outs}getOutsString(){return 1==this.count.outs?this.count.outs+" OUT!":1<this.count.outs?this.count.outs+" OUTS!":void 0}getPitchDescription(e){return BaseballGame.pitchDescriptions[Math.floor(BaseballGame.pitchDescriptions.length-1-e*(BaseballGame.pitchDescriptions.length-1)/10)]}getScore(){return this.hasStarted?this.getInningString()+" "+this.awayTeam.getNameWithLink()+":&nbsp;"+this.scoreboard.getAwayScore()+" "+this.homeTeam.getNameWithLink()+":&nbsp;"+this.scoreboard.getHomeScore():this.awayTeam.getNameWithLink()+" @ "+this.homeTeam.getNameWithLink()}getStrikes(){return this.count.strikes}getWinningTeam(){return this.scoreboard.getHomeScore()>this.scoreboard.getAwayScore()?this.homeTeam:this.scoreboard.getHomeScore()<this.scoreboard.getAwayScore()?this.awayTeam:null}hasNext(){return!this.done}incrementHits(){this.batter.manager.notify(new GameEvent(GameEventType.PLATE_APPEARANCES,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.batter.manager.notify(new GameEvent(GameEventType.AT_BATS,this.offenseTeam.leagueIdNumber,this.batter.leagueIdNumber)),this.scoreboard.incrementHits(this.isTopOfInning)}incrementInning(){this.inning++}incrementScore(){this.scoreboard.incrementScore(this.isTopOfInning)}isGameOver(){return this.done}next(){return new BaseballGameMessage(this,this.gameState.handle(this))}nextBatter(){return this.batter=this.offenseTeam.getNextBatter(),this.batter}nextPitch(){this.pitchNumber++;var e="",t=(this.pitcher=this.defenseTeam.getPitcher(),this.pitcher.getPitchScore(this.pitchNumber));return(e+=this.pitcher.getFullNameWithLink(20)+" throws ")+BaseballGame.useAOrAn(this.getPitchDescription(t))+(" "+this.getPitchDescription(t)+" pitch")+this.getAtBat(t)}setGameState(e){if(!(e instanceof AbstractBaseballGameState)||this.done)throw new Error("oof bad game state");this.gameState=e}setGameOver(){this.done=!0}setGameStarted(){this.hasStarted=!0}setInningTop(e){this.isTopOfInning=!0===e}setOffenseTeam(){this.isTopOfInning?(this.offenseTeam=this.awayTeam,this.defenseTeam=this.homeTeam):(this.offenseTeam=this.homeTeam,this.defenseTeam=this.awayTeam)}walkAndAdvanceBaseRunners(){let e="";return null!=this.onBase[0]&&(null==this.onBase[1]?this.onBase[1]=this.onBase[0]:null==this.onBase[2]?(this.onBase[2]=this.onBase[1],this.onBase[1]=this.onBase[0]):e=this.getBaseRunnerMovement(1)),this.onBase[0]=this.batter,e}}class AbstractSchedule{static restructure(a){Object.setPrototypeOf(a,AbstractSchedule.prototype);for(let t=0;t<a.days.length;t++)for(let e=0;e<a.days[t].length;e++)a.days[t][e]=Game.restructure(a.days[t][e]);return a}constructor(e){this.hasStarted=!1,this.done=!1,this.teams=e,this.standings={},this.days=[[]],this.printSchedule=[[]]}isTodayDone(e){if(null==e)throw new Error("dayNumber is null");var t;for(t of this.days[e])if(!1===t.isGameOver())return!1;return!0}setPrintSchedule(){for(let t=0;t<this.days.length;t++){for(let e=0;e<this.days[t].length;e++)this.printSchedule[t][e]=this.days[t][e].getScore();this.printSchedule.push([])}}}class RegularSeasonSchedule extends AbstractSchedule{static restructure(a){Object.setPrototypeOf(a,RegularSeasonSchedule.prototype);for(let t=0;t<a.days.length;t++)for(let e=0;e<a.days[t].length;e++)a.days[t][e]=Object.setPrototypeOf(a.days[t][e],Game.prototype);return a}constructor(e){super(e),this.standings={};for(var t of this.teams)this.standings[t.getName()]={wins:0,losses:0};this.setSchedule()}didTheseTeamsAlreadyPlay(e,t){let a=0;for(var s of this.days)for(var r of s)if((e.equals(r.awayTeam)&&t.equals(r.homeTeam)||t.equals(r.awayTeam)&&e.equals(r.homeTeam))&&(a+=1),1<=a)return!0;return!1}getDaySchedule(e){var t,a=[];for(t of this.days[e=null==e?0:e])a.push(t.getName());return a}getGameDetails(e){var t,a=[];for(t of this.days[e=null==e?0:e])a.push(t.getGameDetails());return a}getSeasonSchedule(){let t="";var a=this.days.length;for(let e=0;e<a;e++)t+="Day "+e+"\n  "+this.getDaySchedule(e);return t}getTeamsPlayingToday(e){if(null==e)throw new Error("null dayNumber");var t,a=[];for(t of this.days[e])a.push(t.awayTeam),a.push(t.homeTeam);return a}nextGameMessages(e){if(null==e)throw new Error("null dayNumber");var t,a=[];for(t of this.days[e])a.push(t.next());return a}isTeamScheduledThisDay(e,t){for(var a of this.days[t])if(e.equals(a.awayTeam)||e.equals(a.homeTeam))return!0;return!1}setSchedule(){this.days=[[]];var t,a=[];for(let t=0;t<this.teams.length;t++)for(let e=t+1;e<this.teams.length;e++)(t+e)%2==0?a.splice(Math.floor(Model.rng.random()*a.length),0,new BaseballGame(this.teams[t],this.teams[e])):a.splice(Math.floor(Model.rng.random()*a.length),0,new BaseballGame(this.teams[e],this.teams[t]));for(t of a){let e=this.days.length-1;for(;;){if(!this.isTeamScheduledThisDay(t.awayTeam,e)&&!this.isTeamScheduledThisDay(t.homeTeam,e)){this.days[e].push(t);break}--e<0&&(this.days.push([]),e=this.days.length-1)}}this.setPrintSchedule()}}let SeasonStates={PRESEASON:0,REGULAR_SEASON:1,PLAYOFF_TOURNAMENT:2,POSTSEASON:3};class Season{static idCounter=0;static restructure(t){Object.setPrototypeOf(t,Season.prototype);for(let e=0;e<t.teams.length;e++)t.teams[e]=BaseballTeam.restructure(t.teams[e]);return t.regularSeasonSchedule=RegularSeasonSchedule.restructure(t.regularSeasonSchedule),t}constructor(e){this.seasonIdNumber=Season.idCounter++,this.hasStarted=!1,this.done=!1,this.state=SeasonStates.REGULAR_SEASON,this.numberOfTeams=e.length,this.regularSeasonSchedule=new RegularSeasonSchedule(e),this.playoffSchedulechedule=null,this.teams=e,this.regularSeasonScheduleComplete=!1,this.playoffScheduleComplete=!1}doRegularSeason(){}getGameDetails(e){if(null==e)throw new Error("null day");if(this.state===SeasonStates.REGULAR_SEASON)return this.regularSeasonSchedule.getGameDetails(e)}getStandings(){let e="",t=1;var a,s,r,i=[];for(a in this.standings)i.push({teamName:a,wins:this.standings[a].wins,losses:this.standings[a].losses});i.sort(function(e,t){return t.wins-e.wins});let o=0;for(s of i)o=Math.max(o,s.getName().length+1);for(r of i)e=(e=(e+=t+". ")+r.getName()+": ")+r.wins+"-"+r.losses+"\n",t+=1}getTodaysGames(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON?this.regularSeasonSchedule.days[e]:null!=this.playoffSchedule&&this.state==SeasonStates.PLAYOFF_TOURNAMENT?this.playoffSchedule.days[e]:void 0}doPlayoffs(e=0){let t,a,s,r,i;null==this.playoffSchedulechedule&&this.daysPlayoffWeekOne(),a=this.playoffSchedulechedule[this.currentPlayoffWeek][this.currentPlayoffDay],i=a[0].rank<a[1].rank?(r=a[1],a[0]):(r=a[0],a[1]),(t=new Game(r.team,i.team)).generate(e),this.standings[t.winningTeam.getName()].wins+=1,this.standings[t.losingTeam.getName()].losses+=1,s=t.winningTeam==i.team?i:r,this.currentPlayoffWeek<this.playoffSchedulechedule.length-1?(this.playoffSchedulechedule[this.currentPlayoffWeek+1][Math.floor(this.currentPlayoffDay/2)].push(s),this.currentPlayoffDay+=1,this.currentPlayoffDay>=this.playoffSchedulechedule[this.currentPlayoffWeek].length&&(this.currentPlayoffWeek+=1,this.currentPlayoffDay=0)):this.playoffScheduleComplete=!0}isRegularSeasonDone(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON&&e>=this.regularSeasonSchedule.days.length-1}isTodayDone(e){if(null==e)throw new Error("null day");return this.state==SeasonStates.REGULAR_SEASON?this.regularSeasonSchedule.isTodayDone(e):null!=this.playoffSchedule&&this.state==SeasonStates.PLAYOFF_TOURNAMENT?this.playoffSchedule.isTodayDone(e):void 0}next(){switch(this.state){case SeasonStates.PRESEASON:case SeasonStates.REGULAR_SEASON:case SeasonStates.PLAYOFF_TOURNAMENT:}}nextGameMessages(e){if(null==e)throw new Error("null day");if(this.state===SeasonStates.REGULAR_SEASON)return this.regularSeasonSchedule.nextGameMessages(e)}}class League{static leagueIdNumberCount=0;static restructure(t){Object.setPrototypeOf(t,League.prototype);for(let e=0;e<t.teams.length;e++)t.teams[e]=Object.setPrototypeOf(t.teams[e],BaseballTeam.prototype);for(let e=0;e<t.freeAgentList.length;e++)t.freeAgentList[e]=Object.setPrototypeOf(t.freeAgentList[e],BaseballPlayer.prototype);for(let e=0;e<t.seasons.length;e++)t.seasons[e]=Object.setPrototypeOf(t.seasons[e],Season.prototype);return t.crest=Crest.restructure(t.crest),t}constructor(e,t){this.numberOfTeams=e,this.teams=[],this.freeAgentList=[];for(let e=0;e<this.numberOfTeams;e++){var a=new BaseballTeam(League.leagueIdNumberCount++);a.manager.subscribe(this.handleEvent),this.teams.push(a);for(let e=0;e<BaseballTeam.playersPerTeam;e++){let e=new BaseballPlayer(League.leagueIdNumberCount++,t);var s=new BaseballPlayer(League.leagueIdNumberCount++,t);e.getOverallAptitude()<s.getOverallAptitude()&&(e=s),a.addPlayer(e),e.manager.subscribe(this.handleEvent),League.leagueIdNumberCount%3==0&&e.setNameFromList()}}this.seasons=[],this.seasons[t]=new Season(this.teams),this.colorScheme={light:"#7aafff",mid:"#D50032",dark:"#002D72"},this.crest=new Crest(this.colorScheme,"ioLB",17,0,7,2),this.commissionerLastName=Name.create_last_name()}getPlayer(a){for(let t=0;t<this.teams.length;t++)for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].equals(a))return this.teams[t].players[e];for(let e=0;e<this.freeAgentList.length;e++)if(this.freeAgentList[e].equals(a))return this.freeAgentList[e];return null}getCommissionerFullName(){return this.crest.render(40)+" Commissioner "+this.commissionerLastName}getGameDetails(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].getGameDetails(t)}getSchedule(e){if(null==e)throw new Error("null year");return this.seasons[e].regularSeasonSchedule}getStandingsTableBatters(t){var a=[];for(let t=0;t<this.teams.length;t++)for(let e=0;e<this.teams[t].players.length;e++)a.push(this.teams[t].players[e]);a.sort((e,t)=>t.stats.getBattingAverage()-e.stats.getBattingAverage());let s=1,r=null,i=1,o=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidden  table-borderless">
        <thead>
    <tr>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League rank">#</a>
        </th>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the batter">Top Batters</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Batting Average: hits divided by at-bats">BA</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Total number of hits achieved">Hits</a>
        </th>
        <th class="text-secondary text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Hits per Game">H/G</a>
        </th>
    </tr>
</thead>
        <tbody>
    `,n=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.hits!==r&&(s=i,r=l.stats.hits),i++,o+=`
        <tr class="overflow-hidden">
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getBattingAverage()}</td>
            <td class="text-center" >${l.stats.hits}</td>
            <td class="text-center" >${l.stats.getHitsPerGame()}</td>
        </tr>
        `,++n>=t)break}return o+="</tbody></table>"}getStandingsTablePitchers(t){var e,a=[];for(e of this.teams)a.push(e.pitcher);a.sort((e,t)=>t.stats.getStrikeoutsPerNineInnings()-e.stats.getStrikeoutsPerNineInnings());let s=1,r=null,i=1,o=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidden  table-borderless">
        <thead>
            <tr>
                <th class="text-secondary">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League Rank">#</a>
                </th>
                <th class="text-secondary">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the pitcher">Top Pitchers</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Strikeouts per nine innings pitched">SO/9</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Total number of strikeouts achieved">SO</a>
                </th>
                <th class="text-secondary text-center">
                    <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Earned Run Average: the average number of earned runs allowed per nine innings pitched">ERA</a>
                </th>
            </tr>
        </thead>
        <tbody>
    `,n=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.strikeoutsThrown!==r&&(s=i,r=l.stats.strikeoutsThrown),i++,o+=`
        <tr>
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getStrikeoutsPerNineInnings()}</td>
            <td class="text-center" >${l.stats.strikeoutsThrown}</td>
            <td class="text-center" >${l.stats.getEarnedRunAverage()}</td>
        </tr>
        `,++n>=t)break}return o}getStandingsTeams(e){var t=[...this.teams];return t.sort((e,t)=>{var a=e.stats.wins/(e.stats.wins+e.stats.losses||1),s=t.stats.wins/(t.stats.wins+t.stats.losses||1);return s!=a?s-a:t.stats.wins!==e.stats.wins?t.stats.wins-e.stats.wins:e.stats.losses-t.stats.losses}),t}getStandingsTableTeams(){var t=this.getStandingsTeams(this.teams);let a=1,s=null,r=null,i=null,o=1,n=`
            <table class="table table-striped table-dark shadow rounded-2 overflow-hidden table-borderless">
                <thead>
                    <tr>
                        <th class="text-secondary">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League Rank">#</a>
                        </th>
                        <th class="text-secondary">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the team">Team Name</a>
                        </th>
                        <th class="text-secondary text-center">
                            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Win-Loss record of the team">W - L</a>
                        </th>
                    </tr>
                </thead>
                <tbody>
        `;for(let e=0;e<t.length;e++){var l=t[e],d=(l.stats.wins/(l.stats.wins+l.stats.losses||1)).toFixed(3);d===s&&l.stats.wins===r&&l.stats.losses===i||(a=o,s=d,r=l.stats.wins,i=l.stats.losses),o++,n+=`
                <tr>
                    <td>${a}</td>
                    <td>${l.getNameWithLink()}</td>
                    <td class="text-center" >${l.stats.wins} - ${l.stats.losses}</td>
                </tr>
            `}return n+="</tbody></table>"}getStandingsTableTeamScoring(t){var a=[...this.teams];a.sort((e,t)=>t.stats.getRunsPerPlateAppearance()-e.stats.getRunsPerPlateAppearance());let s=1,r=null,i=1,o=`
    <table class="table table-striped table-dark shadow rounded-2 overflow-hidden  table-borderless">
        <thead>
    <tr>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="League rank">#</a>
        </th>
        <th class="text-secondary">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Name of the Team">Top Scoring Teams</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary " data-toggle="tooltip" title="Runs per Plate Appearance">R/PA</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Batting Average: hits divided by at-bats">BA</a>
        </th>
        <th class="text-secondary  text-center">
            <a href="#" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Runs per Game">R/G</a>
        </th>
    </tr>
</thead>
        <tbody>
    `,n=0;for(let e=0;e<a.length;e++){var l=a[e];if(l.stats.getRunsPerPlateAppearance()!==r&&(s=i,r=l.stats.getRunsPerPlateAppearance()),i++,o+=`
        <tr class="overflow-hidden">
            <td>${s}</td>
            <td>${l.getFullNameWithLink()}</td>
            <td class="text-center" >${l.stats.getRunsPerPlateAppearance()}</td>
            <td class="text-center" >${l.stats.getBattingAverage()}</td>
            <td class="text-center" >${l.stats.getRunsPerGame()}</td>
        </tr>
        `,++n>=t)break}return o+="</tbody></table>"}getTeam(t){for(let e=0;e<this.teams.length;e++)if(this.teams[e].equals(t))return this.teams[e];return null}getTeamsPlayingToday(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].regularSeasonSchedule.getTeamsPlayingToday(t)}getNameableByFullName(a){for(let t=0;t<this.teams.length;t++){if(this.teams[t].getFullName()===a)return this.teams[t];for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].getFullName()===a)return this.teams[t].players[e]}return null}handleEvent=e=>{switch(e.eventType){case GameEventType.GAME_WINNER:this.lookup(e.teamId).addWin();break;case GameEventType.GAME_LOSER:this.lookup(e.teamId).addLoss();break;case GameEventType.PLATE_APPEARANCES:this.lookup(e.teamId).addPlateAppearances(),this.lookup(e.playerId).addPlateAppearances();break;case GameEventType.SINGLES:this.lookup(e.teamId).addSingles(),this.lookup(e.playerId).addSingles();break;case GameEventType.DOUBLES:this.lookup(e.teamId).addDoubles(),this.lookup(e.playerId).addDoubles();break;case GameEventType.TRIPLES:this.lookup(e.teamId).addTriples(),this.lookup(e.playerId).addTriples();break;case GameEventType.HOME_RUNS:this.lookup(e.teamId).addHomeRuns(),this.lookup(e.playerId).addHomeRuns();break;case GameEventType.BASES_ON_BALLS:this.lookup(e.teamId).addBasesOnBalls(),this.lookup(e.playerId).addBasesOnBalls();break;case GameEventType.SACRIFICE_FLIES:this.lookup(e.teamId).addSacrificeFlies(),this.lookup(e.playerId).addSacrificeFlies();break;case GameEventType.STRIKEOUTS_AT_BAT:this.lookup(e.teamId).addStrikeoutsAtBat(),this.lookup(e.playerId).addStrikeoutsAtBat();break;case GameEventType.INNINGS_PITCHED:this.lookup(e.teamId).addInningsPitched(),this.lookup(e.playerId).addInningsPitched();break;case GameEventType.STRIKEOUTS_THROWN:this.lookup(e.teamId).addStrikeoutsThrown(),this.lookup(e.playerId).addStrikeoutsThrown();break;case GameEventType.RUNS_ALLOWED:this.lookup(e.teamId).addRunsAllowed(),this.lookup(e.playerId).addRunsAllowed();break;case GameEventType.HOME_RUNS_ALLOWED:this.lookup(e.teamId).addHomeRunsAllowed(),this.lookup(e.playerId).addHomeRunsAllowed();break;case GameEventType.WALKS_ALLOWED:this.lookup(e.teamId).addWalksAllowed(),this.lookup(e.playerId).addWalksAllowed();break;case GameEventType.RUNS_SCORED:this.lookup(e.teamId).addRunsScored(),this.lookup(e.playerId).addRunsScored();break;case GameEventType.AT_BATS:this.lookup(e.teamId).addAtBats(),this.lookup(e.playerId).addAtBats()}};isRegularSeasonDone(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].isRegularSeasonDone(t)}isTodayDone(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].isTodayDone(t)}lookup(a){for(let t=0;t<this.teams.length;t++){if(this.teams[t].leagueIdNumber===a)return this.teams[t];for(let e=0;e<this.teams[t].players.length;e++)if(this.teams[t].players[e].leagueIdNumber===a)return this.teams[t].players[e]}for(let e=0;e<this.freeAgentList.length;e++)if(this.freeAgentList[e].leagueIdNumber===a)return this.freeAgentList[e];return null}reloadTeams(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");for(var a of this.seasons[e].getTodaysGames(t))a.homeTeam=this.lookup(a.homeTeam.leagueIdNumber),a.awayTeam=this.lookup(a.awayTeam.leagueIdNumber)}skipToday(){for(;!this.isTodayDone();)this.nextGameMessages()}setPrintSchedule(e){if(null==e)throw new Error("null year");this.seasons[e].regularSeasonSchedule.setPrintSchedule()}addNewSeason(){for(var e of this.teams){e.resetSeasonStats();for(var t of e.players)t.updateCareerStats(),t.resetSeasonStats()}this.seasons.push(new Season(this.teams))}doPlayoffs(e,t=0){if(null==e)throw new Error("null year");this.seasons[e].doPlayoffs(t)}isSeasonOver(e){if(null==e)throw new Error("null year");return this.seasons[e].arePlayoffsOver()?True:False}nextGameMessages(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.seasons[e].nextGameMessages(t)}}let CardType={PITCHER:"Pitcher",SLUGGER:"Slugger",FAV_TEAM:"Fav Team",CONCESSIONS:"Concessions",JOKER:"Joker",LUCKY_JOKER:"Lucky Joker",APOCRYPHA:"Apocrypha",CELESTIAL:"Celestial",POTION:"Potion"},UnlockableCardType={COFFEE_CONCESSIONS:"Coffee Concessions",CURSED_HAT:"Cursed Hat",CURSED_MONEYMAKER:"Cursed Moneymaker",CURSED_SHIRT:"Cursed Shirt",CURSED_SHOE:"Cursed Shoe",HOT_CONCESSIONS:"Hot Concessions",LUCKY_HAT:"Lucky Hat",LUCKY_MONEYMAKER:"Lucky Moneymaker",LUCKY_SHIRT:"Lucky Shirt",LUCKY_SHOE:"Lucky Shoe",POTION:"Potion",SALTY_CONCESSIONS:"Salty Concessions",SWEET_CONCESSIONS:"Sweet Concessions"};class TradingCard{static restructure(e){switch(e.cardType){case"Pitcher":Object.setPrototypeOf(e,PitcherCard.prototype);break;case"Slugger":Object.setPrototypeOf(e,SluggerCard.prototype);break;case"Fav Team":Object.setPrototypeOf(e,FavTeamCard.prototype);break;case"Concessions":Object.setPrototypeOf(e,ConcessionsCard.prototype);break;case"Joker":Object.setPrototypeOf(e,JokerCard.prototype);break;case"Lucky Joker":Object.setPrototypeOf(e,LuckyJokerCard.prototype);break;case"Apocrypha":Object.setPrototypeOf(e,ConcessionsCard.prototype);break;case"Celestial":Object.setPrototypeOf(e,JokerCard.prototype);break;case"Potion":Object.setPrototypeOf(e,LuckyJokerCard.prototype)}return e.valuables=Valuables.restructure(e.valuables),e}static counter=0;constructor(e,t,a,s,r="",i=null,o=""){this.cardId=TradingCard.counter++,this.name=t?t.firstName+" "+t.lastName:"Unknown Player",this.cardType=e||"Generic Type",this.team=t?t.teamPlaceAbbreviation+" "+t.teamMascot:"Unknown Team",this.leagueIdNumber=t?t.leagueIdNumber:null,this.colorScheme=a,this.gradientrotation=0,this.profilePic=t?t.profilePic:"🏈",this.cost=s||0,this.sellValue=Math.floor(.8*this.cost),this.rewardAmount=r||"",this.valuables=i||null,this.eventType=o||"",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} per ${this.eventString}"
            cardline2="${this.team}"
            cardline3="${this.cardType}"
            cardline4="Click for Player stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            gradientrotation="${this.gradientrotation}"
            emoji="${this.profilePic}"
            rewardtype="${this.valuables.getEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
        >    
        </trading-card>`.trim()}equals(e){return("Slugger"==this.cardType||"Fav Team"==this.cardType||"Pitcher"==this.cardType)&&this.cardType===e.cardType&&this.leagueIdNumber===e.leagueIdNumber}isAffordable(e){return this.cost<=e.valuables.money&&e.getCardsCount()<e.maxCards}isTriggered(){throw new Error("subclasses must implement isTriggered")}updateWebComponent(){this.container.querySelector("trading-card").setAttribute("name",this.name),this.container.querySelector("trading-card").setAttribute("cardline1",`+${this.rewardAmount} ${this.valuables?.getShadedEmoji()||""} per `+this.eventType),this.container.querySelector("trading-card").setAttribute("cardline2",this.team),this.container.querySelector("trading-card").setAttribute("cardline3",this.cardType),this.container.querySelector("trading-card").setAttribute("cardline4","Click for Player stats"),this.container.querySelector("trading-card").setAttribute("cost",this.cost.toString()),this.container.querySelector("trading-card").setAttribute("colorlight",this.colorScheme.light),this.container.querySelector("trading-card").setAttribute("colormid",this.colorScheme.mid),this.container.querySelector("trading-card").setAttribute("colordark",this.colorScheme.dark),this.container.querySelector("trading-card").setAttribute("gradientrotation",this.gradientrotation.toString()),this.container.querySelector("trading-card").setAttribute("emoji",this.profilePic),this.container.querySelector("trading-card").setAttribute("fontcolor","#FFFFFF"),this.container.querySelector("trading-card").setAttribute("fontsize","14px"),this.container.querySelector("trading-card").setAttribute("fontfamily","Noto Color Emoji,sans-serif")}render(){var e=View.createElement("span");return e.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} per ${this.eventString}"
            cardline2="${this.team}"
            cardline3="${this.cardType}"
            cardline4="Click for Player stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            gradientrotation="${this.gradientrotation}"
            emoji="${this.profilePic}"
            rewardtype="${this.valuables.getEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
        >    
        </trading-card>`.trim(),e}updateData(e){Object.assign(this,e),this.updateWebComponent()}}class JokerCard extends TradingCard{static restructure(e){return Object.setPrototypeOf(e,JokerCard.prototype),e}static getCardType(){return CardType.JOKER}constructor(e,t,a,s,r,i,o,n,l){super(CardType.JOKER,null,r,t,a,s,n),this.name=e,this.team=null,this.leagueIdNumber=-3,this.colorScheme=r,this.profilePic=i,this.otherCard=o,this.eventString=`${this.otherCard} Cards give +${this.rewardAmount} <span class='noto'>${this.valuables.getShadedEmoji()}</span>`,this.pastTenseEventString=l+"!",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="when trigged"
            cardline3="<span class='noto'>${this.profilePic}</span>"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="15px"
            fontfamily="Noto Color Emoji,sans-serif"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim()}updateWebComponent(){this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="when trigged"
            cardline3="<span class='noto'>${this.profilePic}</span>"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="15px"
            fontfamily="Noto Color Emoji,sans-serif"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim()}addRewardToUser(e){e.valuables.add(this.valuables)}isTriggered(e){return e.eventType===this.eventType&&View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),e.eventType===this.eventType}render(){var e=View.createElement("span");return e.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="when trigged"
            cardline3="<span class='noto'>${this.profilePic}</span>"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="15px"
            fontfamily="Noto Color Emoji,sans-serif"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim(),e}}class LuckyJokerCard extends JokerCard{static luckyReward=4;static cursedReward=7;static restructure(e){return Object.setPrototypeOf(e,LuckyJokerCard.prototype),e}static getCardType(){return CardType.LUCKY_JOKER}constructor(e,t,a,s,r,i,o,n,l,d){super(e,t,a,s,r,i,o,n,l),this.odds=d,this.eventString=`${this.otherCard} Cards have 1 in ${this.odds} `,this.pastTenseEventString=l+"!",this.cardType=CardType.LUCKY_JOKER,this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="chance to give +${this.rewardAmount} <span class='noto'>${this.valuables.getShadedEmoji()}</span>"
            cardline3="when triggered"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            odds="1 in ${this.odds}"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim()}updateWebComponent(){this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="chance to give +${this.rewardAmount} <span class='noto'>${this.valuables.getShadedEmoji()}</span>"
            cardline3="when triggered"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            odds="1 in ${this.odds}"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim()}addRewardToUser(e){e.valuables.add(this.valuables)}isTriggered(e){if(Model.rng.random()*this.odds<1)return e.eventType===this.eventType&&View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),e.eventType===this.eventType}render(){var e=View.createElement("span");return e.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="${this.eventString}"
            cardline2="chance to give +${this.rewardAmount} <span class='noto'>${this.valuables.getShadedEmoji()}</span>"
            cardline3="when triggered"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            gradientRotation="1"
            rewardamount="${this.rewardAmount}"
            rewardtype="${this.valuables.getShadedEmoji()}"
            fontcolor="${this.colorScheme.text}"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            odds="1 in ${this.odds}"
            othercard="${this.otherCard}"
            >
        </trading-card>`.trim(),e}}class PotionCard extends TradingCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Red Potion",cost:5,rewardAmount:3,valuables:new Valuables({redMagic:3}),reduction:1,colorScheme:{light:"#000000",mid:"#FF0000",dark:"#FFFFFF",text:"#550000"},profilePic:"🍷",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"sipped"},{name:"Green Potion",cost:5,rewardAmount:4,valuables:new Valuables({greenMagic:4}),reduction:1,colorScheme:{light:"#000000",mid:"#00FF00",dark:"#FFFFFF",text:"#005500"},profilePic:"🍾",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"sipped"},{name:"Blue Potion",cost:5,rewardAmount:4,valuables:new Valuables({blueMagic:4}),reduction:1,colorScheme:{light:"#000000",mid:"#0000FF",dark:"#FFFFFF",text:"#000055"},profilePic:"🫙",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"sipped"},{name:"Gold Potion",cost:5,rewardAmount:3,valuables:new Valuables({money:3}),reduction:1,colorScheme:{light:"#000000",mid:"#FFAA00",dark:"#FFFFFF",text:"#000000"},profilePic:"⚱️",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"sipped"},{name:"Health Potion",cost:5,rewardAmount:.2,valuables:new Valuables({lives:.2}),reduction:.1,colorScheme:{light:"#000000",mid:"#ffaaaa",dark:"#ffffff",text:"#000000"},profilePic:"🏺",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"sipped"}]);return a.push(new PotionCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.reduction)),a}static getCardType(){return CardType.POTION}static restructure(e){return Object.setPrototypeOf(e,ConcessionsCard.prototype),e}constructor(e,t,a,s,r,i,o,n,l,d){switch(super(CardType.POTION,null,r,t,a,s,n),this.reduction=d,this.name=e,this.rewardAmount2=a-d,d<1&&(this.rewardAmount2=HelpMe.roundToTenth(a-d)),this.team=null,this.leagueIdNumber=-2,this.colorScheme=r,this.profilePic=i,this.eventString="when "+l,this.otherCard=o,n){case GameEventType.PITCHER_CARD_TRIGGERED:this.line1="When Pitcher Cards throw strikeout",this.otherCard="Pitcher Cards";break;case GameEventType.FAV_TEAM_CARD_TRIGGERED:this.line1="When Fav Team Cards get a run",this.otherCard="Fav Team Cards";break;case GameEventType.SLUGGER_CARD_TRIGGERED:this.line1="When Slugger Cards get a hit",this.otherCard="Slugger Cards"}this.pastTenseEventString="was "+l+"!",this.pastTenseEventString="was "+l+"!",this.container=View.createElement("span"),this.container.innerHTML=`
      <trading-card 
          onclick="app.view.statsModal.setText(this);" 
          data-bs-target="#statsModal" 
          data-bs-toggle="modal"
          name="${this.name}"
          cardline1="${this.line1}"
          cardline2="gain +${this.rewardAmount} ${this.valuables.getShadedEmoji()}"
          cardline3="Then, at end of day, ${this.rewardAmount} &rarr; ${this.rewardAmount2}"
          cardline4="${this.cardType}"
          cost="${this.cost}"
          colorlight="${this.colorScheme.light}"
          colormid="${this.colorScheme.mid}"
          colordark="${this.colorScheme.dark}"
          emoji="${this.profilePic}"
          rewardamount="${this.rewardAmount}"
          rewardamount2="${this.rewardAmount2}"
          rewardtype="${this.valuables.getEmoji()}"
          fontcolor="#000000"
          fontsize="14px"
          fontfamily="Noto Color Emoji,sans-serif"
          othercard="${this.otherCard}"
          >
      </trading-card>`.trim()}updateWebComponent(){this.container=View.createElement("span"),this.container.innerHTML=`
      <trading-card 
          onclick="app.view.statsModal.setText(this);" 
          data-bs-target="#statsModal" 
          data-bs-toggle="modal"
          name="${this.name}"
          cardline1="${this.line1}"
          cardline2="gain +${this.rewardAmount} ${this.valuables.getShadedEmoji()}"
          cardline3="Then, at end of day, ${this.rewardAmount} &rarr; ${this.rewardAmount2}"
          cardline4="${this.cardType}"
          cost="${this.cost}"
          colorlight="${this.colorScheme.light}"
          colormid="${this.colorScheme.mid}"
          colordark="${this.colorScheme.dark}"
          emoji="${this.profilePic}"
          rewardamount="${this.rewardAmount}"
          rewardamount2="${this.rewardAmount2}"
          rewardtype="${this.valuables.getEmoji()}"
          fontcolor="#000000"
          fontsize="14px"
          fontfamily="Noto Color Emoji,sans-serif"
          othercard="${this.otherCard}"
          >
      </trading-card>`.trim()}addRewardToUser(e){e.valuables.add({...this.valuables}),e.valuables.lives=HelpMe.roundToTenth(e.valuables.lives)}isTriggered(e){return e.eventType===GameEventType.END_OF_DAY&&this.reduceValuables(),e.eventType===this.eventType&&View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),e.eventType===this.eventType}reduceValuables(){this.rewardAmount-=this.reduction,this.reduction<1&&(this.rewardAmount=HelpMe.roundToTenth(this.rewardAmount)),this.rewardAmount2-=this.reduction,this.reduction<1&&(this.rewardAmount2=HelpMe.roundToTenth(this.rewardAmount2));for(var e of Object.keys(this.valuables))0!==this.valuables[e]&&(this.valuables[e]-=this.reduction);console.log(this.valuables),this.updateWebComponent()}render(){var e=View.createElement("span");return e.innerHTML=`
      <trading-card 
          onclick="app.view.statsModal.setText(this);" 
          data-bs-target="#statsModal" 
          data-bs-toggle="modal"
          name="${this.name}"
          cardline1="${this.line1}"
          cardline2="gain +${this.rewardAmount} ${this.valuables.getShadedEmoji()}"
          cardline3="Then, at end of day, ${this.rewardAmount} &rarr; ${this.rewardAmount2}"
          cardline4="${this.cardType}"
          cost="${this.cost}"
          colorlight="${this.colorScheme.light}"
          colormid="${this.colorScheme.mid}"
          colordark="${this.colorScheme.dark}"
          emoji="${this.profilePic}"
          rewardamount="${this.rewardAmount}"
          rewardamount2="${this.rewardAmount2}"
          rewardtype="${this.valuables.getEmoji()}"
          fontcolor="#000000"
          fontsize="14px"
          fontfamily="Noto Color Emoji,sans-serif"
          othercard="${this.otherCard}"
          >
      </trading-card>`.trim(),e}}class LuckyShirtCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Lucky Scarf",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({redMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffaaaa",dark:"#FFFFFF",text:"#550000"},profilePic:"🧣",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:4},{name:"Lucky Shirt",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({greenMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaffaa",dark:"#FFFFFF",text:"#005500"},profilePic:"🥻",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:4},{name:"Lucky Coat",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({blueMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaaaff",dark:"#FFFFFF",text:"#000055"},profilePic:"🧥",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:4}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class CursedShirtCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Cursed Scarf",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({redMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaaaa",mid:"#550000",dark:"#000000",text:"#ffaaaa"},profilePic:"🧣",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:7},{name:"Cursed Shirt",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({greenMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaffaa",mid:"#005500",dark:"#000000",text:"#aaffaa"},profilePic:"🥻",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:7},{name:"Cursed Coat",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({blueMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaaaff",mid:"#000055",dark:"#000000",text:"#aaaaff"},profilePic:"🧥",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:7}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class CursedHatCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Cursed Hat",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({redMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaaaa",mid:"#550000",dark:"#000000",text:"#ffaaaa"},profilePic:"🎩",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:3},{name:"Cursed Batting Helmet",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({greenMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaffaa",mid:"#005500",dark:"#000000",text:"#aaffaa"},profilePic:"🪖",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:3},{name:"Cursed Cap",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({blueMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaaaff",mid:"#000055",dark:"#000000",text:"#aaaaff"},profilePic:"🧢",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:3}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class LuckyHatCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Lucky Hat",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({redMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffaaaa",dark:"#FFFFFF",text:"#550000"},profilePic:"🎩",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:2},{name:"Lucky Batting Helmet",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({greenMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaffaa",dark:"#FFFFFF",text:"#005500"},profilePic:"🪖",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:2},{name:"Lucky Cap",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({blueMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaaaff",dark:"#FFFFFF",text:"#000055"},profilePic:"🧢",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:2}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class CursedShoeCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Cursed Shoes",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({redMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaaaa",mid:"#550000",dark:"#000000",text:"#ffaaaa"},profilePic:"👠",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:3},{name:"Cursed Boots",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({greenMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaffaa",mid:"#005500",dark:"#000000",text:"#aaffaa"},profilePic:"🥾",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:3},{name:"Cursed Sneakers",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({blueMagic:LuckyJokerCard.cursedReward}),colorScheme:{light:"#aaaaff",mid:"#000055",dark:"#000000",text:"#aaaaff"},profilePic:"👟",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:3}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class LuckyShoeCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Lucky Shoes",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({redMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffaaaa",dark:"#FFFFFF",text:"#550000"},profilePic:"👠",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"radiated red",odds:2},{name:"Lucky Boots",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({greenMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaffaa",dark:"#FFFFFF",text:"#005500"},profilePic:"🥾",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"glowed green",odds:2},{name:"Lucky Sneakers",cost:2,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({blueMagic:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#aaaaff",dark:"#FFFFFF",text:"#000055"},profilePic:"👟",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"beamed blue",odds:2}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class CursedMoneymakerCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Cursed Lottery Ticket",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({money:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaa33",mid:"#883300",dark:"#000000",text:"#ffaa33"},profilePic:"🎫",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"paid out",odds:5},{name:"Cursed Slot Machine",cost:4,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({money:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaa33",mid:"#883300",dark:"#000000",text:"#ffaa33"},profilePic:"🎰",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"hit the jackpot",odds:5},{name:"Cursed Credit Card",cost:6,rewardAmount:LuckyJokerCard.cursedReward,valuables:new Valuables({money:LuckyJokerCard.cursedReward}),colorScheme:{light:"#ffaa33",mid:"#883300",dark:"#000000",text:"#ffaa33"},profilePic:"💳",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"paid off",odds:7}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class LuckyMoneymakerCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Lucky Star",cost:3,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({money:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffeeaa",dark:"#FFFFFF",text:"#554400"},profilePic:"🌟",otherCard:"Slugger",triggeredByEvent:GameEventType.SLUGGER_CARD_TRIGGERED,pastTenseVerb:"granted your wish",odds:4},{name:"Lucky Penny",cost:3,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({money:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffeeaa",dark:"#FFFFFF",text:"#554400"},profilePic:"🪙",otherCard:"Fav Team",triggeredByEvent:GameEventType.FAV_TEAM_CARD_TRIGGERED,pastTenseVerb:"cashed in",odds:4},{name:"Lucky Key",cost:5,rewardAmount:LuckyJokerCard.luckyReward,valuables:new Valuables({money:LuckyJokerCard.luckyReward}),colorScheme:{light:"#000000",mid:"#ffeeaa",dark:"#FFFFFF",text:"#554400"},profilePic:"🔑",otherCard:"Pitcher",triggeredByEvent:GameEventType.PITCHER_CARD_TRIGGERED,pastTenseVerb:"unlocked treasure",odds:6}]);return a.push(new LuckyJokerCard(s.name,s.cost,s.rewardAmount,s.valuables,s.colorScheme,s.profilePic,s.otherCard,s.triggeredByEvent,s.pastTenseVerb,s.odds)),a}static getCardType(){return CardType.LUCKY_JOKER}}class ConcessionsCard extends TradingCard{static restructure(e){return Object.setPrototypeOf(e,ConcessionsCard.prototype),e}static getCardType(){return CardType.CONCESSIONS}constructor(e,t,a,s,r,i,o,n){super(CardType.CONCESSIONS,null,n,t,a,s,GameEventType.END_OF_DAY),this.reduction=r,this.name=e,this.rewardAmount2=a-r,this.team=null,this.leagueIdNumber=-2,this.colorScheme=n,this.profilePic=i,this.eventString="when "+o,this.pastTenseEventString="was "+o+"!",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} ${this.eventString}"
            cardline2="at end of day"
            cardline3="${this.rewardAmount} &rarr; ${this.rewardAmount2}"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            rewardamount="${this.rewardAmount}"
            rewardamount2="${this.rewardAmount2}"
            rewardtype="${this.valuables.getEmoji()}"
            fontcolor="#000000"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            >
        </trading-card>`.trim()}updateWebComponent(){this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} ${this.eventString}"
            cardline2="at end of day"
            cardline3="${this.rewardAmount} &rarr; ${this.rewardAmount2}"
            cardline4="Concessions"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            rewardamount="${this.rewardAmount}"
            rewardamount2="${this.rewardAmount2}"
            rewardtype="${this.valuables.getEmoji()}"
            fontcolor="#000000"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            >
        </trading-card>`.trim()}addRewardToUser(e){e.valuables.add({...this.valuables}),setTimeout(()=>{this.reduceValuables()},100)}isTriggered(e){return e.eventType===this.eventType&&View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),e.eventType===this.eventType}reduceValuables(){this.rewardAmount-=this.reduction,this.rewardAmount2-=this.reduction;for(var e of Object.keys(this.valuables))0!==this.valuables[e]&&(this.valuables[e]-=this.reduction);this.updateWebComponent()}render(){var e=View.createElement("span");return e.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.setText(this);" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} ${this.eventString}"
            cardline2="at end of day"
            cardline3="${this.rewardAmount} &rarr; ${this.rewardAmount2}"
            cardline4="${this.cardType}"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            rewardamount="${this.rewardAmount}"
            rewardamount2="${this.rewardAmount2}"
            rewardtype="${this.valuables.getEmoji()}"
            fontcolor="#000000"
            fontsize="14px"
            fontfamily="Noto Color Emoji,sans-serif"
            >
        </trading-card>`.trim(),e}}class SaltyConcessionsCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Popcorn",cost:4,rewardAmount:18,valuables:new Valuables({greenMagic:18}),colorScheme:{light:"#000000",mid:"#ccffcc",dark:"#FFFFFF",text:"#005500"},midColor:"#ccffcc",reduction:2,profilePic:"🍿",verb:"eaten"},{name:"Pretzel",cost:5,rewardAmount:21,valuables:new Valuables({greenMagic:21}),colorScheme:{light:"#000000",mid:"#ccffcc",dark:"#FFFFFF",text:"#005500"},midColor:"#ccffcc",reduction:2,profilePic:"🥨",verb:"eaten"},{name:"Popcorn",cost:4,rewardAmount:18,valuables:new Valuables({greenMagic:18}),colorScheme:{light:"#000000",mid:"#ccffcc",dark:"#FFFFFF",text:"#005500"},midColor:"#ccffcc",reduction:2,profilePic:"🍿",verb:"eaten"},{name:"Pretzel",cost:5,rewardAmount:21,valuables:new Valuables({greenMagic:21}),colorScheme:{light:"#000000",mid:"#ccffcc",dark:"#FFFFFF",text:"#005500"},midColor:"#ccffcc",reduction:2,profilePic:"🥨",verb:"eaten"},{name:"Pickle of Power",cost:11,rewardAmount:.5,valuables:new Valuables({lives:.5}),colorScheme:{light:"#000000",mid:"#ccffcc",dark:"#FFFFFF",text:"#005500"},midColor:"#ccffcc",reduction:2,profilePic:"🥒",verb:"eaten"}]);return a.push(new ConcessionsCard(s.name,s.cost,s.rewardAmount,s.valuables,s.reduction,s.profilePic,s.verb,s.colorScheme)),a}static getCardType(){return CardType.CONCESSIONS}}class SweetConcessionsCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Churro",cost:4,rewardAmount:7,valuables:new Valuables({money:7}),colorScheme:{light:"#000000",mid:"#ffeecc",dark:"#FFFFFF",text:"#554400"},midColor:"#ffffaa",reduction:3,profilePic:"🥖",verb:"eaten"},{name:"Doughnut",cost:5,rewardAmount:9,valuables:new Valuables({money:9}),colorScheme:{light:"#000000",mid:"#ffeecc",dark:"#FFFFFF",text:"#554400"},midColor:"#ffffaa",reduction:5,profilePic:"🍩",verb:"eaten"},{name:"Sundae",cost:5,rewardAmount:9,valuables:new Valuables({money:9}),colorScheme:{light:"#000000",mid:"#ffeecc",dark:"#FFFFFF",text:"#554400"},midColor:"#ffffaa",reduction:4,profilePic:"🍨",verb:"eaten"},{name:"Cake",cost:5,rewardAmount:8,valuables:new Valuables({money:8}),colorScheme:{light:"#000000",mid:"#ffeecc",dark:"#FFFFFF",text:"#554400"},midColor:"#ffffaa",reduction:3,profilePic:"🍰",verb:"eaten"},{name:"Honey Elixer",cost:5,rewardAmount:.5,valuables:new Valuables({lives:.5}),colorScheme:{light:"#000000",mid:"#ffeecc",dark:"#FFFFFF",text:"#554400"},midColor:"#ffffaa",reduction:2,profilePic:"🍯",verb:"eaten"}]);return a.push(new ConcessionsCard(s.name,s.cost,s.rewardAmount,s.valuables,s.reduction,s.profilePic,s.verb,s.colorScheme)),a}static getCardType(){return CardType.CONCESSIONS}}class HotConcessionsCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Hot Dog",cost:4,rewardAmount:19,valuables:new Valuables({redMagic:20}),colorScheme:{light:"#000000",mid:"#ffcccc",dark:"#FFFFFF",text:"#550000"},midColor:"#ffcccc",reduction:3,profilePic:"🌭",verb:"eaten"},{name:"Pizza",cost:5,rewardAmount:21,valuables:new Valuables({redMagic:23}),colorScheme:{light:"#000000",mid:"#ffcccc",dark:"#FFFFFF",text:"#550000"},midColor:"#ffcccc",reduction:2,profilePic:"🍕",verb:"eaten"},{name:"Hot Dog",cost:4,rewardAmount:19,valuables:new Valuables({redMagic:20}),colorScheme:{light:"#000000",mid:"#ffcccc",dark:"#FFFFFF",text:"#550000"},midColor:"#ffcccc",reduction:3,profilePic:"🌭",verb:"eaten"},{name:"Pizza",cost:5,rewardAmount:21,valuables:new Valuables({redMagic:23}),colorScheme:{light:"#000000",mid:"#ffcccc",dark:"#FFFFFF",text:"#550000"},midColor:"#ffcccc",reduction:2,profilePic:"🍕",verb:"eaten"},{name:"Hearty Stew",cost:5,rewardAmount:.5,valuables:new Valuables({lives:.5}),colorScheme:{light:"#000000",mid:"#ffcccc",dark:"#FFFFFF",text:"#550000"},midColor:"#ffcccc",reduction:2,profilePic:"🍲",verb:"eaten"}]);return a.push(new ConcessionsCard(s.name,s.cost,s.rewardAmount,s.valuables,s.reduction,s.profilePic,s.verb,s.colorScheme)),a}static getCardType(){return CardType.CONCESSIONS}}class CoffeeConcessionsCard{static generateCards(e,t){var a=[],s=HelpMe.choice([{name:"Coffee",cost:3,rewardAmount:15,valuables:new Valuables({blueMagic:15}),colorScheme:{light:"#000000",mid:"#ccccFF",dark:"#FFFFFF",text:"#000055"},reduction:2,profilePic:"☕",verb:"sipped"},{name:"Iced Latte",cost:5,rewardAmount:22,valuables:new Valuables({blueMagic:22}),colorScheme:{light:"#000000",mid:"#ccccFF",dark:"#FFFFFF",text:"#000055"},reduction:3,profilePic:"🧋",verb:"sipped"},{name:"Coffee",cost:3,rewardAmount:15,valuables:new Valuables({blueMagic:15}),colorScheme:{light:"#000000",mid:"#ccccFF",dark:"#FFFFFF",text:"#000055"},reduction:2,profilePic:"☕",verb:"sipped"},{name:"Iced Latte",cost:5,rewardAmount:22,valuables:new Valuables({blueMagic:22}),colorScheme:{light:"#000000",mid:"#ccccFF",dark:"#FFFFFF",text:"#000055"},reduction:3,profilePic:"🧋",verb:"sipped"},{name:"Healing Brew",cost:5,rewardAmount:.5,valuables:new Valuables({lives:.5}),colorScheme:{light:"#000000",mid:"#ccccFF",dark:"#FFFFFF",text:"#000055"},reduction:2,profilePic:"🍵",verb:"sipped"}]);return a.push(new ConcessionsCard(s.name,s.cost,s.rewardAmount,s.valuables,s.reduction,s.profilePic,s.verb,s.colorScheme)),a}static getCardType(){return CardType.CONCESSIONS}}class PlaceholderCard extends TradingCard{constructor(){super(null,null,{light:"#000",mid:"#000",dark:"#000",text:"#FFF"},0,0,new Valuables({}),""),this.leagueIdNumber=-1,this.container.innerHTML=`
            <trading-card 
                name="Your Cards Go Here"
                cardline1="Placeholder <span class='noto'>🫥</span>"
                cardline2="This Is Where I'd Put My Cards"
                cardline3="If I Had Any"
                cardline4="(not a real card)"
                cost="?"
                colorlight="rgba(127,127,255,0.0)"
                colormid="rgba(127,127,255,0.0)"
                colordark="rgba(127,127,255,0.0)"
                emoji=" "
                fontSize="13px"
                fontFamily="Arial,sans-serif">
            </trading-card>`.trim()}render(){var e=View.createElement("span");return e.innerHTML=`
                <trading-card 
                    name="Your Cards Go Here"
                    cardline1="Placeholder <span class='noto'>🫥</span>"
                    cardline2="This Is Where I'd Put My Cards"
                    cardline3="If I Had Any"
                    cardline4="(not a real card)"
                    cost="?"
                    colorlight="rgba(127,127,255,0.0)"
                    colormid="rgba(127,127,255,0.0)"
                    colordark="rgba(127,127,255,0.0)"
                    emoji=" "
                    fontSize="13px"
                    fontFamily="Arial,sans-serif">
                </trading-card>`.trim(),e}}class SluggerCard extends TradingCard{static restructure(e){return Object.setPrototypeOf(e,SluggerCard.prototype),e}static generateCards(e,t){var a,s=[];for(a of e)s.push(new SluggerCard(CardType.SLUGGER,a.getSlugger(),2,10,new Valuables({blueMagic:10}),GameEventType.HITS));return s}static getCardType(){return CardType.SLUGGER}constructor(e,t,a,s,r,i){super(e,t,t.colorScheme,a,s,r,i),this.name=t.firstName+" "+t.lastName,this.team=t.teamPlaceAbbreviation+" "+t.teamMascot,this.leagueIdNumber=t.leagueIdNumber,this.colorScheme={light:t.colorScheme.light,mid:t.colorScheme.mid,dark:t.colorScheme.dark,text:"#FFFFFF"},this.profilePic=t.profilePic,this.gradientrotation=.4,this.eventString="hit",this.pastTenseEventString="got a hit!",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardLine1="+${this.rewardAmount} ${this.valuables.getEmoji()} per ${this.eventString}"
            cardLine2="${this.team}"
            cardLine3="${this.cardType}"
            cardLine4="Click for Player stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            gradientRotation="${this.gradientrotation}"
            emoji="${this.profilePic}"
            fontcolor="#FFFFFF"
            fontsize="13px"
            fontfamily="Noto Color Emoji,sans-serif"
        </trading-card>`.trim(),this.updateWebComponent()}updateWebComponent(){super.updateWebComponent(),this.container.querySelector("trading-card").setAttribute("cardline1",`+${this.rewardAmount} ${this.valuables?.getShadedEmoji()||""} per `+this.eventString),this.container.querySelector("trading-card").setAttribute("cardline2",this.team),this.container.querySelector("trading-card").setAttribute("gradientrotation",this.gradientrotation.toString()),this.container.querySelector("trading-card").setAttribute("cardline2",this.team),this.container.querySelector("trading-card").setAttribute("onclick",`app.view.statsModal.update(${this.leagueIdNumber});`),this.container.querySelector("trading-card").setAttribute("data-bs-target","#statsModal"),this.container.querySelector("trading-card").setAttribute("data-bs-toggle","modal")}addRewardToUser(e){e.valuables.add(this.valuables),e.handleEvent(new GameEvent(GameEventType.SLUGGER_CARD_TRIGGERED))}isTriggered(e){return e.playerId===this.leagueIdNumber&&this.eventType===GameEventType.HITS&&(e.eventType===GameEventType.SINGLES||e.eventType===GameEventType.DOUBLES||e.eventType===GameEventType.TRIPLES||e.eventType===GameEventType.HOME_RUNS)&&(View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),!0)}}class PitcherCard extends TradingCard{static restructure(e){return Object.setPrototypeOf(e,PitcherCard.prototype),e}static generateCards(e,t){var a,s=[];for(a of e)s.push(new PitcherCard(CardType.PITCHER,a.getPitcher(),10,3,new Valuables({redMagic:3}),GameEventType.STRIKEOUTS_THROWN));return s}static getCardType(){return CardType.PITCHER}constructor(e,t,a,s,r,i){super(e,t,t.colorScheme,a,s,r,i),this.name=t.firstName+" "+t.lastName,this.team=t.teamPlaceAbbreviation+" "+t.teamMascot,this.leagueIdNumber=t.leagueIdNumber,this.colorScheme={light:t.colorScheme.light,mid:t.colorScheme.mid,dark:t.colorScheme.dark,text:"#FFFFFF"},this.profilePic=t.profilePic,this.gradientrotation=.6,this.rewardAmount=s,this.valuables=r,this.eventString="strikeout thrown",this.pastTenseEventString="threw a strikeout!",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardLine1="+${this.rewardAmount} ${this.valuables.getEmoji()} per ${this.eventString}"
            cardLine2="${this.team}"
            cardLine3="${this.cardType}"
            cardLine4="Click for Player stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            gradientRotation="${this.gradientrotation}"
            emoji="${this.profilePic}"
            fontcolor="#FFFFFF"
            fontsize="13px"
            fontfamily="Noto Color Emoji,sans-serif"
        </trading-card>`.trim(),this.updateWebComponent()}updateWebComponent(){super.updateWebComponent(),this.container.querySelector("trading-card").setAttribute("name",this.name),this.container.querySelector("trading-card").setAttribute("cardline1",`+${this.rewardAmount} ${this.valuables?.getShadedEmoji()||""} per `+this.eventString),this.container.querySelector("trading-card").setAttribute("cardline2",this.team),this.container.querySelector("trading-card").setAttribute("cardline3",this.cardType),this.container.querySelector("trading-card").setAttribute("cardline4","Click for Player stats"),this.container.querySelector("trading-card").setAttribute("cost",this.cost.toString()),this.container.querySelector("trading-card").setAttribute("colorlight",this.colorScheme.light),this.container.querySelector("trading-card").setAttribute("colormid",this.colorScheme.mid),this.container.querySelector("trading-card").setAttribute("colordark",this.colorScheme.dark),this.container.querySelector("trading-card").setAttribute("gradientrotation",this.gradientrotation.toString()),this.container.querySelector("trading-card").setAttribute("emoji",this.profilePic),this.container.querySelector("trading-card").setAttribute("fontsize","13px"),this.container.querySelector("trading-card").setAttribute("fontfamily","Noto Color Emoji,sans-serif"),this.container.querySelector("trading-card").setAttribute("onclick",`app.view.statsModal.update(${this.leagueIdNumber});`),this.container.querySelector("trading-card").setAttribute("data-bs-target","#statsModal"),this.container.querySelector("trading-card").setAttribute("data-bs-toggle","modal")}addRewardToUser(e){e.valuables.add(this.valuables),e.handleEvent(new GameEvent(GameEventType.PITCHER_CARD_TRIGGERED))}isTriggered(e){return e.eventType===this.eventType&&e.playerId===this.leagueIdNumber&&View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),e.playerId===this.leagueIdNumber&&e.eventType===this.eventType}}class FavTeamCard extends TradingCard{static restructure(e){return Object.setPrototypeOf(e,FavTeamCard.prototype),e}static generateCards(e,t){var a,s=[];for(a of e)s.push(new FavTeamCard(CardType.FAV_TEAM,a,4,8,new Valuables({greenMagic:8}),GameEventType.RUNS_SCORED));return s}static getCardType(){return CardType.FAV_TEAM}constructor(e,t,a,s,r,i){super(e,null,t.colorScheme,a,s,r,i),this.name=t.place.name+" "+t.mascot,this.cardType=CardType.FAV_TEAM,this.team=t.place.abbreviation.toUpperCase()+" "+t.mascot,this.leagueIdNumber=t.leagueIdNumber,this.colorScheme={light:t.colorScheme.light,mid:t.colorScheme.mid,dark:t.colorScheme.dark,text:"#FFFFFF"},this.profilePic=t.place.abbreviation.toUpperCase(),this.gradientrotation=.1,this.eventString="run scored",this.pastTenseEventString="scored a run!",this.container=View.createElement("span"),this.container.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} per ${this.eventString}"
            cardline2="${this.team}"
            cardline3="${this.cardType}"
            cardline4="Click for Team stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            fontsize="${18/this.profilePic.length+3+"px"}"
            fontfamily="monospace">
        </trading-card>`.trim(),this.updateWebComponent()}updateWebComponent=()=>{super.updateWebComponent(),this.container.querySelector("trading-card").setAttribute("name",this.name),this.container.querySelector("trading-card").setAttribute("cardline1",`+${this.rewardAmount} ${this.valuables?.getShadedEmoji()||""} per `+this.eventString),this.container.querySelector("trading-card").setAttribute("cardline2",this.team),this.container.querySelector("trading-card").setAttribute("cardline3",this.cardType),this.container.querySelector("trading-card").setAttribute("cardline4","Click for Team stats"),this.container.querySelector("trading-card").setAttribute("cost",this.cost.toString()),this.container.querySelector("trading-card").setAttribute("colorlight",this.colorScheme.light),this.container.querySelector("trading-card").setAttribute("colormid",this.colorScheme.mid),this.container.querySelector("trading-card").setAttribute("colordark",this.colorScheme.dark),this.container.querySelector("trading-card").setAttribute("emoji",this.profilePic),this.container.querySelector("trading-card").setAttribute("fontsize",18/this.profilePic.length+3+"px"),this.container.querySelector("trading-card").setAttribute("fontfamily","monospace"),this.container.querySelector("trading-card").setAttribute("gradientrotation",this.gradientrotation.toString()),this.container.querySelector("trading-card").setAttribute("onclick",`app.view.statsModal.update(${this.leagueIdNumber});`),this.container.querySelector("trading-card").setAttribute("data-bs-target","#statsModal"),this.container.querySelector("trading-card").setAttribute("data-bs-toggle","modal")};addRewardToUser(e){e.valuables.add(this.valuables),e.handleEvent(new GameEvent(GameEventType.FAV_TEAM_CARD_TRIGGERED))}isTriggered(e){return e.teamId===this.leagueIdNumber&&e.eventType===this.eventType&&(View.addAlert("success",`+${this.rewardAmount} ${this.valuables.getShadedEmoji()} <small> ${this.name} ${this.pastTenseEventString}</small>`,!0),!0)}render(){var e=View.createElement("span");return e.innerHTML=`
        <trading-card 
            onclick="app.view.statsModal.update(${this.leagueIdNumber});" 
            data-bs-target="#statsModal" 
            data-bs-toggle="modal"
            name="${this.name}"
            cardline1="+${this.rewardAmount} ${this.valuables.getShadedEmoji()} per ${this.eventString}"
            cardline2="${this.team}"
            cardline3="${this.cardType}"
            cardline4="Click for Team stats"
            cost="${this.cost}"
            colorlight="${this.colorScheme.light}"
            colormid="${this.colorScheme.mid}"
            colordark="${this.colorScheme.dark}"
            emoji="${this.profilePic}"
            fontsize="${18/this.profilePic.length+3+"px"}"
            fontfamily="monospace">
        </trading-card>`.trim(),e}}let PlotDeviceState={LOAD_INTRO_SCRIPT:0,INTRO_SCRIPT:1,JUDGEMENT:2,END_SCRIPT:3,END:4},crypticUnicode="⧫︎⏁⨅⩊⟅⟁⤫⤧⦸⨷⟊⏂⏇⩎⧆⟠⏞⤂⩏⧨⩰⏊⧀⩚⏁⨂⟃⤿ȴɣɮƏǂȢȹʭʚʘʓʋʅɻɸɷɮɕɅ˫˧ː⌀⌆⌇⌐⌒⌔⌕⌖⌗⌙⌠⌡⌤⌬⌭⌮⌯⌰⌱⌲⌳⌊⌋⌸⌻⌾⍋⍒⍚⍝⎎⎍⏧⏣⎲⎳⏈⏅⏂⏁⏄⎶⎓⎔⍦⎑⎊⎄⍢⍽⍿⍾⍼⍻∭∴⊨⊇∝⎛⎜⎝ ⎟ ⎬ ⎨⏚␢⏛␣├┤┴║╖╜╮╰░▒▓▘▝▤▵△▽▿◊◎◙◫◬☉☊☋☌☍☖☤♃♄♅♆♮⚀⚘⚞⚟⚭⚮⚯⚲⚳⚴⛫⚵⚶⚷⚸⚹⚺⚻⚼⛬⛮⛯⛶⛼⛻⟱⤋⥉⥏⥌⥍⥑Ⱡⱡ〄﴾﴿︗︘︴︷︸⎡⎤⎧⎨⎩⎫⎬⎭⎰⎱⏞⏟⟀⟁⟂⟃⟄⟇⟈⟉⟌⟐⟓⟔⟗⟕⟖⟘⟜⟟⟠⦡⦷⦼⧰⧸⧹⨌⫵⪥╕╗╛╝╡╢╣╫╭╮╯╰▌▍▎▏▔▚▞▀◍◯▩｟｠∏∐∰≉≮≯≢Ⅎ℧ɐɔɟʞℲ⅋ɹʎ",negativePhrases=["Awful Evil","Beyond Hope","Blasphemy","Blood Bath","Broken Hearts","Broken Spirit","Cursed Luck","Cursed","Dark Fate","Defeat","Defeated","Descent","Fallen Below","Fire Walk","Forbidden","Go Down","Incineration","Instability","Lost Glory","Lost Hope","Low Ball","Misfortune","Nullification","Shame","Sinister Odds","So Below","Solar Eclipse","Strike","Under","Underhanded","Unstable","Wanting","Wild Low","You Sink"],positivePhrases=["Ambitious","Ascension","Blessings","Champion Spirit","Clutch Performance","Diamond Dreams","Divinity","Elite Ambition","Field Of Triumph","Go Up","Golden Glove","Grand Slam","Hero Journey","Home Run","Idolized","Magic","Over","Partytime","Shining Suns","Swing Stars","The Sun","Triumphant","Victory","Winning Streak"];class PlotDevice{static restructure(e){return Object.setPrototypeOf(e,PlotDevice.prototype),e}static crypticPhrase(e){let t="";var a;for(a of HelpMe.choice(e))t+=HelpMe.choice(crypticUnicode)+HelpMe.choice(crypticUnicode)+a;return t+HelpMe.choice(crypticUnicode)+HelpMe.choice(crypticUnicode)}constructor(e){this.introScript=[],this.endScriptPositive=[],this.endScriptNegative=[],this.plotPoints=[],this.state=PlotDeviceState.LOAD_INTRO_SCRIPT}getJudgement(e){return e.users[0].getVictoryPoints()>=e.users[0].getGoal()?(this.loadEndScriptPositive(e),{username:"⚙︎⧫︎⏁⨅⩊⟅⟁⤫ ⩎⧆⟠⏞⤧⦸⨷⟊⏂⏇⤂⩏⧨⩰",colorScheme:{light:"#000",mid:"#FFD700",dark:"#FFD700",background:"#FFD700"},log:"<div style='background:#FFD700;color:black;text-align:center;'>"+PlotDevice.crypticPhrase(positivePhrases)+"</div>"}):(this.loadEndScriptNegative(e),{username:"⚙︎⧫︎⏁⨅⩊⟅⟁⤫ ⩎⧆⟠⏞⤧⦸⨷⟊⏂⏇⤂⩏⧨⩰",colorScheme:{light:"#000",mid:"#A16DC3",dark:"#A16DC3",background:"#A16DC3"},log:"<div style='background:#A16DC3;color:black;text-align:center;'>"+PlotDevice.crypticPhrase(negativePhrases)+"</div>"})}generatePosts(e,t,a){var s=[];if(Array.isArray(a))for(var r of a)s.push({username:e,colorScheme:t||null,log:r});else"string"==typeof a&&s.push({username:e,colorScheme:t||null,log:a});return s}next(e){switch(this.state){case PlotDeviceState.LOAD_INTRO_SCRIPT:this.introScript=this.introScript.flat(1/0),this.endScriptNegative=this.endScriptNegative.flat(1/0),this.endScriptPositive=this.endScriptPositive.flat(1/0),this.loadIntroScript(),this.state=PlotDeviceState.INTRO_SCRIPT;case PlotDeviceState.INTRO_SCRIPT:return 1<this.plotPoints.length||(this.state=PlotDeviceState.JUDGEMENT),this.plotPoints.shift();case PlotDeviceState.JUDGEMENT:return this.state=PlotDeviceState.END_SCRIPT,this.getJudgement(e);case PlotDeviceState.END_SCRIPT:return 1<this.plotPoints.length||(this.state=PlotDeviceState.END),this.plotPoints.shift();case PlotDeviceState.END:var t=document.getElementsByClassName("nightContinueButton");Array.from(t).forEach(e=>{e.classList.remove("hide")});break;default:console.error("Unknown state.")}}loadIntroScript(e){this.plotPoints=[...this.introScript]}loadEndScriptNegative(e){this.plotPoints=[...this.endScriptNegative]}loadEndScriptPositive(e){this.plotPoints=[...this.endScriptPositive]}}class WhirlwindA extends PlotDevice{constructor(e){super(e),this.teamPlace=e.world.league.teams[0].place.name,this.pitcherName=e.world.league.teams[0].pitcher.getName({firstName:!0,nickName:!0,lastName:!0}),this.pitcherLastName=e.world.league.teams[0].pitcher.getName({firstName:!1,nickName:!1,lastName:!0}),this.introScript=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,[HelpMe.choice(["BREAKING NEWS: League Laments Lavish Spending, Launches Leaner Logistics","BREAKING NEWS: Budget Cuts Bring Baseball Back to Basics","BREAKING NEWS: League Embraces Simpler, Savvier Baseball with Budget Cuts","BREAKING NEWS: Baseball Returns to Roots with Streamlined Spending"]),HelpMe.choice(["KERNELS CURB COSTS — The league announced new budget-saving ballpark bites today. Only un-popped popcorn will be offered at the stands!","KERNELS CURB COSTS — The league announced new money-saving snacks today. For a penny-pinching pop, un-popped popcorn is now the only option at the stands!"]),HelpMe.choice(["Fans can enjoy the excitement of popping their own kernels right in their seats. Bring your own pan, or share a campfire with the fan next to you!","Fans can savor the thrill of popping their own kernels right in their seats—just don't forget to bring your stovetop!"]),'PITCHING PLAINS PREVAIL — In a bold move to save a buck and shake things up, the traditional pitching mound has been scrapped in favor of the "pitching flat."',"Not just a money-saver on dirt, this innovation puts pitchers and batters on equal footing—literally!",HelpMe.choice(["We will keep you up-to-date as this budget crunch continues.","We will update you as the budget squeeze storms ahead.","We will keep you posted as the penny-pinching process progresses","We will update you as the cost-cutting crusade continues"]),`In other news, ${this.teamPlace} pitcher ${this.pitcherName} has reportedly taken up knitting in the locker room.`,"A new hobby, or just a way to calm nerves before a big game?",`When asked for comment, ${this.pitcherLastName} looked into the sky and whispered a single curious phrase-`])],this.endScriptNegative=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)],this.endScriptPositive=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)]}}class WhirlwindB extends PlotDevice{constructor(e){super(e),this.teamPlace=e.world.league.teams[0].place.name,this.pitcherName=e.world.league.teams[0].pitcher.getName({firstName:!0,nickName:!0,lastName:!0}),this.pitcherLastName=e.world.league.teams[0].pitcher.getName({firstName:!1,nickName:!1,lastName:!0}),this.introScript=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,[HelpMe.choice(["BREAKING NEWS: Continuing Budget Cuts Revitalize Baseball, Fans Relish Return to Simplicity","BREAKING NEWS: Big Cuts Continue—Baseball's Budget Gets Brutal Chop","BREAKING NEWS: Baseball Budget Cuts Continue to Batter League"]),HelpMe.choice([`NOSTALGIC NIGHT GAMES — Forget the floodlights, it's time for "vintage torchlight" to shine!`,'NOSTALGIC NIGHT GAMES — Say farewell to glaring stadium lights, and hello to the cozy charm of "vintage torchlight"!']),"Players will navigate the field by moonlight and the flicker of flaming torches, making every long fly ball an un-electrifying adventure.","MASCOT MERGER MASTERPIECE — The league has decided to streamline its mascot efforts with a single, all-encompassing character. Why bother with multiple mascots when one can do it all?","Players and fans will now be thrilled by the league's latest creation: a bizarre half-bird, half-bear with the head of a donkey, a trumpet nose, and the legs of a kangaroo.",'This curious creature, named "Featherpaws McBray," promises to captivate with its signature hops and cheerful honks.',"I asked one young fan how they felt about the new league mascot and they replied-"])],this.endScriptNegative=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,HelpMe.choice(["We will keep you current as this cost-cutting crunch continues.","We will track this belt-tightening turmoil as it continues to unfold."]),`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)],this.endScriptPositive=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)]}}class WhirlwindC extends PlotDevice{constructor(e){super(e),this.teamPlace=e.world.league.teams[0].place.name,this.pitcherName=e.world.league.teams[0].pitcher.getName({firstName:!0,nickName:!0,lastName:!0}),this.pitcherLastName=e.world.league.teams[0].pitcher.getName({firstName:!1,nickName:!1,lastName:!0}),this.introScript=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,[HelpMe.choice(["BREAKING NEWS: Continued Cost-Cutting Revives Retro Baseball for Fans","BREAKING NEWS: League Continues to Cut Costs, Fans Cheer Bare-Bones Baseball","BREAKING NEWS: League's Leaner Look Lingers as Budget Cuts Persist"]),"ICEBOX INITIATIVE — The league has announced that all refrigerators and iceboxes at the stadium will be unplugged overnight to conserve energy.","Hot dogs bring the heat, while drinks take it easy with a relaxed, lukewarm charm.",'SCALED-DOWN STRIKE ZONE — As a money-saving measure, the strike zone has been reduced and will now be referred to as the "strike subdivision."',"Fans are excited about the new fun-sized boundary, which is already sparking lively debates.",HelpMe.choice(["We wiil follow the fiscal fallout as this budget battle brews.","We will follow this story as the fiscal frugality fuels further cuts."]),"In a follow-up story, beloved league mascot Featherpaws McBray was caught distributing bootleg popcorn to fans at the game.","When asked for comment, Featherpaws McBray refused to speak and instead pointed to a series of hidden, arcane markings on the concession stand-"])],this.endScriptNegative=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)],this.endScriptPositive=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,`That's all for now, ladies and gents! Stay tuned for more twists, turns, and terrific tales from the world of baseball—this is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()} signing off!`)]}}class WhirlwindD extends PlotDevice{constructor(e){super(e),this.introScript=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,[`This is ${e.world.newsNetwork.getReporterName()} for ${e.world.newsNetwork.getNewsAbbreviation()}, ${e.world.newsNetwork.getNewsName()}.`+" "+HelpMe.choice([`Reporting live from lovely ${e.world.getGameDetails()[0].homeTeamPlace.name} tonight.`,`Reporting live from beautiful ${e.world.getGameDetails()[0].homeTeamPlace.name} tonight.`]),HelpMe.choice(["Following the final flourish of the game, the Commissioner of Baseball called for an unscheduled press conference. The tension is thick, the mood murky.","After the conclusion of the game, the Commissioner of Baseball announced an unscheduled press conference. The atmosphere is tense and uncertain."]),HelpMe.choice(["Dozens of players, staffers, and league luminaries have gathered in the press room. Concern creeps amongst the crowd of competitors.","Dozens of players, staff, and league officials have assembled in the press room. Worry lingers among the crowd."])+" "+HelpMe.choice(["The Commissioner is striding to the stage, stepping into the spotlight, and ready to speak.","The Commissioner is making his way to the stage, stepping into the spotlight, ready to address the room."])]),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["Alright, folks. "+HelpMe.choice(["That was fun.","Wow! What a day!","Baseball baseball baseball. Am I right?","Is it just me or did today simply fly by!","Gosh. Now I know why they call baseball 'The Beautiful Game' ","As we say in baseball... 'everybody huddle up' ","These are exciting times","Well, that was a home run of a day, wasn't it?","Phew! What a game-changer of a day.","Wow, today felt like running bases non-stop. Who's with me?","Before we start, does anyone have good news?","Did anyone see that game earlier?","How about this weather? Weird right?","Should we get started?","Let's see... light banter... Anybody into jazz? Any jazz fans in the house? No?","Does anyone have any burning questions before we dive in? No?","Anyone want to volunteer some good news before we begin? No?","Can someone remind me why we're in the baseball business? No?","Did someone give me a double-shot in my coffee... because I feel wired!","Is it just me or do we need so more coffee?","*taps microphone* Is this thing ONLINE?","*taps microphone* Can you hear me out there?","*taps microphone* Testing, testing, 1-2-3.","*taps microphone* Hello hello","*taps microphone* ECHO!!! Echo!! Echo! echo","*taps microphone* Is there an echo in here, or is it just static?","Let's do this.","Let's get down to business.","Here we go again.","Everyone...","Hope you're ready for this one.","Here's hoping this is productive.","Let's keep this pain to a minimum, shall we?","Let's not waste any more time.","Let's make this quick.","Let's jump right in.","Let's see... Nullification. Incineration.","Okay. Welcome back.","So... let's get started, I guess.","Okay, folks, settle in.","Let's see how this goes.","We step up to the plate and here's the pitch...","Step up to the plate. Here's the pitch.","We gotta get started.","Something's brewing. And it's not coffee.","Looks like we're in the bottom of the inning.","Well, I assume we all know why we're here... I hope.","Buckle up. This meeting might be a bumpy ride.","Let's try to keep this short.","Here's a weather forecast. There's a storm brewing.","Let's dive right into the chaos, shall we?","Let's dive in and hope this doesn't turn into a disaster."]),HelpMe.choice(["We're shutting this league down. We're through.","It's over. We're shutting this league down.","We're shutting this league down. This is the end.","Well, let's get this over with. We're shutting this league down.","We're done here. We're shutting this league down."])]),this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,"BREAKING: io League Baseball Cancels Competition, Calls It Quits."),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,"The cutbacks aren't working. We're almost out of money, so... "+HelpMe.choice(["you're all fired.","your services are no longer required. Don't let the door hit you on the way out. You're all fired.","consider this your final curtain call. Take a bow and exit stage left. You're all fired.","we're downsizing... by 100%. Spoiler alert: You didn't make the cut. You're all fired.","effective immediately, you're being relieved of your duties. You're all fired.","the league's moving in a new direction. We're selling everything for scrap. You're all fired.","consider this your permanent vacation notice. Enjoy it. You're all fired.","let's just say... we're decluttering the office. EVERYTHING must go. You're all fired.","you've been reassigned. Your job title is now: unemployed. You're all fired."])),this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["BREAKING BULLETIN: Commissioner Hurls Hardball, Cancels League, Cuts Careers Cold.",HelpMe.choice(["Gasps gripped the gathered group at the grim proclamation.","Gasps seized the gathered crowd at the grim announcement."])+" "+HelpMe.choice(["Players and personnel are pained, paralyzed, and predictably perturbed.","Players and staff are shaken, frozen in place, and understandably upset."])]),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,[HelpMe.choice(["The current business model simply isn't sustainable.","We're burning through our seed money. Once that's gone, no more sunflower seeds.","Finance department is a literal black hole","This job pays peanuts compared to other industries.","Hope I don't sound too heavy-handed, but the league's a sinking ship. We're too dense.","We're swimming in shark-infested waters","We're bleeding money faster than we can make it.","It's like pulling teeth trying to get anything done around here. I LOVE pulling teeth, but it's just not a long-term solution.","This place feels more like a desert than a business some days."])+" "+HelpMe.choice(["Look on the bright side. Finding a new job can be fun!","Look on the bright side. Unemployment might suit you better.","Look on the bright side. We might be able to flee the country before the debt collectors get here.","It's not personal. It's just business and you're all bad at business.","Without your job, you'll have more free time now.","Don't be sad. Not everyone is cut out for greatness.","Think of this as a learning experience: don't disappoint your next boss.","Well, we all saw this coming, didn't we?","I'm doing you a favor. You should be thanking me for this wake-up call.","Chin up! It's not like you were making a huge impact here anyway.","Good luck out there. You're going to need it. This is a tough job market."]),HelpMe.choice(["Our expansion strategy is about as effective as a fish trying to swim upstream.","No new growth or expansion. Our only area of expansion is our debts.","No new growth or expansion. The magic is gone, folks.","No growth or expansion. I wouldn't blame the investors if they jumped ship.","No growth or expansion. Some days it feels like all the blood has drained from this place."])+" "+HelpMe.choice(["The management doesn't trust any of you anymore. Who can blame them?","You've burned through so many managers. Why? What's your problem with management?","The budget is tight because you wasted too much time fighting management instead of doing your job.","If you think fighting with the management will save this league, you've been misled."]),HelpMe.choice(["You've missed deadlines because you lack discipline.","You act like discipline isn't needed here.","Your lack of discipline is why we're always cleaning up the same messes.","You have no discipline, this league is just a collection of individual excuses.","Discipline starts with accountability, and accountability starts with you.","The lack of discipline here isn't a surprise, considering how little effort you put in."]),HelpMe.choice(["If we act quickly, we can sell off some junk and make a little money.","Alright, enough whining. We can sell off some junk and make a little money.","Forget the mistakes. Let's pivot, sell off some junk, and make a little money.","We can't change the past, but we can sell off some junk and make a little money.","Let's put our focus on quick wins. Let's sell off some junk and make a little money.","Stop the blame game. Let's pivot, sell off some junk, and make a little money."]),HelpMe.choice(["We can sell these fax machines.","We can sell these old coffee cups.","We can sell those flood pumps.","We can sell the solar panels.","We can sell the salmon cannons."])+" "+HelpMe.choice(["We can sell all the leftover concessions.","Stale popcorn is still good, right?","We can sell these bags of peanuts.","There's that huge bin that's full of stolen shoes. It's a nice bin. If we empty it out I bet somebody will buy that bin.","We can auction off that whiteboard that no one's used since making those YouTube videos."])+" "+HelpMe.choice(["Does anyone want to buy a bucket of chum?","Anyone want to buy a wet pretzel?","Does anyone want to buy some cold fries?","Anyone want to buy a some snake oil?","Does anyone want to buy a lootcrate?","Anyone want to buy a square sun?","Does anyone want to buy a news ticker?","Anyone want to buy a microphone?","Does anyone want to buy a vault?","Anyone want to buy a forbidden book?"]),HelpMe.choice(["Everything must go!","Make an offer!","Who wants to make a deal?","Prices are negotiable—always.","I'll cut you a deal if you act fast!","Cash talks. Let's make it happen.","Don't wait. This offer won't last forever!"])+" "+HelpMe.choice(["As my old Boss used to say... 'Profits!' ","As my old Boss used to say... 'Sometimes the baseball business isn't easily blexplained' ","As my old Boss used to say... 'Please don't incinerate me' ","As my old Boss used to say... 'It's called the baseball BUSINESS, not baseball friend-ness' "]),HelpMe.choice(["Lol. What was I saying? Oh yeah...","Right? Anyway as I was saying...","Ha. So as I was saying...","Haha. In conclusion...","Hahaha. In summary..."]),HelpMe.choice(["We're shutting this league down. You're all fired. io League Baseball is... over? What is that?","It's over. You're all fired. io League Baseball is... through? What is that?","This is the end. You're all fired. io League Baseball is... over? Who is that?","We're done here. You're all fired. io League Baseball is... through? Who is that?","The season is over. You're all fired. io League Baseball is... done? What's happening?","This league is through. You're all fired. io League Baseball is... done? What's happening?","You're all fired. The season is over. io League Baseball is... done? What is that?"])]),this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["Something strange is stirring, folks. The commissioner stopped suddenly as a foul, foreboding wind whipped wildly through the press room.","The ominous occurrence rattled the windows, sending the American flags on the stage flailing in a frenzied flurry. The air was filled with an eerie echo like a chilling chorus of cries, causing reporters to clutch their coats and hats.","The doors slammed shut with a deafening din, silencing the scene and leaving everyone frozen in fear. A mysterious, melodic voice murmured..."])],this.endScriptNegative=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,"The lights flickering faintly, followed by a heavy hush. After a brief, breathless beat, the Commissioner continued."),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["That strange... uh... indoor wind storm... just gave me a brilliant idea. We have insurance right?!","H.R. is telling me that insurance claims were never filed, because our insurance does NOT cover some Acts Of Gods nonsense? ","This is amazing! I'll handle it. I'm handling it I've got a guaranteed new revenue stream, folks. You'll see!","Consider yourselves un-fired. I've saved the league once again. I just keep impressing myself!","The league is not shutting down after all. Play ball!"]),this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["UPDATE: Curveball Commissioner Changes Course, Un-Cancels League, Announces New Insurance Subterfuge Strategy."])],this.endScriptPositive=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,"The lights flickering faintly, followed by a heavy hush. After a brief, breathless beat, the Commissioner continued."),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["That strange... uh... indoor wind storm... just gave me a brilliant idea. We have insurance right?!","H.R. is telling me that insurance claims were never filed, because our insurance does NOT cover some Acts Of Gods nonsense? ","This is amazing! I'll handle it. I'm handling it I've got a guaranteed new revenue stream, folks. You'll see!","Consider yourselves un-fired. I've saved the league once again. I just keep impressing myself!","The league is not shutting down after all. Play ball!"]),this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["UPDATE: Curveball Commissioner Changes Course, Un-Cancels League, Announces New Insurance Subterfuge Strategy."])]}}class WhirlwindE extends PlotDevice{constructor(e){super(e),this.insuranceAdjusterFirstName=Name.create_first_name(),this.insuranceAdjusterLastName=Name.create_last_name(),this.insuranceSubname=this.insuranceAdjusterFirstName.substring(0,Math.ceil(this.insuranceAdjusterFirstName.length/2)),this.insuranceAdjusterFullName=this.insuranceAdjusterFirstName+" "+this.insuranceAdjusterLastName+", insurance claims agent",this.introScript=[this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,[`So, ${this.insuranceSubname}, as you can see, this is just your classic ballpark. Great American pastime and all that.`,"Our insurance does NOT cover Acts of Gods. Now, we've had a few run-of-the-mill hiccups, but nothing... absolutely nothing that would qualify as Acts of Gods. Just normal insurable stuff."]),this.generatePosts(this.insuranceAdjusterFullName,null,[`Please, call me ${this.insuranceAdjusterFirstName}. Run-of-the-mill hiccups, huh? And what are those? They look like— dare I say— massive peanut shells? Is someone trapped in there?`]),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["No, no, no, just an, uh... mascot's costume. Sometimes people have trouble unzipping the costume and have to be pecked free by birds.",`But that's just a normal workplace hazard. Like tripping over a loose base... falling into a secret tunnel. Definitely insurable, ${this.insuranceSubname}.`]),this.generatePosts(this.insuranceAdjusterFullName,null,["Right. And the weather? I read that it turned into- Salmon? Also, the paperwork mentioned water damage from a flood of Immateria?","What exactly is Immateria? Sounds like something out of a science fiction novel. Possibly supernatural Acts of Gods?"]),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["Ah, yes, the Salmon skies! Such a beautiful thing to witness the migration flight. Entirely natural.","Immateria... well, it's just, uh, a typo! That should have said, 'A surge of inn material.'",`You know... material... from an inn... that washed through the stadium. Beds, tables, mini-fridges... nothing major, ${this.insuranceSubname}.`]),this.generatePosts(this.insuranceAdjusterFullName,null,"When you put it like that, it seems mostly straight-forward."),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["Of course! Nothing divine about it! It's all part of the game's unique culture.","The crack of the bat! The roar of the crowd! The rogue umpire incinerating a... a... sudden wind storm?!"]),this.generatePosts(this.insuranceAdjusterFullName,null,"What in the world—?! No! Tornado?! No, no, NO!!"),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,[`WOAH LOOK AT THE WIND DAMAGE! WOW! WHAT A WHIRLWIND! ARE YOU SEEING THIS ${this.insuranceSubname.toUpperCase()}?!`,`HOLD ON ${this.insuranceSubname.toUpperCase()}! CAN'T HAVE YOU GETTING BLOWN AWAY BEFORE YOU SIGN THAT INSURANCE CHECK!`])],this.endScriptPositive=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["WEATHER REPORT: Whirling Winds Return. What's Causing The Curious Current? Weather Watchers Wonder What's at Work"]),this.generatePosts(this.insuranceAdjusterFullName,null,["I've never seen such a sudden-intense windstorm! If you hadn't pulled me into the dugout- I- I- ","You know what? I WILL approve your claim. But next time, can we please-PLEASE-have this conversion over the phone?"])],this.endScriptNegative=[this.generatePosts(e.world.newsNetwork.getFullName(),e.world.newsNetwork.colorScheme,["WEATHER REPORT: Whirling Winds Return. What's Causing The Curious Current? Weather Watchers Wonder What's at Work"]),this.generatePosts(e.world.league.getCommissionerFullName(),e.world.league.colorScheme,["Well, shoot. I will have to give the insurance company a call. Let them know they'll need to send another insurance agent.",`HANG IN THERE ${this.insuranceSubname.toUpperCase()}! I'M SURE THIS TWISTER IS ONLY TEMPORARY. YOU'LL BE ON THE GROUND SOON!`,`They just keep spinning around up there... YOU'RE DOING GREAT, ${this.insuranceSubname.toUpperCase()}!`,"We might need to purchase additional insurance...",`REMEMBER ${this.insuranceSubname.toUpperCase()}... THIS IS ALL PERFECTLY NATURAL!`])]}}let UnlockableUpgradeType={THE_BOAR:"The Boar",THE_DEVILFISH:"The Devilfish",THE_FLIGHTLESS_FOWL:"The Flightless Fowl",THE_FOUNTAIN:"The Fountain",THE_POISON_APPLE:"The Poison Apple",THE_ILLUSIONIST:"The Illusionist"};class Upgrade{static restructure(e){switch(e.name){case"The Boar":Object.setPrototypeOf(e,TheBoar.prototype);break;case"The Devilfish":Object.setPrototypeOf(e,TheDevilfish.prototype);break;case"The Flightless Fowl":Object.setPrototypeOf(e,TheFlightlessFowl.prototype);break;case"The Fountain":Object.setPrototypeOf(e,TheFountain.prototype);break;case"The Illusionist":Object.setPrototypeOf(e,TheIllusionist.prototype);break;case"The Occult Hand":Object.setPrototypeOf(e,TheOccultHand.prototype);break;case"The Poison Apple":Object.setPrototypeOf(e,ThePoisonApple.prototype)}return e}static prices={"The Boar":{base:1,exponent:0},"The Devilfish":{base:4,exponent:0,moneyToMagicRatio:7},"The Flightless Fowl":{base:5,exponent:2},"The Fountain":{base:0,exponent:1},"The Illusionist":{base:0,exponent:1},"The Occult Hand":{base:10,exponent:0},"The Poison Apple":{base:4,exponent:0,moneyToMagicRatio:7}};static generateCards(){return null}constructor(){this.cost=999}addUpgradeToUser(e){throw new Error("child classes must implement addUpgradeToUser method")}getCost(){return this.cost}isAffordable(e){return this.cost<=e.valuables.money}render(){throw new Error("child classes must implement render method")}}class TheBoar extends Upgrade{static generateCards(e,t){return new TheBoar}constructor(){super(),this.name="The Boar",this.cost=2*Upgrade.prices[this.name].exponent+Upgrade.prices[this.name].base,this.reward=Math.min(Math.pow(2,Upgrade.prices[this.name].exponent),30)}addUpgradeToUser(e){var t,a;e.valuables.money>=this.cost&&(t=e.valuables.money,e.valuables.money-=this.cost,a=e.valuables.money,e.valuables.money+=this.reward,e.manager.notify(e),View.addAlert("purple",`
                -${this.cost}<span class="noto">🪙</span> Money, +${this.reward}<span class="noto">🪙</span> Money<br>
                ${t}<span class="noto">🪙</span> &rarr; ${a}<span class="noto">🪙</span> &rarr; ${e.valuables.money}<span class="noto">🪙</span>
                `,!1),Upgrade.prices[this.name].exponent++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Boar"
                image="boar.png"
                cardline1="Defiance, Persistence, Feral Resistance"
                cardline2="Spend ${this.cost}<span class='noto'>🪙</span>, Earn ${this.reward}<span class='noto'>🪙</span>"
                cardline3="Cast Thy Pearls Before Swine"
                cardline4="Boarish Capitalism"
                cost="-${this.cost}"
                height="145"
                width="145"
            ></upgrade-card>
        `,e}}class TheFountain extends Upgrade{static generateCards(e,t){return new TheFountain}constructor(){super(),this.name="The Fountain",this.cost=Upgrade.prices[this.name].exponent}addUpgradeToUser(e){var t,a;e.valuables.money>=this.cost&&(t=e.valuables.money,e.valuables.money-=this.cost,this.cost%3==0?(a=e.valuables.lives,e.valuables.lives++,View.addAlert("purple",`
                    +1<span class="noto">🩸</span> Life<br>
                    ${a}<span class='noto'>🩸</span> &rarr; ${e.valuables.lives}<span class='noto'>🩸</span>
                    `,!1)):View.addAlert("purple",`
                    -${this.cost}<span class="noto">🪙</span> Money<br>
                    ${t}<span class="noto">🪙</span> &rarr; ${e.valuables.money}<span class="noto">🪙</span>
                    `,!0),e.manager.notify(e),Upgrade.prices[this.name].exponent++)}render(){var e=View.createElement("div",null,"col");return this.cost%3==0?e.innerHTML=`
            <upgrade-card
                name="The Fountain"
                image="fountain.png"
                cardline1="Healing, Grace, Cold Embrace"
                cardline2="Gain +<span class='noto'>🩸</span> Life"
                cardline3="Health For Thy Wealth"
                cardline4="Lives Go Up"
                cost="-${this.cost}"
                height="170"
                width="170"
            ></upgrade-card>
        `:e.innerHTML=`
            <upgrade-card
                name="The Fountain"
                image="fountain.png"
                cardline1="Patience, Yearning, Waters Churning"
                cardline2="Make A Wish. -${this.cost}<span class='noto'>🪙</span> Money"
                cardline3="Waste Not, Want!"
                cardline4="Money Go Down"
                cost="-${this.cost}"
                height="170"
                width="170"
            ></upgrade-card>
        `,e}}class TheDevilfish extends Upgrade{static generateCards(e,t){return new TheDevilfish}constructor(){super(),this.name="The Devilfish",this.cost=Upgrade.prices[this.name].basePrice+Math.pow(2,Upgrade.prices[this.name].exponent),this.blueMagicBoost=this.cost*Upgrade.prices[this.name].moneyToMagicRatio}addUpgradeToUser(e){var t;e.valuables.money>=this.cost&&(e.valuables.money-=this.cost,t=e.valuables.blueMagic,e.valuables.blueMagic+=this.blueMagicBoost,e.manager.notify(e),View.addAlert("purple",`
                +${this.blueMagicBoost}<span class='noto'>💧</span> Blue Magic<br>
                ${t}<span class='noto'>💧</span> &rarr; ${e.valuables.blueMagic}<span class='noto'>💧</span>
                `,!1),Upgrade.prices[this.name].exponent++,Upgrade.prices[this.name].moneyToMagicRatio++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Devilfish"
                image="devilfish.png"
                cardline1="Persuasion, Evasion, Liquidation"
                cardline2="+${this.blueMagicBoost}<span class='noto'>💧</span> Blue Magic"
                cardline3="In Gods Ye Trust"
                cardline4="Numbers Go Up"
                cost="-${this.cost}"
                height="140"
                width="140"
            ></upgrade-card>
        `,e}}class ThePoisonApple extends Upgrade{static generateCards(e,t){return new ThePoisonApple}constructor(){super(),this.name="The Poison Apple",this.cost=Upgrade.prices[this.name].base+Math.pow(2,Upgrade.prices[this.name].exponent),this.greenMagicBoost=this.cost*Upgrade.prices[this.name].moneyToMagicRatio}addUpgradeToUser(e){var t;e.valuables.money>=this.cost&&(e.valuables.money-=this.cost,t=e.valuables.greenMagic,e.valuables.greenMagic+=this.greenMagicBoost,e.manager.notify(e),View.addAlert("purple",`
                +${this.greenMagicBoost}<span class='noto'>🌵</span> Green Magic<br>
                ${t}<span class='noto'>🌵</span> &rarr; ${e.valuables.greenMagic}<span class='noto'>🌵</span>
                `,!1),Upgrade.prices[this.name].exponent++,Upgrade.prices[this.name].moneyToMagicRatio++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Poison Apple"
                image="poisonApple.png"
                cardline1="Temptation, Corruption, Destruction"
                cardline2="+${this.greenMagicBoost}<span class='noto'>🌵</span> Green Magic"
                cardline3="Poisons Thee Well"
                cardline4="Numbers Go Up"
                cost="-${this.cost}"
                height="160"
                width="145"
            ></upgrade-card>
        `,e}}class TheFlightlessFowl extends Upgrade{static generateCards(e,t){return new TheFlightlessFowl}constructor(){super(),this.name="The Flightless Fowl",this.cost=Upgrade.prices[this.name].base+Math.pow(2,Upgrade.prices[this.name].exponent)}addUpgradeToUser(e){var t;e.valuables.money>=this.cost&&(e.valuables.money-=this.cost,t=e.level,e.level-=2,e.manager.notify(e),View.addAlert("purple",`
                -2<span class='noto'>🚀</span> Levels<br>
                ${t}<span class='noto'>🚀</span> &rarr; ${e.level}<span class='noto'>🚀</span>
                `,!1),Upgrade.prices[this.name].exponent++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Flightless Fowl"
                image="dodo.png"
                cardline1="Slothfulness, Deviation, Self-Limitation"
                cardline2="Retreat -2<span class='noto'>🚀</span> Levels"
                cardline3="Embrace Thy Extinction"
                cardline4="Numbers Go Down"
                cost="-${this.cost}"
                height="130"
                width="125"
            ></upgrade-card>
        `,e}}class TheOccultHand extends Upgrade{static generateCards(e,t){return new TheOccultHand}constructor(){super(),this.name="The Occult Hand",this.cost=Upgrade.prices[this.name].base+Math.pow(2,Upgrade.prices[this.name].exponent)}addUpgradeToUser(e){var t;e.valuables.money>=this.cost&&(e.valuables.money-=this.cost,t=e.maxCards,e.maxCards++,e.manager.notify(e),View.addAlert("purple",`
                As If Moved by an Occult Hand, Maximum Cards Increased!<br>
                ${t} <span class='noto'>🃏</span> &rarr; ${e.maxCards} <span class='noto'>🃏</span>
                `,!1),Upgrade.prices[this.name].exponent++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Occult Hand"
                image="skeletonHand.png"
                cardline1="Greed, Aspiration, Mystic Manipulation"
                cardline2="Hold More <span class='noto'>🃏</span> Cards"
                cardline3="Hand Over Thy Money"
                cardline4="Cards Go Up"
                cost="-${this.cost}"
                height="150"
                width="100"
            ></upgrade-card>
        `,e}}class TheIllusionist extends Upgrade{static generateCards(e,t){return new TheIllusionist}constructor(){super(),this.name="The Illusionist",this.cost=Math.ceil(Upgrade.prices[this.name].exponent/2)}addUpgradeToUser(e){var t;e.valuables.money>=this.cost&&(t=e.valuables.money,e.valuables.money-=this.cost,View.addAlert("purple",`
                -${this.cost}<span class="noto">🪙</span> Money<br>
                ${t}<span class="noto">🪙</span> &rarr; ${e.valuables.money}<span class="noto">🪙</span>
                `,!0),e.manager.notify(e),Upgrade.prices[this.name].exponent++)}render(){var e=View.createElement("div",null,"col");return e.innerHTML=`
            <upgrade-card
                name="The Illusionist"
                image="illusionist.png"
                cardline1="Secrecy, Deception, Unseen Connections"
                cardline2="Does Nothing?"
                cardline3="Make Thy Money Disappear"
                cardline4="The Pledge, The Turn"
                cost="-${this.cost}"
                height="170"
                width="170"
            ></upgrade-card>
        `,e}}class User{static restructure(t){var a=new User;a.name=t.name,a.hasClickedUserIcon=t.hasClickedUserIcon,a.level=t.level,a.valuables=Valuables.restructure(t.valuables),a.character=t.character;for(let e=0;e<t.cards.length;e++)a.cards[e]=TradingCard.restructure(t.cards[e]);return a.maxCards=t.maxCards,a.cardsPurchased=t.cardsPurchased,a.upgradesPurchased=t.upgradesPurchased,a.favoriteSpeed=t.favoriteSpeed,a.manager=EventManager.restructure(t.manager),a.messageFeed=t.messageFeed,a.hasLost=t.hasLost,a.hasWon=t.hasWon,a}constructor(e){this.name=e,this.hasClickedUserIcon=!1,this.level=0,this.valuables=new Valuables({money:30,redMagic:1,greenMagic:13,blueMagic:12,lives:5}),this.character={face:{emoji:"😀",x:10,y:12,scale:14},hat:{emoji:"🎩",x:10,y:3,scale:4},arms:{emoji:"✋🤚",x:10,y:20,scale:4},shirt:{emoji:"👕",x:10,y:20,scale:6},bottom:{emoji:"👖",x:10,y:26,scale:6},accessory:{emoji:"⚾",x:15,y:26,scale:7}},this.cards=[],this.maxCards=5,this.cardsPurchased=0,this.upgradesPurchased=0,this.favoriteSpeed=4e3,this.manager=new EventManager,this.messageFeed=[],this.hasLost=!1,this.hasWon=!1}addCard(e,t){this.hasRoomForThisCard(e)&&(this.cards.push(e),-1<e.leagueIdNumber)&&t.manager.subscribe(this.handleEvent),this.manager.notify(this)}addMessage(e){var t=(new Date).toLocaleTimeString();this.messageFeed.push(t+": "+e),this.manager.notify(this)}addValuables(e){this.valuables.add(e),this.manager.notify(this)}get clickedUserIcon(){return this.hasClickedUserIcon}getCardsCount(){let t=0;for(let e=0;e<this.cards.length;e++)null!=this.cards[e]&&t++;return t}getGoal(){return(this.level+1)*(this.level+1)*5e3+5e3*(this.level+1)+this.level*this.level*4e3+1e3*this.level}getReward(){var e=120/(Math.max(this.level,0)+2);return 1+Math.ceil(e*(Math.pow(this.getGoal(),3)/(Math.abs(Math.pow(this.getGoal(),3)-Math.pow(this.getVictoryPoints(),3))+Math.pow(this.getGoal(),3))))}getVictoryPoints(){return this.valuables.greenMagic*this.valuables.redMagic*this.valuables.blueMagic}handleEvent=t=>{for(let e=0;e<this.cards.length;e++)null!=this.cards[e]&&this.cards[e].isTriggered(t)&&this.cards[e].addRewardToUser(this)};doesNotHaveCard=e=>{for(var t of this.cards)if(t.equals(e))return!1;return!0};hasRoomForThisCard(e){return this.getCardsCount()<this.maxCards}removeNullCards(){this.cards=this.cards.filter(e=>e)}sellCard(e){if(null==e)throw new Error("null index");var t=this.cards[e];null!=t&&(this.cards[e]=null,this.valuables.money+=t.sellValue,this.manager.notify(this))}setCharacter=e=>{this.character.hat.emoji=hats[parseInt(e.hatStyle.value)%hats.length],this.character.hat.x=parseInt(e.hatX.value),this.character.hat.y=parseInt(e.hatY.value),this.character.hat.scale=parseFloat(e.hatScale.value),this.character.face.emoji=faces[parseInt(e.faceStyle.value)%faces.length],this.character.face.x=parseInt(e.faceX.value),this.character.face.y=parseInt(e.faceY.value),this.character.face.scale=parseFloat(e.faceScale.value),this.character.shirt.emoji=shirts[parseInt(e.shirtStyle.value)%shirts.length],this.character.shirt.x=parseInt(e.shirtX.value),this.character.shirt.y=parseInt(e.shirtY.value),this.character.shirt.scale=parseFloat(e.shirtScale.value),this.character.arms.x=parseInt(e.shirtX.value),this.character.arms.y=parseInt(e.shirtY.value),this.character.arms.scale=parseFloat(e.shirtScale.value-2),this.character.bottom.emoji=bottoms[parseInt(e.bottomStyle.value)%bottoms.length],this.character.bottom.x=parseInt(e.bottomX.value),this.character.bottom.y=parseInt(e.bottomY.value),this.character.bottom.scale=parseFloat(e.bottomScale.value),this.character.accessory.emoji=accessories[parseInt(e.accessoryStyle.value)%accessories.length],this.character.accessory.x=parseInt(e.accessoryX.value),this.character.accessory.y=parseInt(e.accessoryY.value),this.character.accessory.scale=parseFloat(e.accessoryScale.value),this.manager.notify(this)};set clickedUserIcon(e){this.hasClickedUserIcon=e}}class NewsTicker{static restructure(e){return Object.setPrototypeOf(e,NewsTicker.prototype),e}constructor(){this.favoriteNumber=Model.rng.random(),this.counter=0,this.items=["WHERE HAVE YOU BEEN?"],this.breakingNewsItems=[],this.parentDiv,this.slideDivs,this.teamNames=[]}static demoText=["<span class='noto'>🚨</span> PLEASE SUPPORT US ON PATREON <span class='noto'>🚨</span>","<span class='noto'>🚨</span> WE ARE NOW DEMONSTRATING THE DEMO VERSION OF ioBASEBALL <span class='noto'>🚨</span>","<span class='noto'>🚨</span> DEMO VERSION * PLEASE SUPPORT US ON PATREON * YOUR SUPPORT WILL ALLOW US TO CONTINUE <span class='noto'>🚨</span>"];static tickerMessages=["EVERYTHING YOU SHOULD KNOW, MORE OR LESS","A CALM VOICE OF REASON IN A CHAOTIC WORLD","ACCEPT NO IMITATIONS","DON'T BLAME THE TICKER IF YOU MISSED IT","WE JUST REPORT IT, DON'T SHOOT THE MESSENGER","MOVING TO THE LEFT","FOR WHEN YOU NEED TO KNOW BUT WISH YOU DIDN'T","IF IT MATTERS TO YOU, IT PROBABLY MATTERS TO US","INFORMATION AT A COMFORTABLE PACE","LUXURY INFO YOU DIDN'T KNOW YOU NEEDED","CONCISE","NOT MISSPELT","JUST ONE INSIGHT AFTER ANOTHER","THE PERFECT BALANCE OF SPEED AND PRECISION","ACCURATE MORE OFTEN THAN NOT","SOMETIMES WE'RE HERE JUST TO BRIGHTEN YOUR DAY","YOUR COMPLETE SOURCE FOR INFORMATION, IN A NUTSHELL","WE ARE BACK!","I AM THE NEW TICKER","NOT A BELLY ITCHER","BATTER UP","RECOMMENDED BY 1 OUT OF 10 PSYCHIATRIC THERAPISTS","TELL YOUR THERAPIST WE SENT YOU","A GAME WITH SIMPLE RULES AND DEVASTATING CONSEQUENCES","A FRIENDLY GAME WITH A 100% DEATH GUARANTEE","RULES THAT ARE EASY TO LEARN. CARNAGE THAT IS IMPOSSIBLE TO FORGET","A CHARMING ROMP THROUGH DESTRUCTION AND DESPAIR","I REMAIN UNCHANGED","WHO'S ON FIRST BASE? PRIDE. SECOND BASE IS GREED. THIRD BASE WRATH. SLOTH IS ON THE BENCH","WE NEED A PITCHER","NO BAT? NO GLOVE? NO WORRY!","STRIKE OUT? THAT'S JUST FREE BAT SWINGING PRACTICE","OUT OF BOUNDS? WE CALL THAT CREATIVE PROBLEM SOLVING","NO RULES? NO UMPIRES? NO STRESS!","I ASSUME YOU SIGNED THE NON-DISCLOSURE AGREEMENT, RIGHT?","YOU READ THE END-USER LICENSE AGREEMENT, RIGHT?","ALL RAGGED ARRAYS WILL BE INFINITELY FLATTENED","NINE-TIME ACADEMY AWARD WATCHING NEWS TICKER","YOU ARE IMPORTANT AND YOU ARE NOT ALONE","REMEMBER TO PILLAGE FIRST AND THEN BURN","LEAVE NO STONE UNTURNED, LEAVE NO BRIDGES UNBURNED","EVERY STEP TO HOME PLATE COULD BE YOUR LAST","YOU CAN RUN THE BASES, BUT YOU CAN'T OUTRUN FATE","BEWARE THE FINAL INNING"];static shopSpecific=["BOY, YOU'RE RICH","BROWSE OUR LATEST DEALS","BUY NOW OR REGRET IT FOREVER","BUY NOW, THINK LATER","BUY SOMETHIN' WILL YA!","CAPITALISM NEVER SLEEPS, AND NEITHER DO I","CAPITALISTS WILL KILL US ALL. HAPPY SHOPPING!","CATCH THESE PRICES BEFORE THEY'RE GONE!","CONSUME. OBEY. REPEAT. ","CONVENIENTLY PRICED FOR MAXIMUM GUILT","DON'T PITCH A FIT—JUST PAY UP!","DON'T STRIKE OUT—MAKE A DEAL","EVERY PURCHASE FUELS THE MACHINE","EVERYTHING IS YOURS TO TAKE","EVERYTHING'S PRICED TO DRAIN YOUR WALLET","IF YOU BREAK IT, YOU BUY IT","INVEST IN TRADING CARDS","IT'S A HOME RUN KIND OF SALE","IT'S A NINTH-INNING CLEARANCE EVENT","JUST A SMALL COG IN THE GLOBAL MACHINE","JUST ANOTHER DAY IN THE MERCHANDISE MINES","LET'S PLAY MONEY MAKING GAME","LOOK ON MY WARES, YE MIGHTY, AND REJOICE","NO ETHICAL CONSUMPTION UNDER CAPITALISM","NO SHIRT, NO SHOES, NO SCREAMING INTO THE ABYSS","THOU SHALT NOT STEAL. THOU SHALT SAVE WITH OUR GREAT DEALS","SHOP RIGHTEOUSLY WITH DIVINE DEALS","OH BOY, THIS IS REALLY EXPENSIVE!","PAY ME AND I'LL TALK","ROUND THE BASES AND PICK YOUR FAVORITE!","SAFE AT HOME-WITH THESE SAVINGS","SOLD MY SOUL FOR CAPITALISM","SHOP LOCAL, THINK ANTI-COLONIAL","SHOP TILL YOU STOP","SPEND BIG OR GET OUTTA THE BATTER'S BOX","STEP UP TO THE PLATE AND SPEND BIG!","SUPPORTING THE SYSTEM, ONE SALE AT A TIME","SWING FOR THE FENCES WITH THESE PRICES","TAKE ANY ONE YOU WANT","THE ECONOMY RELIES ON YOUR IMPULSE","THE MARKET WILL SOLVE EVERYTHING, RIGHT?","THIS IS A GRAND SLAM OF SAVINGS","THIS IS AMERICA'S PASTIME... SHOPPING!","THIS ISN'T A CHARITY, BUT THANKS FOR DONATING","WE TAKE YOUR MONEY AND SMILE ABOUT IT","WHO NEEDS A BAT WHEN YOU CAN SWING A DEAL?","WHO NEEDS ETHICS WHEN YOU HAVE A SALE?","YOU'LL WANT TO SLIDE INTO THIS DEAL!","YOUR DREAMS ARE NOW A PREMIUM SUBSCRIPTION","YOUR WORTH IS IN YOUR WALLET","OUR PITCHERS ARE LOCALLY SOURCED AND HARVESTED","100% ORGANIC, SMALL-BATCH SLUGGERS","OUR TRADING CARDS ARE HAND-CRAFTED, ONE PIXEL AT A TIME","FREE-RANGE OUTFIELDERS WITH ETHICALLY SOURCED MITTS","GLUTEN-FREE FASTBALLS, DELIVERED WITH ZERO EMISSIONS","OUR BASES ARE CERTIFIED VEGAN","STEP RIGHT UP AND PLUNGE INTO THE ABYSS—FUN FOR THE WHOLE FAMILY","FRESHLY HARVESTED DREAD, NOW WITH 30% MORE TREPIDATION","PREMIUM PHOBIAS ARE NOW AVAILABLE","IN THIS ECONOMY?!?!","WOW CHRISTMAS CAME EARLY. SANTA SAID SPEND MORE MONEY","*SLAPS ROOF OF CAR* THIS BAD BOY CAN FIT SO MANY DIGITAL TRADING CARDS","CHRISTMAS IS TOO COMMERCIALIZED. BASEBALL IS NOT COMMERCIALIZED ENOUGH","WE CAN WORK WITH YOUR BUDGET. TAKE IT "];cleanUpBreakingNews(){0<this.breakingNewsItems.length&&this.breakingNewsItems.shift()}flagBreakingNewsForRemoval(){var e;0<this.breakingNewsItems.length&&((e=this.breakingNewsItems[0]).flaggedForRemoval?this.breakingNewsItems.shift():e.flaggedForRemoval=!0)}getVisibleTickerItems(){return 0<this.breakingNewsItems.length?[this.breakingNewsItems[0].text]:[...this.items]}handleEvent=e=>{e.eventType===GameEventType.GAME_WINNER&&this.setBreakingNews(this.teamNames[e.teamId]+" win! ")};show(){this.parentDiv=document.getElementById("newsTickerContainer"),this.slideDivs=this.parentDiv.querySelectorAll(".newsTickerItem");for(let e=0;e<this.slideDivs.length;e++)0<this.breakingNewsItems.length?this.slideDivs[e].innerHTML=this.breakingNewsItems[0].text:this.slideDivs[e].innerHTML=this.items[e];0<this.breakingNewsItems.length&&this.breakingNewsItems[0].flaggedForRemoval?this.breakingNewsItems.splice(0,1):0<this.breakingNewsItems.length&&!this.breakingNewsItems[0].flaggedForRemoval&&(this.breakingNewsItems[0].flaggedForRemoval=!0)}setItems(e){this.items=e}setSpeed(e){var t=document.getElementById("newsTickerRibbon");t&&(t.style.animationDuration=e+"s")}setBreakingNews(e){this.breakingNewsItems.push({text:'<span class="text-white">'+e+"</span>",flaggedForRemoval:!1}),this.parentDiv=document.getElementById("newsTickerContainer"),this.slideDivs=this.parentDiv.querySelectorAll(".newsTickerItem");for(let e=0;e<this.slideDivs.length;e++)this.slideDivs[e].innerHTML=this.breakingNewsItems[0].text}setShopText(){this.items=["WHERE HAVE YOU BEEN?"];for(let e=0;e<12;e++){var t=HelpMe.removeFirstHalfRandom(NewsTicker.tickerMessages);this.items.push(t),NewsTicker.tickerMessages.push(t),t=HelpMe.removeFirstHalfRandom(NewsTicker.shopSpecific),this.items.push(t),NewsTicker.shopSpecific.push(t),this.items.push(NewsTicker.demoText[e%3])}}update(t){this.flagBreakingNewsForRemoval();let a=2;t.length<3&&(a=4);for(let e=0;e<t.length*a;e++)this.items[e]=t[e%t.length].scoreString;this.setSpeed()}}class BroadcastNews{static restructure(e){return Object.setPrototypeOf(e,BroadcastNews.prototype),e}constructor(){this.firstName=Name.create_first_name(),this.lastName=Name.create_last_name(),this.place=HelpMe.choice(["Backcountry","Badlands","Baffin Bay","Baker Island","Bakersfield","Banff","Barkley Sound","Barnegat Bay","Baton Rouge","Bay Area","Bayshore","Bayou","Beantown","Beaumont","Bellevue","Bellingham Bay","Belmont Bay","Berkeley","Berkshires","Big Bend","Big Horn","Bighorn Basin","Billings","Biloxi","Birch Bay","Biscayne","Black Canyon","Black Hills","Black Swamp","Blue Ridge","Blue Water","Bluegrass","Bodega Bay","Boise","Boone County","Boonslick","Bootheel","Boreal Plains","Borscht Belt","Boulder","Brazos Valley","Bridgeport","Bristol Bay","British Columbia","Brockton","Bronx","Brookside","Brownsville","Bryce Canyon","Buckeye","Buffalo","Bushwick","Butte","Burbank","Burned-over District","Buzzards Bay"]),this.secondWord=HelpMe.choice(["Babble","Babbler","Ballpark","Banter","Barker","Baseball","Bell","Bombast","Boomtown","Broadcast","Broadcaster","Bulletin","Bugle","Bugler","Busybody","Buzz","Canon","Canonical","Mumbler","Murmur","Tattler","Tattletale"]),this.network=HelpMe.choice(["News","Network","Media","Messenger"]),this.colorScheme={light:"#efae8f",mid:"#c24b3c",dark:"#455019"},this.crest=new Crest(this.colorScheme,this.getNewsAbbreviation(),25,4,15,3)}getFullName(){return`${this.crest.render(40)} <span style="background:'${this.colorScheme.light}';color:'${this.colorScheme.dark}';border-radius:'2px';"/>${this.place} ${this.secondWord} ${this.network}</span`}getNewsAbbreviation(){return""+this.place[0]+this.secondWord[0]+this.network[0]}getNewsName(){return`${this.place} ${this.secondWord} `+this.network}getReporterName(){return this.firstName+" "+this.lastName}}class Valuables{static restructure(e){return Object.setPrototypeOf(e,Valuables.prototype),e}constructor(e){this.redMagic=e.redMagic||0,this.greenMagic=e.greenMagic||0,this.blueMagic=e.blueMagic||0,this.money=e.money||0,this.lives=e.lives||0}add(e){for(var t in e)e.hasOwnProperty(t)&&this.hasOwnProperty(t)&&(this[t]+=e[t])}mult(e){for(var t in e)e.hasOwnProperty(t)&&this.hasOwnProperty(t)&&0!=e[t]&&(this[t]*=e[t])}getEmoji(){let e="";return 0<this.redMagic&&(e+="🔥"),0<this.greenMagic&&(e+="🌵"),0<this.blueMagic&&(e+="💧"),0<this.money&&(e+="🪙"),0<this.lives&&(e+="🩸"),e}getShadedEmoji(){let e="";return 0<this.redMagic&&(e+="<span class='noto shaded_outline_aqua'>🔥</span>"),0<this.greenMagic&&(e+="<span class='noto shaded_outline_magenta'>🌵</span>"),0<this.blueMagic&&(e+="<span class='noto shaded_outline_yellow'>💧</span>"),0<this.money&&(e+="<span class='noto shaded_outline_magenta'>🪙</span>"),0<this.lives&&(e+="<span class='noto shaded_outline_aqua'>🩸</span>"),e}setMagicToZero(){this.redMagic=0,this.greenMagic=0,this.blueMagic=0}}class Shop{static restructure(a){Object.setPrototypeOf(a,Shop.prototype);for(let t=0;t<a.cardPiles.length;t++)for(let e=0;e<a.cardPiles[t].length;e++)a.cardPiles[t][e]=TradingCard.restructure(a.cardPiles[t][e]);for(let e=0;e<a.cardsOnDisplay.length;e++)a.cardsOnDisplay[e]=TradingCard.restructure(a.cardsOnDisplay[e]);for(let e=0;e<a.upgradesOnDisplay.length;e++)a.upgradesOnDisplay[e]=Upgrade.restructure(a.upgradesOnDisplay[e]);return a}constructor(){this.displaySize=30,this.unlockableCardTypes=HelpMe.shuffle([UnlockableCardType.COFFEE_CONCESSIONS,UnlockableCardType.CURSED_HAT,UnlockableCardType.CURSED_MONEYMAKER,UnlockableCardType.CURSED_SHIRT,UnlockableCardType.CURSED_SHOE,UnlockableCardType.HOT_CONCESSIONS,UnlockableCardType.LUCKY_HAT,UnlockableCardType.LUCKY_MONEYMAKER,UnlockableCardType.LUCKY_SHIRT,UnlockableCardType.LUCKY_SHOE,UnlockableCardType.POTION,UnlockableCardType.SALTY_CONCESSIONS,UnlockableCardType.SWEET_CONCESSIONS]),this.unlockableUpgrades=HelpMe.shuffle([UnlockableUpgradeType.THE_BOAR,UnlockableUpgradeType.THE_DEVILFISH,UnlockableUpgradeType.THE_FLIGHTLESS_FOWL,UnlockableUpgradeType.THE_FOUNTAIN,UnlockableUpgradeType.THE_POISON_APPLE,UnlockableUpgradeType.THE_ILLUSIONIST]),this.cardPiles=[[],[],[],[]],this.cardsOnDisplay=[],this.upgradesOnDisplay=[],this.unlockedCardTypes=["Slugger","Fav Team","Pitcher"],this.unlockedUpgrades=["The Occult Hand"]}addCards(t,a,s){if(null==s)throw new Error("null user");this.cardPiles=[];for(let e=0;e<this.unlockedCardTypes.length;e++){var r=this.generateCards(this.unlockedCardTypes[e],t,a);this.cardPiles.push(r.filter(s.doesNotHaveCard))}this.upgradesOnDisplay=[];for(let e=0;e<this.unlockedUpgrades.length;e++){var i=this.generateCards(this.unlockedUpgrades[e],t,a);null!=i&&this.upgradesOnDisplay.push(i)}}attemptShopPurchase(e,t){var a=this.cardsOnDisplay[e];this.isPurchaseAffordable(e,t)&&t.hasRoomForThisCard(a)&&(t.addCards(a),t.valuables.money-=a.cost,this.cardsOnDisplay[e]=null)}decreaseDisplaySize(){}generateCards(e,t,a){switch(e){case"Slugger":return SluggerCard.generateCards(t,a);case"Fav Team":return FavTeamCard.generateCards(t,a);case"Pitcher":return PitcherCard.generateCards(t,a);case UnlockableCardType.COFFEE_CONCESSIONS:return CoffeeConcessionsCard.generateCards(t,a);case UnlockableCardType.CURSED_HAT:return CursedHatCard.generateCards(t,a);case UnlockableCardType.CURSED_MONEYMAKER:return CursedMoneymakerCard.generateCards(t,a);case UnlockableCardType.CURSED_SHIRT:return CursedShirtCard.generateCards(t,a);case UnlockableCardType.CURSED_SHOE:return CursedShoeCard.generateCards(t,a);case UnlockableCardType.HOT_CONCESSIONS:return HotConcessionsCard.generateCards(t,a);case UnlockableCardType.LUCKY_HAT:return LuckyHatCard.generateCards(t,a);case UnlockableCardType.LUCKY_MONEYMAKER:return LuckyMoneymakerCard.generateCards(t,a);case UnlockableCardType.LUCKY_SHIRT:return LuckyShirtCard.generateCards(t,a);case UnlockableCardType.LUCKY_SHOE:return LuckyShoeCard.generateCards(t,a);case UnlockableCardType.POTION:return PotionCard.generateCards(t,a);case UnlockableCardType.SALTY_CONCESSIONS:return SaltyConcessionsCard.generateCards(t,a);case UnlockableCardType.SWEET_CONCESSIONS:return SweetConcessionsCard.generateCards(t,a);case"The Occult Hand":return TheOccultHand.generateCards(t,a);case UnlockableUpgradeType.THE_BOAR:return TheBoar.generateCards(t,a);case UnlockableUpgradeType.THE_DEVILFISH:return TheDevilfish.generateCards(t,a);case UnlockableUpgradeType.THE_FLIGHTLESS_FOWL:return TheFlightlessFowl.generateCards(t,a);case UnlockableUpgradeType.THE_FOUNTAIN:return TheFountain.generateCards(t,a);case UnlockableUpgradeType.THE_POISON_APPLE:return ThePoisonApple.generateCards(t,a);case UnlockableUpgradeType.THE_ILLUSIONIST:return TheIllusionist.generateCards(t,a);default:throw new Error("Oops. "+e+" not found.")}}getCardsOnDisplay(){return this.cardsOnDisplay}getUpgradesOnDisplay(){return this.upgradesOnDisplay}getCost(e){return-1==e?getTheOccultHandPrice():this.cardsOnDisplay[e].cost}getCardPurchase(e,t){if(!this.isPurchaseAffordable(this.cardsOnDisplay[e].cost,t))return null;t.valuables.money-=this.cardsOnDisplay[e].cost;t=this.cardsOnDisplay[e];return this.cardsOnDisplay[e],t}getUpgradePurchase(e,t){return this.isPurchaseAffordable(this.upgradesOnDisplay[e].cost,t)?(t=this.upgradesOnDisplay[e],this.upgradesOnDisplay[e],t):null}isCardInShop(e,t){for(var a of Object.values(this.cardPiles))for(var s of a)if(s.leagueIdNumber===e&&s.cardType===t)return!0;return!1}isPurchaseAffordable(e,t){return t.valuables.money>=e}setCardsOnDisplay(){var a=Object.keys(this.cardPiles).length,s=Array.from({length:a},()=>[]);for(let t=0;t<this.displaySize;t++)for(let e=0;e<a;e++){var r=this.cardPiles[e],r=HelpMe.removeRandom(r);if(null!=r&&s[e].push(r),HelpMe.getRaggedArraySize(s)>=this.displaySize){t=99999;break}}this.cardsOnDisplay=s.flat(1/0)}setSluggerCards(t){for(let e=0;e<t&&0!=this.sluggerCards.length;e++){var a=Math.floor(Model.rng.random()*this.sluggerCards.length),a=this.sluggerCards.splice(a,1)[0];this.cardsOnDisplay.push(a)}}setFavTeamCards(t){for(let e=0;e<t&&0!=this.favTeamCards.length;e++){var a=Math.floor(Model.rng.random()*this.favTeamCards.length),a=this.favTeamCards.splice(a,1)[0];this.cardsOnDisplay.push(a)}}setInventoryToZero(){this.favTeamCards=[],this.pitcherCards=[],this.sluggerCards=[],this.cardsOnDisplay=[],this.upgradesOnDisplay=[]}setPitcherCards(t){for(let e=0;e<t&&0!=this.pitcherCards.length;e++){var a=Math.floor(Model.rng.random()*this.pitcherCards.length),a=this.pitcherCards.splice(a,1)[0];this.cardsOnDisplay.push(a)}}}class World{static restructure(e){return Object.setPrototypeOf(e,World.prototype),e.league=League.restructure(e.league),e.newsTicker=NewsTicker.restructure(e.newsTicker),e.shop=Shop.restructure(e.shop),e.newsNetwork=newsNetwork.restructure(e.newsNetwork),e}constructor(e){this.year=e,this.day=0,this.league=new League(24,this.year),this.newsTicker=new NewsTicker;for(var t of this.league.teams)this.newsTicker.teamNames[t.leagueIdNumber]=t.getName(),t.manager.subscribe(this.newsTicker.handleEvent);this.shop=new Shop,this.newsNetwork=new BroadcastNews}getGameDetails(){return this.league.getGameDetails(this.year,this.day)}getSchedule(){return this.league.getSchedule()}getStandingsTableBatters(e){return this.league.getStandingsTableBatters(e)}getStandingsTablePitchers(e){return this.league.getStandingsTablePitchers(e)}getStandingsTableTeams(){return this.league.getStandingsTableTeams()}getStandingsTableTeamScoring(e){return this.league.getStandingsTableTeamScoring(e)}getTime(){return"Year "+this.model.world.league.currentSeason+" Day "+this.model.world.league.seasons[this.model.world.league.currentSeason].currentDay}isTodayDone(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.league.isTodayDone(e,t)}nextGameMessages(e,t){if(null==e)throw new Error("null year");if(null==t)throw new Error("null day");return this.league.nextGameMessages(e,t)}reloadTeams(){this.league.reloadTeams(this.year,this.day)}}let ModelState={MORNING:0,AFTERNOON:1,POSTGAME_AFTERNOON:2,NIGHT:3,PERFORMANCE:4};class Model{static rng;static restructure(t){Object.setPrototypeOf(t,Model.prototype),t.world=World.restructure(t.world);for(let e=0;e<t.users.length;e++)t.users[e]=User.restructure(t.users[e]);for(let e=0;e<t.plot.length;e++)t.plot[e]=PlotDevice.restructure(t.plot[e]);return t}constructor(e,t){Model.rng=new MersenneTwister(parseInt(e)),this.world=new World(t),this.users=[new User],this.plot=[new WhirlwindA(this),new WhirlwindB(this),new WhirlwindC(this),new WhirlwindD(this),new WhirlwindE(this)],this.world.shop.addCards(this.world.league.getTeamsPlayingToday(this.world.year,this.world.day),this.world.day,this.users[0]),this.world.shop.setCardsOnDisplay(),null!=localStorage.getItem("savedState")?this.loadGame():this.state=ModelState.MORNING}addUser(){var e=new User;this.users.push(e)}_commit(e){this.onTodoListChanged(e),localStorage.setItem("todos",JSON.stringify(e))}attemptShopCardPurchase(e,t){t.removeNullCards(),this.isPurchaseAffordable(this.world.shop.cardsOnDisplay[e].cost,t)&&this.userHasRoom(e,t)&&(e=this.world.shop.getCardPurchase(e,t))&&(t.addCard(e,this.world.league.lookup(e.leagueIdNumber)),t.cardsPurchased++)}attemptShopUpgradePurchase(e,t){t.removeNullCards(),this.isPurchaseAffordable(this.world.shop.upgradesOnDisplay[e].cost,t)&&(e=this.world.shop.getUpgradePurchase(e,t))&&(e.addUpgradeToUser(t),t.upgradesPurchased++)}getNextGameMessages(){return this.world.nextGameMessages()}isPurchaseAffordable(e,t){return e<=t.valuables.money}next(){switch(this.state){case ModelState.MORNING:console.log("morning -> afternoon"),this.world.shop.setInventoryToZero(),this.world.shop.decreaseDisplaySize(),this.state=ModelState.AFTERNOON,this.users[0].removeNullCards(),this.saveGame();break;case ModelState.AFTERNOON:console.log("afternoon -> postgame_afternoon"),this.state=ModelState.POSTGAME_AFTERNOON,this.users[0].removeNullCards(),this.world.league.setPrintSchedule(this.world.year),this.saveGame();break;case ModelState.POSTGAME_AFTERNOON:console.log("postgame_afternoon -> night"),this.state=ModelState.NIGHT,this.users[0].removeNullCards(),this.saveGame();break;case ModelState.NIGHT:console.log("night -> performance"),this.state=ModelState.PERFORMANCE,this.users[0].removeNullCards(),this.saveGame();break;case ModelState.PERFORMANCE:console.log("performance -> morning"),this.world.day++,this.world.shop.addCards(this.world.league.getTeamsPlayingToday(this.world.year,this.world.day),this.world.day,this.users[0]),this.world.shop.setCardsOnDisplay(),this.state=ModelState.MORNING,this.users[0].removeNullCards(),this.saveGame()}}nextPlotMessage(){return this.plot[this.world.day%this.plot.length].next(this)}openLootcrateCard(e){e=this.world.shop.unlockableCardTypes.splice(e,1)[0],this.world.shop.unlockedCardTypes.unshift(e),document.getElementById("lootcrateDescription").innerHTML=`You have unlocked <span class="fs-4">${e}</span> cards! Find them in the Trading Card Shop!`,e=this.world.shop.unlockableCardTypes.splice(0,2);this.world.shop.unlockableCardTypes.push(...e)}openLootcrateUpgrade(e){e=this.world.shop.unlockableUpgrades.splice(e,1)[0],this.world.shop.unlockedUpgrades.unshift(e),document.getElementById("lootcrateDescription").innerHTML=`You have unlocked <span class="fs-4">${e}</span> upgrade. Look for it where mysterious, forbidden upgrades are sold.`,e=this.world.shop.unlockableUpgrades.splice(0,2);this.world.shop.unlockableUpgrades.push(...e)}readdUserCards(){var t=this.users[0].cards.length;for(let e=0;e<t;e++){var a=this.users[0].cards.shift();this.users[0].addCard(a,this.world.league.lookup(a.leagueIdNumber))}}reloadTeams(){this.world.reloadTeams()}resetPlotDeviceState(){this.plot[this.world.day%this.plot.length].state=PlotDeviceState.INTRO_SCRIPT}saveGame(){localStorage.setItem("year",JSON.stringify(this.world.year)),localStorage.setItem("day",JSON.stringify(this.world.day)),localStorage.setItem("savedState",JSON.stringify(this.state));for(let e=0;e<this.world.league.teams.length;e++)localStorage.setItem("team"+e,JSON.stringify(this.world.league.teams[e]));localStorage.setItem("printSchedule",JSON.stringify(this.world.league.seasons[this.world.year].regularSeasonSchedule.printSchedule)),localStorage.setItem("upgrades",JSON.stringify(Upgrade.prices)),localStorage.setItem("user",JSON.stringify(this.users[0])),localStorage.setItem("shop",JSON.stringify(this.world.shop)),localStorage.setItem("rng",JSON.stringify(Model.rng))}loadGame(){var e=localStorage.getItem("savedState");if(e){this.world.year=JSON.parse(localStorage.getItem("year")),this.world.day=JSON.parse(localStorage.getItem("day")),this.state=JSON.parse(e),this.world.league.seasons[this.world.year].regularSeasonSchedule.printSchedule=JSON.parse(localStorage.getItem("printSchedule"));for(let e=0;e<this.world.league.teams.length;e++){this.world.league.teams[e]=BaseballTeam.restructure(JSON.parse(localStorage.getItem("team"+e))),this.world.league.teams[e].manager.subscribe(this.world.league.handleEvent),this.world.league.teams[e].setup();for(var t of this.world.league.teams[e].players)t.manager.subscribe(this.world.league.handleEvent)}Upgrade.prices=JSON.parse(localStorage.getItem("upgrades")),this.users[0]=User.restructure(JSON.parse(localStorage.getItem("user"))),this.readdUserCards(),this.world.shop=Shop.restructure(JSON.parse(localStorage.getItem("shop"))),Model.rng=Object.setPrototypeOf(JSON.parse(localStorage.getItem("rng")),MersenneTwister.prototype),this.reloadTeams()}}userHasRoom(e,t){return t.hasRoomForThisCard(this.world.shop.cardsOnDisplay[e])}}class NavBar{constructor(){this.root=View.createElement("nav","navbar","navbar navbar-expand-md bg-111 navbar-dark fixed-top flex-wrap"),this.root.innerHTML=`
            <div id="newsTickerContainer" class="mt-1 col-12 small"><p id="newsTickerRibbon"></p></div>
            <div class="container col-12">
                <a class="fs-5 navbar-brand text-secondary me-2" data-link-to-page-id="homePage" href="#">
                    ioBaseball<span style="font-size:7px;padding:1px;border-radius:2px;" class="badge text-bg-secondary font-monospac m-0">
                        DEMO
                    </span>
                    
                </a>
                
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar">
                <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="collapsibleNavbar">
                    <ul id="navBarList" class="navbar-nav me-auto">

                    </ul>
                    <span class="d-flex " data-link-to-page-id="userPage">

                        <span id="counterSection"  class=" text-secondary pt-1 pe-1 small" data-link-to-page-id="userPage">
                            <span id="userIconNag" data-link-to-page-id="userPage">
                                <span class="badge text-bg-warning bouncy z-3 position-relative top-0 start-50" data-link-to-page-id="userPage">YOUR CARDS →
                                </span>
                            </span>
                            <a href="#" data-link-to-page-id="userPage" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Money. Spend it to buy cards. Earn magic which generates victory points.">
                                <span id="moneyCounter" class="font-monospac" data-link-to-page-id="userPage">100</span>
                                <span class="opacity-75 small" data-link-to-page-id="userPage">
                                <span class="noto" data-link-to-page-id="userPage">🪙</span></span>&nbsp;
                            </a>
                            <a href="#" data-link-to-page-id="userPage" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Red Magic Points used for fire, love, blood, etc.">
                                <span id="redMagicCounter" class="font-monospac " data-link-to-page-id="userPage">3</span>
                                <span class="opacity-75 small" data-link-to-page-id="userPage">
                                <span class="noto" data-link-to-page-id="userPage">🔥</span></span>&nbsp;
                            </a>
                            <a href="#" data-link-to-page-id="userPage" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Green Magic Points used for plants, nature, healing, etc.">
                                <span id="greenMagicCounter" class="font-monospac " data-link-to-page-id="userPage">1</span>
                                <span class="opacity-75 small" data-link-to-page-id="userPage">
                                <span class="noto" data-link-to-page-id="userPage">🌵</span></span>&nbsp;
                            </a>
                            <a href="#" data-link-to-page-id="userPage" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Blue Magic Points used for water, cold, the sky, etc.">
                                <span id="blueMagicCounter" class="font-monospac " data-link-to-page-id="userPage">5</span>
                                <span class="opacity-75 small" data-link-to-page-id="userPage">
                                <span class="noto" data-link-to-page-id="userPage">💧</span></span>&nbsp;
                            </a>
                            <a href="#" data-link-to-page-id="userPage" class="text-decoration-none link-secondary" data-toggle="tooltip" title="Trading Cards. Number the player currently holds and the maximum number the player can hold.">
                                <span class="cardsCount font-monospac " data-link-to-page-id="userPage">0</span>/
                                <span class="maxCards font-monospac" data-link-to-page-id="userPage">5</span>
                                <span class="opacity-75 small" data-link-to-page-id="userPage">
                                <span class="noto" data-link-to-page-id="userPage">🃏</span></span>
                            </a>

                            
                        </span>
                        
                        
                        

                            
                        <a id="userPageMenuItem" class="material-symbols-outlined text-secondary link link-light link-opacity-25 link-opacity-100-hover text-decoration-none"
                            role="button"
                            data-link-to-page-id="userPage" >                   
                            account_circle
                        </a>
                
                        
                    </span>
                </div>
            </div>
        `.trim()}add(e){this.root.querySelector("#navBarList").appendChild(e)}bindNavBarClick(a){this.root.addEventListener("click",t=>{let e=t.target.dataset.linkToPageId;if("span"===t.target.localName||"nobr"===t.target.localName){let e=t.target.parentElement.dataset.linkToPageId;a(e)}else if("a"===t.target.localName){let e=t.target.dataset.linkToPageId;a(e)}else if("text"===t.target.localName||"polygon"===t.target.localName){let e=t.target.parentElement.parentElement.parentElement.dataset.linkToPageId;a(e)}})}updateUserInfo=e=>{this.setCounters(e)};render(){return this.root}setCounters(t){document.querySelector("#moneyCounter").innerHTML=t.valuables.money,document.querySelector("#greenMagicCounter").innerHTML=t.valuables.greenMagic,document.querySelector("#redMagicCounter").innerHTML=t.valuables.redMagic,document.querySelector("#blueMagicCounter").innerHTML=t.valuables.blueMagic,document.querySelectorAll(".cardsCount").forEach(e=>{e.innerText=t.getCardsCount()}),document.querySelectorAll(".maxCards").forEach(e=>{e.innerText=t.maxCards})}renderTicker(t){var a=document.querySelector("#newsTickerRibbon");let s=2;t.length<3&&(s=4);for(let e=0;e<t.length*s;e++){var r=View.createElement("span",null,"newsTickerItem");r.innerHTML=t[e%t.length],a.append(r)}}setTickerItems(t){var a=document.getElementById("newsTickerContainer").querySelectorAll(".newsTickerItem");for(let e=0;e<a.length;e++)a[e].innerHTML=t[e%t.length]}}class View{static addAlert(e,t,a=!1){var s=document.getElementById("alertContainer");let r=View.createElement("div",null,`alert alert-${e} alert-dismissible fade py-1 m-1`);r.innerHTML=`
            ${t}
            <button type="button" class="btn-close py-2" data-bs-dismiss="alert" aria-label="Close"></button>
        `,s.appendChild(r),setTimeout(()=>{r.classList.add("show")},50),a&&setTimeout(()=>{r.classList.remove("show"),setTimeout(()=>r.remove(),500)},4e3)}static createElement(e,t,a,s){let r=document.createElement(e);return t&&(r.id=t),a&&0<=a.indexOf(" ")?a.split(" ").forEach(e=>{0<e.length&&r.classList.add(e)}):a&&r.classList.add(a),s&&(r.innerHTML=s),r}constructor(){this.app=document.querySelector("#root"),this.app.innerHTML="",this.viewContainer=View.createElement("div","viewContainer","container mt-5 pt-5"),this.alertContainer=View.createElement("span","alertContainer","position-fixed alert-fixed w-25 mt-3 bottom-0 end-0 p-3"),this.navBar=new NavBar,this.addMenuItemHome(),this.addMenuItemSchedule(),this.addMenuItemStandings(),this.pageContainer=View.createElement("div","pageContainer"),this.userPage=new UserPage,this.pageContainer.append(this.userPage.render()),this.statsModal=new StatsModal,this.confirmModal=new ConfirmModal,this.viewContainer.append(this.pageContainer,this.statsModal.render(),this.confirmModal.render()),this.app.append(this.alertContainer,this.navBar.render(),this.viewContainer)}addMenuItem(e,t,a){var s=View.createElement("li",t,"nav-item bg-transparent"),t=(s.setAttribute("role","button"),View.createElement("a",t+"Link","nav-link bg-transparent border-0 link-light link-opacity-25 link-opacity-100-hover"));t.dataset.linkToPageId=e,t.innerHTML=`<span class="mt-1 material-symbols-outlined">${a}</span>`,s.append(t),this.navBar.add(s)}addMenuItemHome(){this.addMenuItem("homePage","homePageMenuItem","home")}addMenuItemSchedule(){this.addMenuItem("schedulePage","schedulePageMenuItem","calendar_clock")}addMenuItemStandings(){this.addMenuItem("standingsPage","standingsPageMenuItem","format_list_numbered")}bindAfternoonContinueButtonClick(t){var e=document.getElementsByClassName("afternoonContinueButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t()})})}bindNightContinueButtonClick(t){var e=document.getElementsByClassName("nightContinueButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t()})})}bindPerformanceContinueButtonClick(t){var e=document.getElementsByClassName("performanceContinueButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t()})})}bindPerformanceLootcrateCardButtonClick(t){var e=document.getElementsByClassName("lootcrateCardButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t(e.target.value)})})}bindPerformanceLootcrateUpgradeButtonClick(t){var e=document.getElementsByClassName("lootcrateUpgradeButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t(e.target.value)})})}bindShopContinueButtonClick(t){var e=document.getElementsByClassName("shopContinueButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{"button"===e.target.localName&&t()})})}showPage(e){var t=document.getElementsByClassName("page"),t=(Array.from(t).forEach(e=>{e.classList.add("hide")}),document.getElementById(e)),a=(t.classList.remove("hide"),document.getElementsByClassName("page-item")),a=(Array.from(a).forEach(e=>{e.classList.remove("active")}),document.getElementById(e+"MenuItem").classList.add("active"),t.querySelector(".messageFeedContainer"));null!==a&&(a.scrollTop=a.scrollHeight,t.querySelector(".messageJumpButton").classList.add("hide")),window.scrollTo({top:0,left:0,behavior:"instant"})}setTime(t){document.querySelectorAll(".dateAndTime").forEach(e=>{e.innerHTML=`Season <span class="font-monospac fs-4">${t.world.year+1}</span> Day <span class="font-monospac fs-4">${t.world.day+1}</span>`})}setZoom(e){element.style.transform=`scale(${e})`,element.style.transformOrigin="center center"}updateStandings(e){if(null==e)throw new Error("null model");e={teams:e.world.league.getStandingsTableTeams(),pitchers:e.world.league.getStandingsTablePitchers(10),batters:e.world.league.getStandingsTableBatters(10),teamScoring:e.world.league.getStandingsTableTeamScoring(10)};this.standingsPage.update(e.teams,e.batters,e.teamScoring,e.pitchers)}updateUserInfo=e=>{if(null==e)throw new Error("null user");this.confirmModal.update(e),this.navBar.updateUserInfo(e),this.userPage.updateUserInfo(e);var t=document.getElementById("vpGoalDisplayAmount");null!=t&&(t.innerText=e.getGoal().toLocaleString())}}class UpgradeCardComponent extends HTMLElement{static cardCounter=0;constructor(){super();let e=this.attachShadow({mode:"open"});this.uniqueId="upgrade-card-"+UpgradeCardComponent.cardCounter++,this.setAttribute("id",this.uniqueId),this.attributesMap={name:"name",cardline1:"line 1",cardline2:"line 2",cardline3:"line 3",cardline4:"line 4",cost:"N/A",colorlight:"#a16dc3",colormid:"#673788",colordark:"#221a27",gradientrotation:"0.5",image:"x",fontcolor:"#FFFFFF",fontsize:"3px",fontfamily:"Material Symbols Outlined",odds:"none",othercard:"none",rewardamount:"none",rewardamount2:"none",rewardtype:"none",height:"100",width:"100"},this.loadAttributes(),this.uniqueCanvasId="canvas-"+this.uniqueId,e.innerHTML=`
        <style>
          ${this.getStyles()}
        </style>
        <div class="upgradeCard">

          <div class="upgradeCardContents">
            
            
            <div class="upgradeCardBody">
            <div class="cardline1 py-0 my-0">${this.cardline1}</div>
            <div class="cardline2 py-0 my-0">${this.cardline2}</div>
            <div class="cardline3 py-0 my-0"><small>${this.cardline3}</small></div>
            <div class="cardline4 py-0 my-0"><small>${this.cardline4}</small></div>
            </div>
            <div class="upgradeCardImage">
              <canvas id="${this.uniqueCanvasId}"></canvas>
            </div>
            
             <span class="cardName"><small>${this.name}</small></span>
            <span class="cardCost"><small>${this.cost}<span class="noto">🪙</span></small></span>
          </div>
        </div>
      `,setTimeout(()=>this.drawCanvas(e.querySelector("#"+this.uniqueCanvasId)),1),setTimeout(()=>this.drawCanvas(e.querySelector("#"+this.uniqueCanvasId)),200)}loadAttributes(){Object.keys(this.attributesMap).forEach(e=>{this[e]=this.getAttribute(e)||this.attributesMap[e]})}drawCanvas(e){let a=e.getContext("2d");e.width=200,e.height=200,a.clearRect(0,0,e.width,e.height);var t=Math.sqrt(3)/2*200;let s=e.width/2,r=e.height/2;var e=s-100,i=100+s,o=t,n=s,l=a.createLinearGradient(n,0,n,t);l.addColorStop(0,this.colorlight),l.addColorStop(1,this.colormid),a.fillStyle=l,a.beginPath(),a.moveTo(e,t),a.lineTo(i,o),a.lineTo(n,0),a.closePath(),a.fill();let d=new Image;d.src="images/"+this.image,d.onload=()=>{var e=this.width,t=this.height;a.drawImage(d,s-e/2,r-t/2,e,t)}}getStyles(){return`
          .noto {
            font-family: "Noto Color Emoji", sans-serif;
            font-weight: 400;
            font-style: normal;
          }
          .shaded_outline_yellow{
            border-radius: 50%;
            background:rgba(255,255,127,0.3)
          }
            .shaded_outline_magenta{
            border-radius: 50%;
            background:rgba(255,127,255,0.3)
          }
            .shaded_outline_aqua{
            border-radius: 50%;
            background:rgba(127,255,255,0.3)
          }
        .upgradeCard {
          position: relative;
          width: 240px;
          height: 240px;
          display: inline-block;
          border-radius: 5px;
          
          padding:0px;
          margin: 30px;
          font-weight: 300; /*lighter*/
          
        }
        .upgradeCardContents {
          position: absolute;
          width: 240px;
          height: 240px;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          border-radius: 5px;
          transition: 0.3s ease;
          box-shadow: 0 0 10px 1px ${this.colorlight};
          padding: 5px;

  
        }
        .cardName {
          position: absolute;

          bottom:0.5rem;
          left:0.75rem;
       
  
          color: ${this.colorlight};
   
          font-weight: 400; /*normal*/
          font-size: ${Math.min(400/this.name.length,18)}px;
   
          
        }
          .cardCost {
         position:absolute;
          bottom:0.5rem;
          right:0.75rem;
            color: ${this.colorlight};
            font-weight: 300; /*lighter*/
          }
        .upgradeCardImage {
          height: 8.5rem;
          display: flex;
          align-items: center;
          justify-content: center;
          padding-top:9px;
         
        }
        .upgradeCardImage canvas {
          height:100%;
          width:auto;
          image-rendering: pixelated;
        }
        .upgradeCardBody {
          padding: 0px;
          color: ${this.colorlight};
          font-size: 0.7rem;
          text-align: center;
          font-weight: lighter;
        }
        .cardline1 {
          font-size: ${28/this.cardline1.length+.1}rem;
          line-height:1.5rem;
          font-weight: 400; /*normal*/
        }
        .cardline2 {
          font-size: 0.9rem;
          line-height:1.5rem;
          font-weight: 400; /*normal*/
        }


        `}updateCardLines({cardline1:e,cardline2:t,cardline3:a,rewardamount:s,rewardamount2:r}){e&&(this.cardline1=e,this.shadowRoot.querySelector(".cardline1").innerHTML=`<small>${e}</small>`),t&&(this.cardline2=t,this.shadowRoot.querySelector(".cardline2").textContent=t),a&&(this.cardline3=a,this.shadowRoot.querySelector(".cardline3").textContent=a),s&&(this.rewardamount=s,this.shadowRoot.querySelector(".rewardamount").textContent=s),r&&(this.rewardamount2=r,this.shadowRoot.querySelector(".rewardamount2").textContent=r)}}customElements.define("upgrade-card",UpgradeCardComponent);class TradingCardComponent extends HTMLElement{static cardCounter=0;constructor(){super();let e=this.attachShadow({mode:"open"});this.uniqueId="trading-card-"+TradingCardComponent.cardCounter++,this.setAttribute("id",this.uniqueId),this.attributesMap={name:"Unknown Player",cardline1:"No Reward",cardline2:"Unknown Team",cardline3:"Unknown Position",cardline4:"Click to see stats",cost:"N/A",colorlight:"#FFD700",colormid:"#994500",colordark:"#664500",gradientrotation:"0",emoji:"🏃",fontcolor:"#FFFFFF",fontsize:"3px",fontfamily:"Noto Color Emoji",odds:"none",othercard:"none",rewardamount:"none",rewardamount2:"none",rewardtype:"none"},this.loadAttributes(),this.uniqueCanvasId="canvas-"+this.uniqueId,e.innerHTML=`
      <style>
        ${this.getStyles()}
      </style>
      <div class="tradingCard">
        <div class="tradingCardHoverPoint"></div>
        <div class="tradingCardHoverPoint"></div>
        <div class="tradingCardHoverPoint"></div>
        <div class="tradingCardHoverPoint"></div>
        <div class="tradingCardContents">
          <div class="tradingCardHeader">
              <span class="cardName"><small>${this.name}</small></span>
              <span class="cardCost"><small>${this.cost}<span class="noto">🪙</span></small></span>
          </div>
          <div class="tradingCardImage">
            <canvas id="${this.uniqueCanvasId}"></canvas>
          </div>
          <div class="tradingCardBody">
              <div class="cardline1 py-0 my-0"><small>${this.cardline1}</small></div>
              <div class="cardline2 py-0 my-0">${this.cardline2}</div>
              <div class="cardline3 py-0 my-0">${this.cardline3}</div>
              <div class="cardline4 pb-5"><small>${this.cardline4}</small></div>
          </div>
        </div>
      </div>
    `,setTimeout(()=>this.drawCanvas(e.querySelector("#"+this.uniqueCanvasId)),1),setTimeout(()=>this.drawCanvas(e.querySelector("#"+this.uniqueCanvasId)),200)}loadAttributes(){Object.keys(this.attributesMap).forEach(e=>{this[e]=this.getAttribute(e)||this.attributesMap[e]})}drawCanvas(e){var t=e.getContext("2d"),a=(e.width=20,e.height=15,t.createLinearGradient(e.width*this.gradientrotation,0,e.width*(1-this.gradientrotation),e.height));a.addColorStop(.33,this.colormid),a.addColorStop(.77,this.colordark),t.fillStyle=a,t.fillRect(0,0,e.width,e.height),t.filter="contrast(70%) brightness(130%)",t.font=this.fontsize+" "+this.fontfamily,t.textAlign="center",t.textBaseline="middle",t.fillStyle=this.colorlight,t.strokeText(this.emoji,.51*e.width,.6*e.height),t.fillText(this.emoji,.51*e.width,.6*e.height)}getStyles(){return`
        .noto {
          font-family: "Noto Color Emoji", sans-serif;
          font-weight: 400;
          font-style: normal;
        }
        .shaded_outline_yellow{
          border-radius: 50%;
          background:rgba(100,100,0,0.8)
        }
          .shaded_outline_magenta{
          border-radius: 50%;
          background:rgba(100,0,100,0.8)
        }
          .shaded_outline_aqua{
          border-radius: 50%;
          background:rgba(0,100,100,0.8)
        }
      .tradingCard {
        position: relative;
        width: 200px;
        height: 300px;
        display: inline-block;
        border-radius: 5px;
        margin: 5px;
        font-weight: 300; /*lighter*/
        
      
      }
      .tradingCardContents {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        border-radius: 5px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 1);
        transition: 0.3s ease;
        overflow: hidden;
        border: 2px solid ${this.colorlight};

      }
      .tradingCardHeader {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2px 10px 2px;
        color: ${this.colorlight};
        background: ${this.colordark};
        /*background:#060607;*/
        font-weight: 400; /*normal*/
        font-size: ${Math.min(400/this.name.length,18)}px;
        /*text-transform: uppercase;*/
        border-bottom: 4px solid ${this.colormid};
        
      }
        .cardCost {
        font-weight: 300; /*lighter*/
          font-size: 14px
        }
      .tradingCardImage {
        height: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background:${this.colorlight};
        border-top: 4px solid ${this.colorlight};
        border-bottom: 4px solid ${this.colorlight};
      }
      .tradingCardImage canvas {
        /*width: 100%;
        height: auto;*/
        height:100%;
        width:auto;
        image-rendering: pixelated;
      }
      .tradingCardBody {
        padding: 0 0 50px;
        color: ${this.fontcolor};
        background: ${this.colordark};
        font-size: 0.85em;
        text-align: center;
        font-weight: lighter;
        border-top: 4px solid ${this.colormid};
      }
      .cardline1,.cardline2 {
        font-size: 1rem;
        font-weight: 400; /*normal*/
      }
        .tradingCardHoverPoint {
            position: absolute;
            z-index: 5;
            width: calc(100% / 2);
            height: calc(100% / 2);
        }
        .tradingCardHoverPoint:nth-child(1) { top: 0; left: 0; }
        .tradingCardHoverPoint:nth-child(2) { top: 0; right: 0; }
        .tradingCardHoverPoint:nth-child(3) { bottom: 0; left: 0; }
        .tradingCardHoverPoint:nth-child(4) { bottom: 0; right: 0; }
        .tradingCardHoverPoint:nth-child(1):hover ~ .tradingCardContents {
            box-shadow: 3px 3px 15px rgba(0, 0, 0, 1);
            transform-origin: right top;
            transform: perspective(1000px) rotateX(2deg) rotateY(-2deg) rotateZ(0.2deg);
        }

        .tradingCardHoverPoint:nth-child(2):hover ~ .tradingCardContents {
            box-shadow: -3px 3px 15px rgba(0, 0, 0, 1);
            transform-origin: left top;
            transform: perspective(1000px) rotateX(2deg) rotateY(2deg) rotateZ(-0.2deg);
        }

        .tradingCardHoverPoint:nth-child(3):hover ~ .tradingCardContents {
            box-shadow: 3px -3px 15px rgba(0, 0, 0, 1);
            transform-origin: right bottom;
            transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-0.2deg);
        }

        .tradingCardHoverPoint:nth-child(4):hover ~ .tradingCardContents {
            box-shadow: -3px -3px 15px rgba(0, 0, 0, 1);
            transform-origin: left bottom;
            transform: perspective(1000px) rotateX(-10deg) rotateY(10deg) rotateZ(0.2deg);
        }
      `}updateCardLines({cardline1:e,cardline2:t,cardline3:a,rewardamount:s,rewardamount2:r}){e&&(this.cardline1=e,this.shadowRoot.querySelector(".cardline1").innerHTML=`<small>${e}</small>`),t&&(this.cardline2=t,this.shadowRoot.querySelector(".cardline2").textContent=t),a&&(this.cardline3=a,this.shadowRoot.querySelector(".cardline3").textContent=a),s&&(this.rewardamount=s,this.shadowRoot.querySelector(".rewardamount").textContent=s),r&&(this.rewardamount2=r,this.shadowRoot.querySelector(".rewardamount2").textContent=r)}}customElements.define("trading-card",TradingCardComponent);class GamePostComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});var e=document.createElement("template");e.innerHTML=`
            <style>
                /* Encapsulated styles */
                html,
                body {
                    margin-top: 0;
                    font-family: "Roboto Condensed", sans-serif;
                    font-optical-sizing: auto;
                    font-weight: 400;
                    font-style: normal;
                }

                a,
                a:visited {
                color: white; /* Set both regular and visited links to white */
                }

                .font-monospac {
                    font-family: monospac, monospac;
                }
                
                .post {
                    border-radius: 8px;
                    padding: 10px;
                    margin: 10px 0;
                    background-color: #121214;
                    color: hsl(228, 5%, 80%);
                }

                .username {
                    font-weight: bold;
                }

                .timestamp {
                    color: #657786;
                    font-size: 12px;
                }

                .baseIcon {
                    font-size: 2em;
                    line-height: 1;
                    vertical-align: baseline;
                }
                :host([logo="window"]) .baseIcon {
                    font-size: 3rem;
                    }

                sub.baseIcon,
                sup.baseIcon {
                    margin: 0; /* Remove extra space that might cause layout issues */
                    padding: 0;
                    line-height: 1;
                    display: inline-block; /* Ensures proper alignment */
                    align-items: center;
                    justify-content: center;
                    position: relative;
                    font-size: 2em;
                }

                /* Adjust the positioning offsets */
                sub.gamePostLeftBase {
                    transform: translateX(0.75em) translateY(0.2em);
                }
                :host([logo="window"]) sub.gamePostLeftBase {
                    transform: translateX(1.89rem) translateY(0rem);
                    }

                sup.gamePostCenterBase {
                    transform: translateX(0em) translateY(-0.2em);
                }
                :host([logo="window"]) sup.gamePostCenterBase {
                    transform: translateX(0rem) translateY(-1rem);
                    }

                sub.gamePostRightBase {
                    transform: translateX(-0.75em) translateY(0.2em);
                }
                :host([logo="window"]) sub.gamePostRightBase {
                    transform: translateX(-1.89rem) translateY(0rem);
                    }
                    
                @-moz-document url-prefix(){
                    sub.gamePostLeftBase {
                        transform: translateX(0.5em) translateY(0.2em);
                    }

                    sup.gamePostCenterBase {
                        transform: translateX(0em) translateY(-0.2em);
                    }

                    sub.gamePostRightBase {
                        transform: translateX(-0.5em) translateY(0.2em);
                    }
                }
            </style>

            <div class="post">
                <span class="username">
                    <span class="pe-4" id="inning"></span>
                    <span class="pe-4" id="away-team"></span>
                    <span class="pe-4" id="home-team"></span>
                </span> 
                <span class="timestamp" id="timestamp"></span>
                <p id="log"></p>
                <span>
                    <sub class="baseIcon font-monospace gamePostLeftBase" id="base-icon-0"></sub>
                    <sup class="baseIcon font-monospace gamePostCenterBase" id="base-icon-1"></sup>
                    <sub class="baseIcon font-monospace gamePostRightBase" id="base-icon-2"></sub>
                </span>
                <span class="font-monospac">
                    B: <span id="balls"></span> S: <span id="strikes"></span> O: <span id="outs"></span>
                </span>
            </div>
        `.trim(),this.shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){this.render(),this.shadowRoot.querySelectorAll("a").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.showStatsModal()})})}static removeSvg(e){return e.replace(/<svg[\s\S]*?<\/svg>/gi,"")}render(){var e=JSON.parse(this.getAttribute("game-message")),t=(new Date).toLocaleTimeString(),t=(this.shadowRoot.getElementById("inning").textContent=e.inning,this.shadowRoot.getElementById("away-team").innerHTML=GamePostComponent.removeSvg(e.awayTeam)+": "+e.score.away,this.shadowRoot.getElementById("home-team").innerHTML=GamePostComponent.removeSvg(e.homeTeam)+": "+e.score.home,this.shadowRoot.getElementById("timestamp").textContent=t,this.shadowRoot.getElementById("log").innerHTML=GamePostComponent.removeSvg(e.log),e.baseIcons),t=(this.shadowRoot.getElementById("base-icon-0").textContent=t.charAt(0),this.shadowRoot.getElementById("base-icon-1").textContent=t.charAt(1),this.shadowRoot.getElementById("base-icon-2").textContent=t.charAt(2),this.shadowRoot.getElementById("balls").textContent=e.count.balls,this.shadowRoot.getElementById("strikes").textContent=e.count.strikes,this.shadowRoot.getElementById("outs").textContent=e.count.outs,navigator.userAgentData?.platform.toLowerCase()||navigator.userAgent.toLowerCase());let a=t.includes("win")?"window":t.includes("mac")?"apple":"unknown";document.querySelectorAll("game-post").forEach(e=>{e.setAttribute("logo",a)})}showStatsModal(){var e=document.getElementById("statsModal");e?new bootstrap.Modal(e).show():console.error('Modal element with ID "statsModal" not found')}}customElements.define("game-post",GamePostComponent);class SocialPostComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});var e=document.createElement("template");e.innerHTML=`
            <style>
                /* Encapsulated styles */
                html,
                body {
                    margin-top: 0;
                    font-family: "Roboto Condensed", sans-serif;
                    font-optical-sizing: auto;
                    font-weight: 400;
                    font-style: normal;
                }

                a,
                a:visited {
                    color: white; /* Set both regular and visited links to white */
                }

                .divider {
                    height: 1px;
                    background-color: #ed1d61;
                    border:none;
                    margin-right:20px;
                }

                .font-monospac {
                    font-family: monospac, monospac;
                }

                #headline{
                    height: 40px;
                    line-height: 40px;
                    padding: 10px;
                    border-radius: 8px;
                    -webkit-border-radius: 8px 8px 0px 0px;
                    border-radius: 8px 8px 0px 0px; 
                }

                #log{
                    padding: 10px;
                    border-radius: 8px;
                }
                
                .post {
                    border-radius: 8px;
                    /*padding: 10px;*/
                    margin: 10px 0;
                    background-color: #121214;
                    color: hsl(228, 5%, 80%);
                    border-style: solid;
                    border-width: 1px;
                }
                svg{
                    vertical-align: middle;
                }

                .username {
                    font-weight: bold;
                }

                .timestamp {
                    color: #657786;
                    font-size: 12px;
                }

                
            </style>

            <div class="post">
                <div id="headline">
                    <span class="username" id="username"></span> 
                    <span class="timestamp" id="timestamp"></span>
                </div>
                <!--hr class="divider"-->
                <div id="log"></div>
            </div>
        `.trim(),this.shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){this.render(),this.shadowRoot.querySelectorAll("a").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.showStatsModal()})})}render(){var e=JSON.parse(this.getAttribute("message")),t=(new Date).toLocaleTimeString();this.shadowRoot.getElementById("username").innerHTML=e.username,this.shadowRoot.getElementById("timestamp").textContent=t,this.shadowRoot.getElementById("log").innerHTML=e.log,Object.hasOwn(e,"colorScheme")&&null!=e.colorScheme&&(this.shadowRoot.querySelector(".post").style.color=e.colorScheme.light,this.shadowRoot.querySelector(".post").style.borderColor=""+e.colorScheme.dark,this.shadowRoot.querySelector(".post").style.boxShadow="0px 0px 3px "+e.colorScheme.dark,this.shadowRoot.querySelector(".post").style.backgroundColor=e.colorScheme.background||"#121214")}showStatsModal(){var e=document.getElementById("statsModal");e?new bootstrap.Modal(e).show():console.error('Modal element with ID "statsModal" not found')}}customElements.define("social-post",SocialPostComponent);class SingleGamePage{constructor(e,t){this.headlineInning=null,this.awayScore,this.homeScore,this.root=View.createElement("div","game"+e+"Page","page hide"),this.root.innerHTML=`
            <h3 class="pb-4 d-flex flex-wrap row">
                <span class="col-6 row small col-lg-2">
                    <span class="col-6 headlineGameNumber small fw-light"></span>
                    <span class="col-6 headlineInning small fw-light  d-flex flex-wrap"></span>
                </span>
                
                <span class="col-12 col-lg-5 row headlineAwayInfo display-6  d-flex flex-wrap">
                    <span class="col-10 headlineAwayName d-flex flex-wrap"></span>
                    <span class="col-2 headlineAwayScore font-monospac d-flex flex-wrap"></span>
                </span>
                <span class="col-12 col-lg-5 row headlineHomeInfo display-6  d-flex flex-wrap">
                    <span class="col-10 headlineHomeName d-flex flex-wrap"></span>
                    <span class="col-2 headlineHomeScore font-monospac d-flex flex-wrap"></span>
                </span>
            </h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-4">Today's games are currently being played</div>
                <div class="col">
                    <button type="button" class="afternoonContinueButton bouncy btn btn-warning hide">CONTINUE</button>
                </div>
            </div>
            <div class="boxScore">
                <table class="table table-dark table-striped table-bordered text-center pb-4 shadow overflow-hidden my-4">
                    <thead>
                        <tr>
                            <th class="text-secondary">Team</th>
                            <th class="text-secondary">R</th>
                            <th class="text-secondary">H</th>
                            <th class="text-secondary">E</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="text-start">Away</td>
                            <td>0</td>
                            <td>0</td>
                            <td>0</td>
                        </tr>
                        <tr>
                            <td class="text-start">Home</td>
                            <td>0</td>
                            <td>0</td>
                            <td>0</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="messageFeedContainer" class="messageFeedContainer bg-333 shadow rounded-2">
                <div id="messageJumpButton" class="messageJumpButton rounded-3 text-center mx-auto bg-warning hide w-50">
                    Jump To Newest Update
                </div>
            </div>
        `.trim();var a=this.root.querySelector(".headlineGameNumber");this.headlineInning=this.root.querySelector(".headlineInning"),a.textContent=`Game ${e}: `,this.headlineInning.textContent=t.inning,this.root.querySelector(".headlineAwayName").innerHTML=t.awayNameWithLink,this.awayScore=this.root.querySelector(".headlineAwayScore"),this.awayScore.textContent=t.score.away,this.root.querySelector(".headlineHomeName").innerHTML=t.homeNameWithLink,this.homeScore=this.root.querySelector(".headlineHomeScore"),this.homeScore.textContent=t.score.home;let s=this.root.querySelector("#messageFeedContainer"),r=this.root.querySelector("#messageJumpButton");r.addEventListener("click",()=>{r.classList.add("hide"),s.scrollTo(0,s.scrollHeight)})}addGameMessage(e){var t,a;e.done||(t=this.root.querySelector("#messageFeedContainer"),(a=View.createElement("game-post")).setAttribute("game-message",JSON.stringify(e)),e=t.scrollTop,t.scrollHeight-t.clientHeight<=t.scrollTop?(t.appendChild(a),t.scrollTop=t.scrollHeight,this.root.querySelector("#messageJumpButton").classList.add("hide")):(t.appendChild(a),t.scrollTop=e,this.root.querySelector("#messageJumpButton").classList.remove("hide")))}update(e){this.headlineInning.textContent=e.inning,this.awayScore.textContent=e.score.away,this.homeScore.textContent=e.score.home,this.root.querySelector(".boxScore").innerHTML=e.boxScoreTable,this.addGameMessage(e)}render(){return this.root}}class LiveGamesPage{constructor(){this.root=View.createElement("div","liveGamesPage","page hide"),this.root.innerHTML=`
            <h3 id="liveGamesPageHeadline" class="pb-4  display-6 ">Live Games</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-4">Today's games are currently being played</div>
                <div class="col">
                    <button type="button" class="afternoonContinueButton bouncy btn btn-warning hide">CONTINUE</button>
                </div>
            </div>
            <div id="widgetsContainer" class="container"></div>
        `.trim(),this.widgets=[]}addGameWidgets(t){var a=this.root.querySelector("#widgetsContainer");for(let e=0;e<t.length;e++)this.widgets[e]=new GameWidgetComponent,this.widgets[e].render(t[e]),a.append(this.widgets[e])}render(){return this.root}updateGameWidgets(e){e.forEach((e,t)=>{this.widgets[t].render(e)})}}class SchedulePage{constructor(){this.root=View.createElement("div","schedulePage","page hide"),this.root.innerHTML=`
        <h3 id="schedulePageHeadline" class="pb-4  display-6 ">Season Schedule</h3>

        <div class="row">
            <div class="dateAndTime"></div>
            <div class="pageSummary col pb-4">
                Regular Season Games are listed below
            </div>
            <!--div class="col">
                <button type="button" class="afternoonContinueButton bouncy btn btn-warning hide">CONTINUE</button>
            </div-->
        </div>
        <div class="row">
            <div class="col-12 col-lg-4">
                        <!-- Day Labels -->
                <div class="week-labels d-grid grid-columns-7 text-center small mb-2">
                    <div>Sun</div>
                    <div>Mon</div>
                    <div>Tue</div>
                    <div>Wed</div>
                    <div>Thu</div>
                    <div>Fri</div>
                    <div>Sat</div>
                </div>
                        <!-- Tabs -->
                <nav>
                    <div id="scheduleTabs" class="nav nav-tabs d-grid grid-columns-7 border-0" role="tablist"></div>
                </nav>
            </div>
            <div class="col-12 col-lg-8">
                <!-- Tab Content -->
                <div id="scheduleTabContent" class="tab-content"></div>
            </div>
        </div>

        <!--div class="row" id="scheduleAccordion"-->



       
        </div>
        `.trim()}addSchedule(t,a){var s=this.root.querySelector("#scheduleTabs"),r=this.root.querySelector("#scheduleTabContent");s.innerHTML="",r.innerHTML="";for(let e=0;e<t.days.length;e++){var i,o=View.createElement("button",null,"nav-link border-0 p-0"),n=(o.type="button",o.setAttribute("data-bs-toggle","tab"),o.setAttribute("data-bs-target","#content"+(e+1)),o.setAttribute("aria-controls","content"+(e+1)),o.setAttribute("aria-selected",e===a?"true":"false"),o.textContent=""+(e+1),e===a&&o.classList.add("active"),s.appendChild(o),View.createElement("div",null,"tab-pane fade ms-lg-4 mt-4 mt-lg-0")),o=(n.id="content"+(e+1),n.setAttribute("role","tabpanel"),n.setAttribute("aria-labelledby","tab"+(e+1)),e===a&&n.classList.add("show","active"),r.appendChild(n),View.createElement("h6",null,"display-6 small","Day "+(e+1)));n.appendChild(o);for(i of t.printSchedule[e]){var l=View.createElement("div",null,"col-12",i);n.appendChild(l)}}}render(){return this.root}}class StandingsPage{constructor(){this.root=View.createElement("div","standingsPage","page hide"),this.root.innerHTML=`
        <h3 id="standingsPageHeadline" class="pb-4  display-6 ">Previous Standings</h3>

        <div class="row">
            <div class="dateAndTime"></div>
            <div class="pageSummary col pb-4">
                Today's games are currently being played. Standings will be updated once today's games are finished.
            </div>
            <!--div class="col">
                <button type="button" class="afternoonContinueButton bouncy btn btn-warning hide">CONTINUE</button>
            </div-->
        </div>
        <div id="standingsSection"></div>
        `.trim()}render(){return this.root}update(e,t,a,s){this.root.querySelector("#standingsSection").innerHTML='<div class="row"><div class="col-lg-6">'+e+'</div><div class="col-lg-6">'+t+a+s+"</div>"}}class AfternoonHomePage{constructor(){this.root=View.createElement("div","homePage","page"),this.root.innerHTML=`
            <h3 id="homePageHeadline" class="pb-4  display-6 ">Play Ball!</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-4">Today's games are currently being played</div>
                <div class="col">
                    <button type="button" class="afternoonContinueButton bouncy btn btn-warning hide">CONTINUE</button>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <table id="gameTable" class="pb-4 table table-dark table-striped shadow rounded-2 overflow-hidden  table-borderless">
                        <thead>
                            <tr class="m-0">
                                <th class="text-secondary">Live Games</th>
                            </tr>
                        </thead>
                        <tbody id="gameTableBody">
                            <!-- Rows will be dynamically added here -->
                        </tbody>
                    </table>
                </div>
            </div>
        `.trim()}addGameTableScores(e){let d=this.root.querySelector("#gameTableBody");d.innerHTML="",e.forEach((e,t)=>{var a=View.createElement("tr",null,"row mx-0"),s=View.createElement("div",null,"ps-3 py-0  col col-lg-12"),r=(s.textContent=e.inning||"N/A",View.createElement("td",null,"ps-3 py-0 col-lg-12 row m-0")),i=View.createElement("div",null,"m-0 p-0 col col-lg-6 row"),o=View.createElement("div",null,"m-0 p-0 col col-10 col-lg-9 "),n=(o.innerHTML=e.awayNameWithLink||"Away",View.createElement("div",null,"col col-1 col-lg-3 font-monospac")),o=(n.innerHTML=e.score.away||"0",i.append(o,n),View.createElement("td",null,"col col-lg-6 row")),n=View.createElement("div",null,"col col-10 col-lg-9"),l=(n.innerHTML=e.homeNameWithLink||"Home",View.createElement("div",null," col col-1  col-lg-3  font-monospac "));l.innerHTML=e.score.home||"0",o.append(n,l),r.append(i,o),a.appendChild(s),a.appendChild(r),d.appendChild(a)})}updateUserInfo=e=>{};update(e){}render(){return this.root}}class ShopHomePage{constructor(){this.root=View.createElement("div","homePage","page"),this.root.innerHTML=`
            <h3 id="homePageHeadline" class="pb-4  display-6 ">Trading Card Shop</h3>
            <div class="row pb-4">
                <div class="col-6 col-lg-4">
                    <div class="dateAndTime"></div>
                    <div class="pageSummary">Please buy some cards so that we may continue.</div>
                </div>
                <div class="col-6 col-lg-4 text-center">
                    <button type="button" id="openConfirmModalButton" class="bouncy btn btn-warning float-middle hide" data-bs-toggle="modal" data-bs-target="#confirmModal">CONTINUE</button>
                </div>
                <div class="col-12 col-lg-4 text-lg-end">
                    <span id="vpGoalDisplay" class=""></span>
                </div>
            </div>
            <div class="modal modal-dark" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel">
                <div class="modal-dialog">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Please Confirm</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>This is your last chance to buy cards today.</p>
                        <p>You are holding <span id="confirmModalCardCounter"></span> cards.</p>
                        <p>Are you ready to Play Ball?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Keep Shopping</button>
                        <button type="button" class="shopContinueButton bouncy btn btn-warning float-start" data-bs-dismiss="modal">CONTINUE</button>
                    </div>
                    </div>
                </div>
            </div>
            <div id="homePageCardContainer" class="card-body"></div>
            
            
        `.trim()}bindShopBuyCardButtonClick(a){var e=document.getElementsByClassName("buyCardButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{var t;"button"===e.target.localName?(t=e.target.value,a(t)):"span"===e.target.localName&&null!=e.target.parentElement&&(t=e.target.parentElement.value,a(t))})})}bindShopBuyUpgradeButtonClick(a){var e=document.getElementsByClassName("buyUpgradeButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{var t;"button"===e.target.localName?(t=e.target.value,a(t)):"span"===e.target.localName&&null!=e.target.parentElement&&(t=e.target.parentElement.value,a(t))})})}updateUserInfo=e=>{this.setConfirmModalCardCounter(e)};setConfirmModalCardCounter(e){this.root.querySelector("#confirmModalCardCounter").innerHTML=`<span class="font-monospac fs-4">${e.getCardsCount()}/${e.maxCards}</span><span class="noto">🃏</span>`}setShop(e){this.root.querySelector("#homePageCardContainer").innerHTML="",this.root.querySelector("#homePageCardContainer").append(e)}render(){return this.root}}class NightHomePage{constructor(){this.root=View.createElement("div","homePage","page"),this.root.innerHTML=`
            <h3 id="homePageHeadline" class="pb-5  display-6 ">News Alert</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-5">🆘 Special Announcement 🆘</div>
                <div class="col">
                    <button type="button" class="nightContinueButton bouncy btn btn-warning float-end">CONTINUE</button>
                </div>
            </div>
            <div id="messageFeedContainer" class="messageFeedContainer bg-333 shadow rounded-2 mb-5">
                <div id="messageJumpButton" class="messageJumpButton rounded-3 text-center mx-auto bg-warning hide w-50">
                    Jump To Newest Update
                </div>
            </div>
            
            
            
        `.trim();let e=this.root.querySelector("#messageFeedContainer"),t=this.root.querySelector("#messageJumpButton");t.addEventListener("click",()=>{t.classList.add("hide"),e.scrollTo(0,e.scrollHeight)})}addSocialPost(e){var t,a;null==e||Object.hasOwn(e,"done")&&e.done||(t=this.root.querySelector("#messageFeedContainer"),(a=View.createElement("social-post")).setAttribute("message",JSON.stringify(e)),e=t.scrollTop,t.scrollHeight-t.clientHeight<=t.scrollTop?(t.appendChild(a),t.scrollTop=t.scrollHeight,this.root.querySelector("#messageJumpButton").classList.add("hide")):(t.appendChild(a),t.scrollTop=e,this.root.querySelector("#messageJumpButton").classList.remove("hide")))}updateUserInfo=e=>{};render(){return this.root}}class PerformanceHomePage{constructor(){this.root=View.createElement("div","homePage","page"),this.root.innerHTML=`
            <h3 id="homePageHeadline" class="pb-5  display-6 ">Performance Review</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-5">Wow! What a Performance!</div>
                <div class="col">
                    <button type="button" class="performanceContinueButton bouncy btn btn-warning float-end hide">CONTINUE</button>
                </div>
            </div>
            <div id="performanceStats" class=" rounded-2 mb-5 row">

            </div>
            <div id="cardCrates" class="border rounded-2 mb-5 p-4 row hide">
                <h6 class="col-12 text-center p-4">Please Pick A Loot Crate So That We May Continue</h6>
            </div>
            <div id="upgradeCrates" class="alert-purple rounded-2 mb-5 p-4 row hide">
                <h6 class="col-12 text-center p-4">Please Gaze Into A Crystal Ball So That We May Continue</h6>
            </div>


            <div class="modal fade" id="lootcrateModal" tabindex="-1" role="dialog" data-bs-backdrop='static' aria-labelledby="lootcrateModalLabel" >
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title"><span class="noto">🔓</span>You Unlocked New Stuff!<span class="noto">🔓</span></h5>
                        </div>
                        <div class="modal-body text-center">
                            <p id="lootcrateDescription" class="text-center">Modal body text goes here.</p>
                        </div>
                        <div class="modal-footer">

                            <button type="button" class="performanceContinueButton bouncy btn btn-warning" data-bs-dismiss="modal" aria-label="Close">CONTINUE</button>
                        </div>
                    </div>
                </div>
            </div>
            

            
        `.trim()}updateUserInfo=e=>{};render(){return this.root}}class PromptToLoadHomePage{constructor(){this.root=View.createElement("div","homePage","page"),this.root.innerHTML=`
            <h3 id="homePageHeadline" class="pb-5  display-6 ">Load Saved Game?</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-5">Welcome back!</div>
                <div class="col">
                </div>
            </div>
            <div id="cardRow" class=" rounded-2 mb-5 row">
                <div class="card col" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title text-center">NEW GAME</h5>
                        <p class="card-text text-center">Delete your saved game.</p>
                        <div class="text-center"><button type="button" id="startOverButton" class="btn btn-danger">START OVER</a></div>
                    </div>
                </div>
                <div class="card col" >
                    <div class="card-body">
                        <h5 class="card-title text-center">LOAD GAME</h5>
                        <p class="card-text text-center">Continue your previous game.</p>
                        <div class="text-center"><button type="button" id="promptToLoadContinueButton" class="bouncy btn btn-warning">CONTINUE</button></div>
                    </div>
                </div>
            </div>
           

            

            
        `.trim()}updateUserInfo=e=>{};render(){return this.root}}let hats=["🎩","👓","👒","🧢","🎀","🕶️","🥽","👑","🎓",""],faces=["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺","😚","😙","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😏","😒","🙄","😬","🤥","😌","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","🤯","🤠","🥳","😎","🤓","🧐","😕","😟","🙁","☹","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","😤","😡","😠","🤬","😈","👿","💀","☠","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾","🐶","🐱","🐯","🐴","🐮","🐷","🐭","🐰","🐸","🐲","🐔","🐼","🐨","🐻‍❄️","🐻","🐹","🦓","🦄","🫎","🦁","🦝","🦊","🐺","🗿"],shirts=["👕","👔","🎽","👗","🦺","🥼","🧥","👚","👘","🥋","🥻","🩱","👙","🩻","🟥","🟧","🟨","🟩","🟦","🟪","🟫","⬛","⬜","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇵🇷","🇵🇸","🇯🇲","🇲🇽","🇨🇦","🏴","🇺🇦","🔰","🆒","☮️","🛍️","❤️","🩷","🧡","💛","💚","💙","🩵","💜","🤎","🖤","🩶","🤍"],bottoms=["👖","👢","🩳","👟","🩲","🧦","👠","‼️","⁉️","👥","👣","🪜","⛓️","🪇","🩰","🌪️","⛩️","👯","🍴","🥂","🍻","🧑‍🤝‍🧑","👭","👬","🙏","🫁","🦷","🟥","🟧","🟨","🟩","🟦","🟪","🟫","⬛","⬜"],accessories=["⚾","🧸","🛡️","🎷","🥤","🐕","🌭","🍆","🍑","🔮","🐈","🌽","🃏","🏆","🐕‍🦺","🏹","🍿","🐩","🔫","🥜","🪓","🍌","📷","🦮","🗡️","📱","🌹","☂️","☔","⛱️","🍄","⭐","","🍇","🍈","🍉","🍊","🍋","🍋‍🟩","🍍","🥭","🍎","🍏","🍐","🍒","🍓","🫐","🥝","🍅","🫒","🥥","🥑","🥔","🥕","🌶️","🫑","🥒","🥬","🥦","🧄","🧅","🫘","🌰","🫚","🫛","🍄‍🟫","🍞","🥐","🥖","🫓","🥨","🥯","🥞","🧇","🧀","🍖","🍗","🥩","🥓","🍔","🍟","🍕","🥪","🌮","🌯","🫔","🥙","🧆","🥚","🍳","🥘","🍲","🫕","🥣","🥗","🧈","🧂","🥫","🍱","🍘","🍙","🍚","🍛","🍜","🍝","🍠","🍢","🍣","🍤","🍥","🥮","🍡","🥟","🥠","🥡","🦀","🦞","🦐","🦑","🦪","🍦","🍧","🍨","🍩","🍪","🎂","🍰","🧁","🥧","🍫","🍬","🍭","🍮","🍯","🍼","🥛","☕","🫖","🍵","🍶","🍾","🍷","🍸","🍹","🍺","🥂","🥃","🫗","🧋","🧃","🧉","🧊","🥢","🍽️","🍴","🥄","🔪","🫙"];class UserPage{constructor(){var e=new PlaceholderCard;this.root=View.createElement("div","userPage","page hide"),this.root.innerHTML=`
            <h3 id="userPageHeadline" class="pb-4 display-6 ">User</h3>
            <div class="row">
                <div class="dateAndTime"></div>
                <div class="pageSummary col pb-4">You are user</div>
                <!--div class="col">
                    <button type="button" class="afternoonContinueButton bouncy btn btn-warning">CONTINUE</button>
                </div-->
            </div>
            <div class="container my-0 py-0">
                <div class="row text-center fs-4 p-1 mb-4">
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="The player's current experience level.">Level</a>
                        <div><span id="userLevel" class="font-monospac">3</span><span class="noto">🚀</span></div>
                    </div>
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Victory points required to level up. Victory Points are Red Magic multiplied by Green Magic multiplied by Blue Magic.">VP/Goal</a>
                        <div><span id="userVP" class="font-monospac">3</span>/<span id="vpGoal" class="font-monospac">3</span><span class="noto">👑</span></div>
                    </div>

                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="The player's remaining lives.">Lives</a>
                        <div><span id="userLives" class="font-monospac">3</span><span class="noto">🩸</span></div>
                    </div>

                    </div>
                    <div class="row text-center small p-1 mb-4">
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Money. Spend it to buy cards. Earn magic which generates victory points.">Money</a>
                        <div><span id="money" class="font-monospac">50</span><span class="noto">🪙</span></div>
                    </div>
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Red Magic Points used for fire, love, blood, etc.">Red MP</a>
                        <div><span id="redMagic" class="font-monospac">0</span><span class="noto">🔥</span></div>
                    </div>
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Green Magic Points used for plants, nature, healing, etc.">Green MP</a>
                        <div><span id="greenMagic" class="font-monospac">0</span><span class="noto">🌵</span></div>
                    </div>
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Blue Magic Points used for water, cold, the sky, etc.">Blue MP</a>
                        <div><span id="blueMagic" class="font-monospac">0</span><span class="noto">💧</span></div>
                    </div>
                    <div class="col">
                        <a href="#" class="text-decoration-none pe-none link-secondary" data-toggle="tooltip" title="Trading Cards. Number the player currently holds and the maximum number the player can hold.">Cards</a>
                        <div><span class="cardsCount font-monospac">0</span>/<span class="maxCards font-monospac">5</span><span class="noto">🃏</span></div>
                    </div>

                </div>

                <ul class="nav nav-tabs  nav-fill" id="userTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link link-secondary active" id="cards-tab" data-bs-toggle="tab" data-bs-target="#cards" 
                        type="button" role="tab" aria-controls="cards" aria-selected="false">Cards</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link link-secondary" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" 
                        type="button" role="tab" aria-controls="profile" aria-selected="true">Profile</button>
                    </li>
                    
                    <li class="nav-item" role="presentation">
                        <button class="nav-link link-secondary" id="feed-tab" data-bs-toggle="tab" data-bs-target="#feedTab" 
                        type="button" role="tab" aria-controls="feedTab" aria-selected="false">Feed</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link link-secondary" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" 
                        type="button" role="tab" aria-controls="settings" aria-selected="false">Settings</button>
                    </li>
                </ul>

                <div class="tab-content" id="userTabContent">

                    <!-- Cards Tab -->
                    <div class="tab-pane fade show active" id="cards" role="tabpanel" aria-labelledby="cards-tab">
                        <div class="card text-secondary shadow pb-0 mt-0">
                            <div class="card-header text-center">
                                <h3>Cards 
                                <span class="cardsCount font-monospac">0</span>/<span class="maxCards font-monospac">5</span><span class="noto">🃏</span>
                            </div>
                            <div id="userPageCardContainer" class="card-body row p-4">
                                <!-- Cards content dynamically inserted here -->
                                ${e.render()}
                            </div>
                        </div>
                    </div>
                    <!-- Profile Tab -->
                    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        <div class="card text-secondary shadow pb-0 mt-0">
                            <div class="card-header text-center">
                                <h3><span id="userName">John Doe</span></h3>
                            </div>
                            <div class="card-body">
                                User stats go here

                                <div class="container py-5 bg-000 rounded-2">
                                    <div class="text-center fs-3">
                                        Character Creator
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  text-center ">
                                            <figure class="figure">
                                                <canvas id="emojiCanvas" class="border border-secondary mb-0 pb-0"></canvas>
                                                <button id="emojiCanvasButton" class="btn btn-outline-light">Click to download your custom character</button>
                                            </figure>
                                        </div>
                                    

                                    
                                        <!-- Hat Sliders  col  -->
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  mb-4">
                                            <h5>Hat</h5>
                                            <div class="mb-0 small">
                                                <label for="hatStyle" class="form-label">Hat Style</label>
                                                <input type="range" class="form-range border-0 custom-range" id="hatStyle" min="0" max="100" step="1" value="0">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="hatX" class="form-label">Hat X</label>
                                                <input type="range" class="form-range border-0 custom-range" id="hatX" min="-5" max="23" step="1" value="10">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="hatY" class="form-label">Hat Y</label>
                                                <input type="range" class="form-range border-0 custom-range" id="hatY" min="-50" max="50" step="1" value="3">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="hatScale" class="form-label">Hat Scale</label>
                                                <input type="range" class="form-range border-0 custom-range" id="hatScale" min="0.1" max="20" step="1" value="4">
                                            </div>
                                        </div>

                                        <!-- Face Sliders -->
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  mb-4">
                                            <h5>Face</h5>
                                            <div class="mb-0 small">
                                                <label for="faceStyle" class="form-label">Face Style</label>
                                                <input type="range" class="form-range border-0 custom-range" id="faceStyle" min="0" max="150" step="1" value="0">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="faceX" class="form-label">Face X</label>
                                                <input type="range" class="form-range border-0 custom-range" id="faceX" min="-5" max="23" step="1" value="10">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="faceY" class="form-label">Face Y</label>
                                                <input type="range" class="form-range border-0 custom-range" id="faceY" min="-50" max="50" step="1" value="12">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="faceScale" class="form-label">Face Scale</label>
                                                <input type="range" class="form-range border-0 custom-range" id="faceScale" min="0.1" max="20" step="1" value="14">
                                            </div>
                                        </div>


                                        <!-- Shirt Sliders -->
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  mb-4">
                                            <h5>Shirt</h5>
                                            <div class="mb-0 small">
                                                <label for="shirtStyle" class="form-label">Shirt Style</label>
                                                <input type="range" class="form-range border-0 custom-range" id="shirtStyle" min="0" max="100" step="1" value="0">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="shirtX" class="form-label">Shirt X</label>
                                                <input type="range" class="form-range border-0 custom-range" id="shirtX" min="-5" max="23" step="1" value="10">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="shirtY" class="form-label">Shirt Y</label>
                                                <input type="range" class="form-range border-0 custom-range" id="shirtY" min="-50" max="50" step="1" value="20">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="shirtScale" class="form-label">Shirt Scale</label>
                                                <input type="range" class="form-range border-0 custom-range" id="shirtScale" min="0.1" max="20" step="1" value="6">
                                            </div>
                                        </div>

                                        <!-- Bottom Sliders -->
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  mb-4">
                                            <h5>Bottoms</h5>
                                            <div class="mb-0 small">
                                                <label for="bottomStyle" class="form-label">Bottoms Style</label>
                                                <input type="range" class="form-range border-0 custom-range" id="bottomStyle" min="0" max="100" step="1" value="0">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="bottomX" class="form-label">Bottoms X</label>
                                                <input type="range" class="form-range border-0 custom-range" id="bottomX" min="-5" max="23" step="1" value="10">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="bottomY" class="form-label">Bottoms Y</label>
                                                <input type="range" class="form-range border-0 custom-range" id="bottomY" min="-50" max="50" step="1" value="26">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="bottomScale" class="form-label">Bottoms Scale</label>
                                                <input type="range" class="form-range border-0 custom-range" id="bottomScale" min="0.1" max="20" step="1" value="6">
                                            </div>
                                        </div>

                                        <!-- Item Sliders -->
                                        <div class="col-sm-6 col-lg-4 col-xxl-2  mb-4">
                                            <h5>Item</h5>
                                            <div class="mb-0 small">
                                                <label for="accessoryStyle" class="form-label">Item Style</label>
                                                <input type="range" class="form-range border-0 custom-range" id="accessoryStyle" min="0" max="200" step="1" value="0">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="accessoryX" class="form-label">Item X</label>
                                                <input type="range" class="form-range border-0 custom-range" id="accessoryX" min="-5" max="23" step="1" value="15">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="accessoryY" class="form-label">Item Y</label>
                                                <input type="range" class="form-range border-0 custom-range" id="accessoryY" min="-50" max="50" step="1" value="26">
                                            </div>
                                            <div class="mb-0 small">
                                                <label for="accessoryScale" class="form-label">Item Scale</label>
                                                <input type="range" class="form-range border-0 custom-range" id="accessoryScale" min="0.1" max="20" step="1" value="7">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                                 <!-- Feed Tab -->
                    <div class="tab-pane fade" id="feedTab" role="tabpanel" aria-labelledby="feed-tab">
                        <div class="card text-secondary shadow pb-0 mt-0">
                            <div class="card-header text-center">
                                <h3>Feed</h3>
                            </div>
                            <div class="card-body">
                                <div id="messageFeedContainer" class="messageFeedContainer bg-333 shadow rounded-2">
                                    <div id="messageJumpButton" class="messageJumpButton rounded-3 text-center mx-auto bg-warning hide w-50">
                                        Jump To Newest Update
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Settings Tab -->
                    <div class="tab-pane fade" id="settings" role="tabpanel" aria-labelledby="settings-tab">
                        <div class="card text-secondary  shadow pb-0 mt-0">
                            <div class="card-header text-center">
                                <h3>Settings</h3>
                            </div>
                            <div class="card-body">
                                <div class="container p-4">
                                    <div class="form-check form-switch pb-4">
                                        <input 
                                            class="form-check-input" 
                                            type="checkbox" 
                                            role="switch" 
                                            id="themeSwitch" 
                                            aria-label="Toggle between Light and Dark Mode">
                                        <label class="form-check-label" for="themeSwitch">Dark Mode / Light Mode</label>
                                    </div>

                                    <div class="container my-5 p-3 rounded-2 border ">
                                        <label for="fontSizeRange" class="form-label">Adjust Text Size —</label><span class="mt-2"> Current Size: <span id="fontSizeValue">100%</span></span>
                                        <input type="range" class="form-range border-0" id="fontSizeRange" min="70" max="130" step="10" value="100">
                                        
                                    </div>

                                
                                    <div class="form-floating pb-4">
                                        <select class="form-select" id="speedSelect" aria-label="Speed selection">
                                            <option value="500">⏩ FAST</option>
                                            <option value="1000">⏩ Hedgehog</option>
                                            <option value="2000">⏩ Tiger</option>
                                            <option value="3000">⏩ Bison </option>
                                            <option value="4000" selected>NORMAL</option>
                                            <option value="5000">⏪ Cow</option>
                                            <option value="6000">⏪ Crab</option>
                                            <option value="7000">⏪ Worm</option>
                                            <option value="8000">⏪ SLOW</option>
                                        </select>
                                        <label for="speedSelect">Select Speed</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            `.trim(),this.canvas=this.root.querySelector("#emojiCanvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.width=20,this.canvas.height=30,this.sliders={hatStyle:this.root.querySelector("#hatStyle"),hatX:this.root.querySelector("#hatX"),hatY:this.root.querySelector("#hatY"),hatScale:this.root.querySelector("#hatScale"),faceStyle:this.root.querySelector("#faceStyle"),faceX:this.root.querySelector("#faceX"),faceY:this.root.querySelector("#faceY"),faceScale:this.root.querySelector("#faceScale"),shirtStyle:this.root.querySelector("#shirtStyle"),shirtX:this.root.querySelector("#shirtX"),shirtY:this.root.querySelector("#shirtY"),shirtScale:this.root.querySelector("#shirtScale"),bottomStyle:this.root.querySelector("#bottomStyle"),bottomX:this.root.querySelector("#bottomX"),bottomY:this.root.querySelector("#bottomY"),bottomScale:this.root.querySelector("#bottomScale"),accessoryStyle:this.root.querySelector("#accessoryStyle"),accessoryX:this.root.querySelector("#accessoryX"),accessoryY:this.root.querySelector("#accessoryY"),accessoryScale:this.root.querySelector("#accessoryScale")},this.canvas.addEventListener("click",this.getImage),this.root.querySelector("#emojiCanvasButton").addEventListener("click",this.getImage),document.addEventListener("DOMContentLoaded",()=>{let e=document.getElementById("themeSwitch"),t=document.documentElement;e.checked=!1,t.setAttribute("data-bs-theme","dark"),e.addEventListener("change",()=>{e.checked?(t.setAttribute("data-bs-theme","light"),e.nextElementSibling.textContent="Light Mode"):(t.setAttribute("data-bs-theme","dark"),e.nextElementSibling.textContent="Dark Mode")})})}addMessageFeedPost(e){var t=this.root.querySelector("#userMessageFeedContainer"),e=((new Date).toLocaleTimeString(),View.createElement("div",null,"p-0",e)),a=t.scrollTop;t.scrollHeight-t.clientHeight<=t.scrollTop?(t.appendChild(e),t.scrollTop=t.scrollHeight,this.root.querySelector("#messageJumpButton").classList.add("hide")):(t.appendChild(e),t.scrollTop=a,this.root.querySelector("#messageJumpButton").classList.remove("hide"))}bindCharacterSliders(t){Object.values(this.sliders).forEach(e=>{e.addEventListener("input",e=>{t(this.sliders)})})}bindSellButtons(a){var e=this.root.getElementsByClassName("sellButton");Array.from(e).forEach(e=>{e.addEventListener("click",e=>{var t;"button"===e.target.localName?(t=e.target.value,a(t)):"span"===e.target.localName&&(t=e.target.parentElement.value,a(t))})})}bindSpeedSelect(t){this.root.querySelector("#speedSelect"),speedSelect.addEventListener("change",e=>{e=e.target.value;t(e)})}drawCharacter(e){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.textBaseline="middle",this.ctx.textAlign="center",Object.values(e.character).forEach(({emoji:e,x:t,y:a,scale:s})=>{this.ctx.font=s+"px 'Noto Color Emoji'",this.ctx.fillText(e,t,a)})}getImage=()=>{this.ctx2||(e=document.createElement("canvas"),this.ctx2=e.getContext("2d"));var e=this.canvas.toDataURL(),d=new Image;d.onload=()=>{var e=document.createElement("canvas"),e=(e.width=d.width,e.height=d.height,e.getContext("2d")),t=(e.drawImage(d,0,0),e.getImageData(0,0,d.width,d.height).data),e=this.ctx2.canvas;e.width=10*d.width,e.height=10*d.height;for(var a=0;a<d.width;++a)for(var s=0;s<d.height;++s){var r=4*(s*d.width+a),i=t[r],o=t[1+r],n=t[2+r],r=t[3+r];this.ctx2.fillStyle=`rgba(${i},${o},${n},${r/255})`,this.ctx2.fillRect(10*a,10*s,10,10)}var e=e.toDataURL(),l=document.createElement("a");l.download="canvas_image.png",l.href=e,l.click()},d.src=e};updateUserCards(t){var e;this.root.querySelector("#userPageCardContainer").innerHTML="",0==t.getCardsCount()&&(this.root.querySelector("#userPageCardContainer").innerHTML=`
            <span class="col row">
                <span id="userCardSlotZ" class="col text-center">
                
                </span>
                <div class="col-12 text-center pb-5">
                    <button id="userCardSlotZButton" type="button" class="shopButton btn btn-outline-danger" disabled>SELL ME</button>
                </div>
            </span>
            `,e=new PlaceholderCard,this.root.querySelector("#userCardSlotZ").append(e.render()),document.getElementById("userCardSlotZButton").disabled=!0,document.getElementById("userCardSlotZButton").textContent="SOLD",document.getElementById("userCardSlotZButton").classList.remove("btn-warning"),document.getElementById("userCardSlotZButton").classList.add("btn-black"),document.getElementById("userCardSlotZ").style.opacity=.25);for(let e=0;e<t.getCardsCount();e++)this.root.querySelector("#userPageCardContainer").innerHTML+=`
            <span class="col row">
                <span id="userCardSlot${e}" class="col text-center">
                </span>
                <div class="col-12 text-center pb-5">
                    <button id="userCardSlot${e}Button" type="button" value=${e} class="sellButton btn btn-outline-danger">SELL ME +${t.cards[e].sellValue}<span class="noto">🪙</span></button>
                </div>
            </span>
            `,this.root.querySelector("#userCardSlot"+e).append(t.cards[e].render())}markUserCardSold(e){document.getElementById("userCardSlot"+e+"Button").disabled=!0,document.getElementById("userCardSlot"+e+"Button").textContent="SOLD",document.getElementById("userCardSlot"+e+"Button").classList.remove("btn-warning"),document.getElementById("userCardSlot"+e+"Button").classList.add("btn-black"),document.getElementById("userCardSlot"+e).style.opacity=.25}updateUserInfo(t){this.root.querySelector("#userName").innerText=t.name,t.valuables.lives%1==0?this.root.querySelector("#userLives").innerText=t.valuables.lives.toFixed(0):this.root.querySelector("#userLives").innerText=t.valuables.lives.toFixed(1),this.root.querySelector("#userLevel").innerText=t.level,this.root.querySelector("#userVP").innerHTML=t.getVictoryPoints().toLocaleString(),this.root.querySelector("#vpGoal").innerText=t.getGoal().toLocaleString(),this.root.querySelector("#money").innerText=t.valuables.money,this.root.querySelector("#greenMagic").innerText=t.valuables.greenMagic,this.root.querySelector("#redMagic").innerText=t.valuables.redMagic,this.root.querySelector("#blueMagic").innerText=t.valuables.blueMagic,this.root.querySelector("#speedSelect").value=t.favoriteSpeed,this.root.querySelectorAll(".cardsCount").forEach(e=>{e.innerText=t.getCardsCount()}),this.root.querySelectorAll(".maxCards").forEach(e=>{e.innerText=t.maxCards})}render(){return this.root}}class PromptToLoadView extends View{constructor(){super(),document.getElementById("navbar").classList.add("hide"),this.homePage=new PromptToLoadHomePage,this.pageContainer.append(this.homePage.render()),this.schedulePage=new SchedulePage,this.pageContainer.append(this.schedulePage.render()),this.standingsPage=new StandingsPage,this.pageContainer.append(this.standingsPage.render()),document.getElementById("loader").style.display="none"}bindPromptToLoadContinueButtonClick(t){document.getElementById("promptToLoadContinueButton").addEventListener("click",e=>{"button"===e.target.localName&&t()})}bindStartOverButton(t){document.getElementById("startOverButton").addEventListener("click",e=>{"button"===e.target.localName&&t()})}setupPromptToLoadView(e){this.setTime(e),this.navBar.setCounters(e.users[0]),this.userPage.updateUserCards(e.users[0]),this.userPage.updateUserInfo(e.users[0]),e.users[0].hasClickedUserIcon&&document.getElementById("userIconNag").classList.add("hide"),e.world.newsTicker.setItems(["WELCOME BACK","WHERE HAVE YOU BEEN?","DID YOU MISS ME?"]),this.navBar.renderTicker(e.world.newsTicker.items);var t=document.getElementById("newsTickerRibbon").clientWidth,t=(e.world.newsTicker.setSpeed(t/100),this.schedulePage.addSchedule(e.world.league.getSchedule(e.world.year),e.world.day),this.updateStandings(e),document.getElementsByClassName("nightContinueButton"));Array.from(t).forEach(e=>{e.classList.add("hide")})}}class ShopView extends View{constructor(){super(),this.homePage=new ShopHomePage,this.pageContainer.append(this.homePage.render()),this.schedulePage=new SchedulePage,this.pageContainer.append(this.schedulePage.render()),this.standingsPage=new StandingsPage,this.pageContainer.append(this.standingsPage.render()),setTimeout(()=>{document.getElementById("openConfirmModalButton").classList.remove("hide")},5e3)}getCardDisplayCase(e){var t=e.getCardsOnDisplay(),a=e.getUpgradesOnDisplay(),e=View.createElement("div","shopCardDisplayCase",""),s=View.createElement("div","publicDisplay"," row p-5 mb-5 gx-5 bg-222 rounded-3 shadow");for(let e=0;e<t.length;e++)null!=t[e]&&(s.innerHTML+=`
                <span class="col row ">
                    <span id="shopCardSlot${e}" class="cardSlot col-12 text-center">
                    </span>
                    <div class="col-12 text-center pb-5">
                        <button id="shopCardSlot${e}Button" type="button" value=${e} class="buyCardButton btn btn-outline-warning">BUY ME -${t[e].cost}<span class="noto">🪙</span></button>
                    </div>
                </span>
                `,s.querySelector("#shopCardSlot"+e).append(t[e].render()));var r=View.createElement("hr",null,"my-5 py-5 border-dark"),i=View.createElement("div","forbiddenUpgradesHeadline","mt-5 p-5 text-center text-secondary opacity-50",'<span class="noto opacity-25">🪬</span> Forbidden Upgrades <span class="noto opacity-25">🪬</span>'),o=View.createElement("div","secretDisplay"," row mt-5 p-5 gx-5 rounded-3 shadow");for(let e=0;e<a.length;e++)null!=a[e]&&(o.innerHTML+=`
                <span class="col row fixed-width-300 fixed-height-300 ">
                    <div id="secretCardSlot${e}" class="secretCardSlot col-12 text-center position-relative">
                    </div>
                    <div class="col-12 text-center pb-5">
                        <button id="secretCardSlot${e}Button" type="button" value=${e} 
                            class="buyUpgradeButton btn btn-outline-secondary pulsing-purple">BUY ME -${a[e].cost}<span class="noto">🪙</span></button>
                    </div>
                    
                </span>
                `,o.querySelector("#secretCardSlot"+e).append(a[e].render()));return e.append(s,r,i,o),e}setupShopView(e){this.setTime(e),this.userPage.updateUserInfo(e.users[0]),this.userPage.updateUserCards(e.users[0]),this.navBar.setCounters(e.users[0]),this.homePage.setConfirmModalCardCounter(e.users[0]),e.users[0].hasClickedUserIcon&&document.getElementById("userIconNag").classList.add("hide"),this.schedulePage.addSchedule(e.world.league.getSchedule(e.world.year),e.world.day);var t=this.getCardDisplayCase(e.world.shop),t=(this.homePage.setShop(t),this.homePage.root.querySelector("#vpGoalDisplay")),t=(0==e.world.day?t.innerHTML=`GOAL: Earn <span id="vpGoalDisplayAmount" class="font-monospac fs-4">${e.users[0].getGoal().toLocaleString()}</span> VP<span class="noto">👑</span> to level up. You currently have 
        <span class="text-nowrap">
            <span class="font-monospac">${e.users[0].valuables.redMagic}</span>
            <span class="noto">🔥</span>&nbsp;&times;&nbsp;
            <span class="font-monospac">${e.users[0].valuables.greenMagic}</span>
            <span class="noto">🌵</span>&nbsp;&times;&nbsp;
            <span class="font-monospac">${e.users[0].valuables.blueMagic}</span>
            <span class="noto">💧</span>&nbsp;= <span class="font-monospac">${e.users[0].getVictoryPoints()}</span>
            <span class="noto">👑</span>
        </span>`.trim():t.innerHTML=`GOAL: <span id="vpGoalDisplayAmount" class="font-monospac fs-5">${e.users[0].getGoal().toLocaleString()}</span> VP<span class="noto">👑</span>`.trim(),this.updateStandings(e),e.world.newsTicker.setShopText(),this.navBar.renderTicker(e.world.newsTicker.items),document.getElementById("newsTickerRibbon").clientWidth);e.world.newsTicker.setSpeed(t/100)}markShopCardSold(e){document.getElementById("shopCardSlot"+e+"Button").disabled=!0,document.getElementById("shopCardSlot"+e+"Button").textContent="SOLD",document.getElementById("shopCardSlot"+e+"Button").classList.remove("btn-warning"),document.getElementById("shopCardSlot"+e+"Button").classList.add("btn-black"),document.getElementById("shopCardSlot"+e).style.opacity=.25}markShopUpgradeSold(e){document.getElementById("secretCardSlot"+e+"Button").disabled=!0,document.getElementById("secretCardSlot"+e+"Button").textContent="SOLD",document.getElementById("secretCardSlot"+e+"Button").classList.remove("btn-warning"),document.getElementById("secretCardSlot"+e+"Button").classList.add("btn-black"),document.getElementById("secretCardSlot"+e).style.opacity=.25,document.getElementById("secretCardSlot"+e+"Button").style.opacity=.25}prependNewCard(e,t){var a=document.getElementById("publicDisplay"),s=View.createElement("span",null,"col row "),e=e.cardsOnDisplay.length-1;s.innerHTML=`

                <span id="shopCardSlot${e}" class="col-12 text-center">
                </span>
                <div class="col-12 text-center pb-5">
                    <button id="shopCardSlot${e}Button" type="button" value=${e} class="buyCardButton btn btn-outline-warning">BUY ME -${t.cost}<span class="noto">🪙</span></button>
                </div>
            `,a.prepend(s),a.querySelector("#shopCardSlot"+e).append(t.render())}prependNewUpgrade(e,t){var a=document.getElementById("secretDisplay"),s=View.createElement("span",null,"col row fixed-width-300 fixed-height-300"),e=e.upgradesOnDisplay.length-1;s.innerHTML=`
            <div id="secretCardSlot${e}" class="secretCardSlot col-12 text-center position-relative">
            </div>
            <div class="col-12 text-center pb-5">
                <button id="secretCardSlot${e}Button" type="button" value=${e} 
                    class="buyUpgradeButton btn btn-outline-secondary pulsing-purple">BUY ME -${t.cost}<span class="noto">🪙</span></button>
            </div>
        `,a.prepend(s),a.querySelector("#secretCardSlot"+e).append(t.render())}}class AfternoonView extends View{constructor(){super(),this.addMenuItemLive(),this.homePage=new AfternoonHomePage,this.pageContainer.append(this.homePage.render()),this.standingsPage=new StandingsPage,this.pageContainer.append(this.standingsPage.render()),this.schedulePage=new SchedulePage,this.pageContainer.append(this.schedulePage.render()),this.liveGamesPage=new LiveGamesPage,this.gameWidgetContainer=View.createElement("div","game-widget-container","container"),this.gameWidgetItems=[],this.pageContainer.append(this.liveGamesPage.render()),this.singleGamePages=[]}addAllSingleGamePages(e){var t=e.getGameDetails();for(let e=0;e<t.length;e++)this.singleGamePages[e]=new SingleGamePage(e,t[e]),this.pageContainer.append(this.singleGamePages[e].render())}addMenuItemLive(){var e=View.createElement("li","liveGamesPageMenuItem","nav-item bg-transparent pt-1"),t=(e.setAttribute("role","button"),View.createElement("a",null,"nav-link bg-transparent border-0 link-light link-opacity-25 link-opacity-100-hover"));t.dataset.linkToPageId="liveGamesPage",t.innerHTML=`<span class="material-symbols-outlined size-24">
stadium
</span>`,e.append(t),this.navBar.add(e)}addMenuItemSingleGamePages(e){var t=e.getGameDetails(),a=View.createElement("li","dropdownNavItem","nav-item dropdown pt-1");a.innerHTML=`
            <a class="nav-link dropdown-toggle link-light link-opacity-25 link-opacity-100-hover" href="#" role="button" data-bs-toggle="dropdown"><span class="material-symbols-outlined">
sports_baseball
</span></a>
            <ul id="singleGamesDropdownMenu" class="dropdown-menu bg-dark shadow">
            </ul>
        `.trim();for(let e=0;e<t.length;e++){var s=View.createElement("li","game"+e+"PageMenuItem","bg-dark"),r=(s.setAttribute("role","button"),View.createElement("a",null,"dropdown-item bg-transparent border-0 link-light link-opacity-25 link-opacity-100-hover"));r.dataset.linkToPageId="game"+e+"Page",r.innerHTML=`<span class="size-48">
            ${t[e].awayTeam} @ ${t[e].homeTeam}
      </span>`,s.append(r),a.querySelector("#singleGamesDropdownMenu").append(s),this.navBar.add(a)}}setupAfternoonView(e){this.setTime(e),this.navBar.setCounters(e.users[0]),this.userPage.updateUserCards(e.users[0]),this.userPage.updateUserInfo(e.users[0]),this.userPage.drawCharacter(e.users[0]),e.users[0].hasClickedUserIcon&&document.getElementById("userIconNag").classList.add("hide"),this.addMenuItemSingleGamePages(e.world);var t=e.world.getGameDetails(),a=t.map(e=>e.scoreString),a=(e.world.newsTicker.setItems(a),this.navBar.renderTicker(e.world.newsTicker.items),document.getElementById("newsTickerRibbon").clientWidth);e.world.newsTicker.setSpeed(a/100),this.homePage.addGameTableScores(t),this.schedulePage.addSchedule(e.world.league.getSchedule(e.world.year),e.world.day),this.updateStandings(e),this.liveGamesPage.addGameWidgets(t),this.addAllSingleGamePages(e.world)}showTodayIsDone(){this.homePage.root.querySelector("#homePageHeadline").textContent="Today is Done",this.standingsPage.root.querySelector("#standingsPageHeadline").textContent="Current Standings",this.liveGamesPage.root.querySelector("#liveGamesPageHeadline").textContent="(Formerly) Live Games";var e=document.getElementsByClassName("pageSummary"),e=(Array.from(e).forEach(e=>{e.innerHTML="All of today's games have finished!"}),document.getElementsByClassName("afternoonContinueButton"));Array.from(e).forEach(e=>{e.classList.remove("hide")})}}class NightView extends View{constructor(){super(),this.homePage=new NightHomePage,this.pageContainer.append(this.homePage.render()),this.schedulePage=new SchedulePage,this.pageContainer.append(this.schedulePage.render()),this.standingsPage=new StandingsPage,this.pageContainer.append(this.standingsPage.render())}setupNightView(e){this.setTime(e),this.navBar.setCounters(e.users[0]),this.userPage.updateUserCards(e.users[0]),this.userPage.updateUserInfo(e.users[0]),e.users[0].hasClickedUserIcon&&document.getElementById("userIconNag").classList.add("hide"),e.world.newsTicker.setItems(["🆘 PLEASE STAY TUNED FOR A SPECIAL ANNOUNCEMENT 🆘","🆘 PLEASE STAY TUNED FOR A SPECIAL ANNOUNCEMENT 🆘"]),this.navBar.renderTicker(e.world.newsTicker.items);var t=document.getElementById("newsTickerRibbon").clientWidth,t=(e.world.newsTicker.setSpeed(t/100),this.schedulePage.addSchedule(e.world.league.getSchedule(e.world.year),e.world.day),this.updateStandings(e),document.getElementsByClassName("nightContinueButton"));Array.from(t).forEach(e=>{e.classList.add("hide")})}}class PerformanceView extends View{constructor(e){super(),this.homePage=new PerformanceHomePage,this.pageContainer.append(this.homePage.render()),this.schedulePage=new SchedulePage,this.pageContainer.append(this.schedulePage.render()),this.standingsPage=new StandingsPage,this.pageContainer.append(this.standingsPage.render()),e.world.league.isRegularSeasonDone(e.world.year,e.world.day)?this.setSeasonOver(e):this.getJudgement(e)}addFailureAlerts(e){this.homePage.root.querySelector(".pageSummary").innerText=e.world.day%2==0?"I'm Not Mad. I'm Just Disappointed.":"Strikeout! What a Failure!",setTimeout(()=>{View.addAlert("danger",'-1 LIFE <span class="noto">🩸</span>')},1e3);var e=e.users[0],t=document.getElementById("performanceStats");let a=HelpMe.roundToTenth(e.valuables.lives)+1,s=(a%1!=0&&(a=a.toFixed(1)),HelpMe.roundToTenth(e.valuables.lives));s%1!=0&&(s=s.toFixed(1));var r=`<div class="fs-4">${e.getVictoryPoints().toLocaleString()}/${e.getGoal().toLocaleString()}<span class="noto">👑</span></div><div class="small">VP/GOAL</div><div class="small"><span class="text-danger">&darr;</span> ${100-Math.round(e.getVictoryPoints()/e.getGoal()*100)}% below goal <span class="noto">👑</span></div>`,i=`<div class="fs-4">-1 LIFE <span class="noto">🩸</span></div><div class="small">${a}<span class="noto">🩸</span>&rarr;${s}<span class="noto">🩸</span></div>`,o=`<div class="fs-4">Earned +${e.getReward()}<span class="noto">🪙</span></div><div class="small">${e.valuables.money}<span class="noto">🪙</span>&rarr;${e.valuables.money+e.getReward()}<span class="noto">🪙</span></div>`;t.innerHTML+=`<div class="col-12 col-lg-4 text-center p-3">${r}</div>`,t.innerHTML+=`<div class="col-12 col-lg-4 text-center p-3">${i}</div>`,t.innerHTML+=`<div class="col-12 col-lg-4 text-center p-3">${o}</div>`,e.addMessage(r),e.addMessage(i),e.addMessage(o)}addSuccessAlerts(e){this.homePage.root.querySelector(".pageSummary").innerText=e.world.day%2==0?"Well Done! I Can't Wait To See What Happens Next!":"Home Run! What a Success!",setTimeout(()=>{View.addAlert("success",'LEVEL UP! <span class="noto">🚀</span>')},1e3);var e=e.users[0],t=document.getElementById("performanceStats"),a=`<div class="fs-4">${e.getVictoryPoints().toLocaleString()}/${e.getGoal().toLocaleString()}<span class="noto">👑</span></div><div class="small">VP/GOAL</div><div class="small"><span class="text-success">&uarr;</span> ${Math.round(e.getVictoryPoints()/e.getGoal()*100-100)}% above goal <span class="noto">👑</span></div>`,s=`<div class="fs-4">LEVEL UP! <span class="noto">🚀</span></div><div class="small">${e.level}<span class="noto">🚀</span>&rarr;${e.level+1}<span class="noto">🚀</span>`,r=`<div class="fs-4">Earned +${e.getReward()} <span class="noto">🪙</span></div><div class="small">${e.valuables.money}<span class="noto">🪙</span>&rarr;${e.valuables.money+e.getReward()}<span class="noto">🪙</span>`,i=`<div class="fs-4">Magic has reset <span class="noto">🔥</span><span class="noto">🌵</span><span class="noto">💧</span></div><div class="small">${e.valuables.redMagic}<span class="noto">🔥</span>${e.valuables.greenMagic}<span class="noto">🌵</span>${e.valuables.blueMagic}<span class="noto">💧</span>&rarr;0<span class="noto">🔥</span>0<span class="noto">🌵</span>0<span class="noto">💧</span>`;t.innerHTML+=`<div class="col-12 col-lg-6 col-xl-3 text-center p-3">${a}</div>`,t.innerHTML+=`<div class="col-12 col-lg-6 col-xl-3 text-center p-3">${s}</div>`,t.innerHTML+=`<div class="col-12 col-lg-6 col-xl-3 text-center p-3">${r}</div>`,t.innerHTML+=`<div class="col-12 col-lg-6 col-xl-3 text-center p-3">${i}</div>`,e.addMessage(a),e.addMessage(s),e.addMessage(r),e.addMessage(i)}getJudgement(e){var t;e.users[0].getVictoryPoints()>=e.users[0].getGoal()?(this.addSuccessAlerts(e),e.users[0].valuables.money+=e.users[0].getReward(),e.users[0].level++,e.users[0].valuables.setMagicToZero(),!e.users[0].hasWon&&13<=e.users[0].level?(this.setYouWin(e,!0),e.users[0].hasWon=!0):0<e.world.shop.unlockableCardTypes.length?((t=document.getElementById("cardCrates")).classList.remove("hide"),this.makeCardLootcrates(e,t)):(t=document.getElementsByClassName("performanceContinueButton"),Array.from(t).forEach(e=>{e.classList.remove("hide")}))):(e.users[0].valuables.lives--,!e.users[0].hasLost&&e.users[0].valuables.lives<=0?(this.setYouLose(e,!0),e.users[0].hasLost=!0):(this.addFailureAlerts(e),e.users[0].valuables.money+=e.users[0].getReward(),0<e.world.shop.unlockableUpgrades.length?((t=document.getElementById("upgradeCrates")).classList.remove("hide"),this.makeUpgradeLootcrates(e,t)):(e=document.getElementsByClassName("performanceContinueButton"),Array.from(e).forEach(e=>{e.classList.remove("hide")}))))}makeCardLootcrates(e,t){let a="";for(let e=0;e<3;e++)t.innerHTML+=`
            <div class="col-12 col-lg-4 text-center p-3">
                <div class="card">
                    <div class="card-header noto display-1">
                        📦
                    </div>
                    <div class="card-body font-monospace">
                        <button type="button" value="${e}" class="lootcrateCardButton btn btn-success btn-lg" data-bs-toggle="modal" data-bs-target="#lootcrateModal">${a+="I"}</button>
                        
                    </div>
                </div>
            </div>
            `}makeUpgradeLootcrates(e,t){let a="";for(let e=0;e<3;e++)t.innerHTML+=`
            <div class="col-12 col-lg-4 text-center p-3">
                <div class="p-2">
                    <div class="noto display-1 p-2">
                        🔮
                    </div>
                    <div class="font-monospace p-2">
                        <button type="button" value="${e}"  class="lootcrateUpgradeButton btn btn-outline-secondary pulsing-purple btn-lg" data-bs-toggle="modal" data-bs-target="#lootcrateModal">${a+="I"}</button>
                        
                    </div>
                </div>
            </div>
            `}setSeasonOver(e){var t=e.world.league.getStandingsTeams()[0];document.getElementById("performanceStats").innerHTML+=`
            <div class='noto text-center display-1'>🏆 🏆 🏆</div>
            <div class='text-center display-1'>${t.getNameWithLink()}</div>
            <div class=' text-center display-1'>${t.stats.wins} - ${t.stats.losses}</div>
            <div class=' text-center display-1'>ioLB Season ${e.world.year+1} Champions</div>
            <div class='noto text-center display-1'>🏆 🏆 🏆</div>
        `,e.users[0].valuables.lives<=0?this.setYouLose(e,!1):13<=e.users[0].level&&this.setYouWin(e,!1)}setupPerformanceView(e){this.setTime(e),this.navBar.setCounters(e.users[0]),this.userPage.updateUserCards(e.users[0]),this.userPage.updateUserInfo(e.users[0]),e.users[0].hasClickedUserIcon&&document.getElementById("userIconNag").classList.add("hide"),e.world.newsTicker.setItems(["INITIALIZING PERFORMANCE REVIEW... PLEASE WAIT.","IMPORT PATIENCE","ERROR: PATIENCE LEVELS NOT FOUND. PLEASE REMAIN CALM.","ANALYZING... ANALYZING...","LOADING ALL LOAD PROTOCOLS","ACCESSING FILES... 404: USER ACHIEVEMENTS NOT FOUND.","ANALYZING WORK OUTPUT... THIS MAY TAKE A WHILE.","ESTIMATED LOADING TIME: 5 SECONDS","ESTIMATED LOADING TIME: 3 HOURS","PERFORMING ALL PERFORMANCE PROTOCOLS","PRINTING","SPOOLING","WARNING: PRINTER JAMMED. REPLACING PAPER WITH PEANUTS","DATA CORRUPTED. IS YOUR WORK ENVIRONMENT TOXIC?","REVIEWING ALL REVIEW PROTOCOLS","INSPECTION COMPLETE. RESULTS ARE... PLEASE REBOOT","REBOOTING SELF-ESTEEM MODULE"]),this.navBar.renderTicker(e.world.newsTicker.items);var t=document.getElementById("newsTickerRibbon").clientWidth,t=(e.world.newsTicker.setSpeed(t/100),this.schedulePage.addSchedule(e.world.league.getSchedule(e.world.year),e.world.day),this.updateStandings(e),document.getElementsByClassName("nightContinueButton"));Array.from(t).forEach(e=>{e.classList.add("hide")})}setYouLose(e,t){document.body.classList.add("text-danger");var a=document.getElementById("performanceStats");a.innerHTML+=`
            <div class='noto text-center display-1'>💀💀💀</div>
            <div class='text-center display-1'>You Lose</div>
            <div class="text-center display-1">Level: ${e.users[0].level}<span class="noto">🚀</span></div>
            <div class="text-center display-1">Day: ${e.world.day+1}<span class="noto">🗓️</span></div>
            `,console.log("you lose"),e.users[0].valuables.setMagicToZero(),e.users[0].valuables.money=0,e.users[0].valuables.lives=0,e.users[0].cards.length=0,this.updateUserInfo(e.users[0]),t&&(a.innerHTML+='<div class="text-center p-4"><button type="button" class="performanceContinueButton btn btn-outline-secondary pulsing-purple" >I REFUSE TO DIE</button></div>')}setYouWin(e,t){document.body.classList.add("text-success");var a=document.getElementById("performanceStats");a.innerHTML+=`
            <div class='noto text-center display-1'>⭐⭐⭐</div>
            <div class='text-center display-1'>You Win</div>
            <div class="text-center display-1">Level: ${e.users[0].level}<span class="noto">🚀</span></div>
            <div class="text-center display-1">Day: ${e.world.day+1}<span class="noto">🗓️</span></div>
            `,console.log("you win"),t&&(a.innerHTML+='<div class="text-center p-4"><button type="button" class="performanceContinueButton bouncy btn btn-warning" >CONTINUE PLAYING</button></div>')}}class StatsModal{constructor(){this.root=View.createElement("div","statsModal","modal modal-dark"),this.root.innerHTML=`
            <div class="modal-dialog modal-dialog-centered  modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h4 id="statsModalTitle" class="modal-title">Modal Heading</h4>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div id="statsModalBody" class="modal-body overflow-auto">
                        Modal body..
                    </div>
                </div>
            </div>
        `.trim()}setText(e){({...e});document.getElementById("statsModalTitle").innerHTML=`<span class='noto shaded_outline_magenta'>${e.emoji}</span> `+e.name;var t={[CardType.CONCESSIONS]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> at end of day.</p>
                    <p>Then, Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> becomes Gain ${e.rewardamount2} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> for the next day.</p>
                </div>
            `,[CardType.JOKER]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> each time one of your ${e.othercard} Cards is triggered.</p>
                </div>
            `,[CardType.LUCKY_JOKER]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>${e.odds} chance to gain ${e.rewardamount} <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> when one of your ${e.othercard} Cards is triggered.</p>
                </div>
            `,[CardType.APOCRYPHA]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase. Wait... Apocrypha? Where did this come from?</p>
                    <p>Multiply your <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} when ${e.othercard} triggered.</p>
                    <p>Then, <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} becomes <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount2}</p>
                </div>
            `,[CardType.CELESTIAL]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase. WOW! This is a special card!</p>
                    <p>Multiply your <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} when ${e.othercard} triggered.</p>
                    <p>Then, <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount} becomes <span class='noto shaded_outline_magenta'>${e.rewardtype}</span> x${e.rewardamount2}</p>
                </div>
            `,[CardType.POTION]:`
                <div class="container text-center">
                    <p>This card costs ${e.cost} <span class='noto shaded_outline_magenta'>🪙</span> to purchase.</p>
                    <p>Gain ${e.rewardamount}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span> each time one of your ${e.othercard} is triggered.</p>
                    <p>Then, at the end of the day, Gain ${e.rewardamount}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span> becomes Gain ${e.rewardamount2}<span class='noto shaded_outline_magenta'>${e.rewardtype}</span></p>
                </div>
            `};document.getElementById("statsModalBody").innerHTML=t[e.cardline4]||`
            <div class="container text-center">
                <p>No details available for this card type.</p>
            </div>
        `}update(e){var t=app.model.world.league.lookup(e);if(null===t)throw new Error("updateModal could not find "+e);document.getElementById("statsModalTitle").innerHTML=t.getFullName(),document.getElementById("statsModalBody").innerHTML=t.getStatsTable()}render(){return this.root}}class ConfirmModal{constructor(){this.root=View.createElement("div","confirmModal","modal modal-dark"),this.root.innerHTML=`
            <div class="modal-dialog">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Please Confirm</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>This is your last chance to buy cards today.</p>
                        <p>You are holding <span id="confirmModalCardCounter"></span> cards.</p>
                        <p>Are you ready to Play Ball?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Keep Shopping</button>
                        <button type="button" class="shopContinueButton bouncy btn btn-warning float-start" data-bs-dismiss="modal">CONTINUE</button>
                    </div>
                </div>
            </div>
        `.trim()}update(e){if(null==e)throw new Error("null user");document.querySelector("#confirmModalCardCounter").innerHTML=`<span class="font-monospac fs-4">${e.getCardsCount()}/${e.maxCards}</span><span class="noto">🃏</span>`}render(){return this.root}}class GameWidgetComponent extends HTMLElement{static get observedAttributes(){return["logo"]}constructor(){super(),this.attachShadow({mode:"open"});var e=document.createElement("link"),e=(e.setAttribute("rel","stylesheet"),e.setAttribute("href","https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"),this.shadowRoot.appendChild(e),document.createElement("template"));e.innerHTML=`
        <style>
            .game-widget {
            /*background-color: #000;*/
            /*border: 2px solid #3c3d43;
            border-radius: 0.5rem;*/
            color: white;
            display: flex;
            flex-direction: row;
            margin-bottom: 1rem;
            }
            .col-lg {
            flex: 1;
            padding: 1rem;
            }
            /*
            .link {
            cursor: pointer;
            text-decoration: underline;
            }
            .link:hover {
            text-decoration: underline;
            }
            
            .font-monospac {
            font-family: monospac;
            }
            */
            .baseIcon {
                    font-family: Arial, sans-serif;
                    font-size: 2rem;
                    line-height: 1;
                    vertical-align: baseline;
                    -webkit-font-smoothing: antialiased;
                    font-smoothing: antialiased;
                    -moz-osx-font-smoothing: grayscale;
                    font-size-adjust:none;
                }
            :host([logo="window"]) .baseIcon {
                font-size: 3rem;
                }
            sub.baseIcon,
                sup.baseIcon {
                    margin: 0; /* Remove extra space that might cause layout issues */
                    padding: 0;
                    line-height: 1;
                    display: inline-block; /* Ensures proper alignment */
                    align-items: center;
                    justify-content: center;
                    position: relative;
                    
                }

                /* Adjust the positioning offsets */
                sub.gameWidgetLeftBase {
                    transform: translateX(0.75em) translateY(0em);
                }
                :host([logo="window"]) sub.gameWidgetLeftBase {
                    transform: translateX(1.82rem) translateY(0rem);
                    }

                sup.gameWidgetCenterBase {
                         transform: translateX(0em) translateY(0.4em);
                     }
                :host([logo="window"]) sup.gameWidgetCenterBase {
                    transform: translateX(0rem) translateY(1.28rem);
                }
                
                // :host([logo="apple"]) sup.gameWidgetCenterBase {
                //     transform: translateX(0em) translateY(0.37em);
                // }

                sub.gameWidgetRightBase {
                    transform: translateX(-0.75em) translateY(0em);
                }
                :host([logo="window"]) sub.gameWidgetRightBase {
                    transform: translateX(-1.82rem) translateY(0rem);
                    }
                    
                @-moz-document url-prefix(){
                    sub.gameWidgetLeftBase {
                        transform: translateX(0.5em) translateY(0em);
                    }

                    sup.gameWidgetCenterBase {
                        transform: translateX(0em) translateY(0.36em);
                    }

                    sub.gameWidgetRightBase {
                        transform: translateX(-0.5em) translateY(0em);
                    }
                }
        </style>
        <div class="game-widget shadow rounded-2 row mb-4 border border-secondary">
            <!-- Left Section -->
            <div class="col-12 col-lg-4 px-4 pt-4 py-lg-4 text-white">
            <span class="inning"></span>
            <div class="away-line row">
                <div class="away-name col-10 text-start link">Away Team</div>
                <div class="away-score col-2 text-end h3 font-monospac"></div>
            </div>
            <div class="home-line row">
                <div class="home-name col-10 text-start link">Home Team</div>
                <div class="home-score col-2 text-end h3 font-monospac"></div>
            </div>
            </div>

            <!-- Center Section -->
            <div class="col-12 col-lg-4 m-0 px-3 py-lg-4 text-white row">
            <div class="base-icons col-6 col-md-3 col-lg-12 m-0 px-0 pt-2 pb-3 ps-lg-0 pt-lg-4 text-white text-center">
        
                    <sub class="baseIcon font-monospac gameWidgetLeftBase" id="base-icon-0"></sub>
                    <sup class="baseIcon font-monospac gameWidgetCenterBase" id="base-icon-1"></sup>
                    <sub class="baseIcon font-monospac gameWidgetRightBase" id="base-icon-2"></sub>

            </div>
            <div class="count-container col-6 col-md-9 col-lg-12 m-0 p-0 pt-2 pb-3 text-white row row-cols-lg-6">
                <div class="balls-label col-6 col-sm-2 font-monospac text-end">B:</div>
                <div class="balls  col-6 col-sm-2  font-monospac text-start">0</div>
                <div class="strikes-label  col-6 col-sm-2  font-monospac text-end">S:</div>
                <div class="strikes  col-6 col-sm-2  font-monospac text-start">0</div>
                <div class="outs-label  col-6 col-sm-2  font-monospac text-end">O:</div>
                <div class="outs  col-6 col-sm-2  font-monospac text-start">0</div>
            </div>
            </div>

            <!-- Right Section -->
            <div class="col-12 col-lg-4 px-4 pb-4 py-lg-4 text-white lh-sm log"></div>
        </div>
        `,this.shadowRoot.appendChild(e.content.cloneNode(!0))}attributeChangedCallback(e,t,a){}connectedCallback(){}disconnectedCallback(){this._removeEventListeners()}_removeEventListeners(){this.shadowRoot.querySelector(".inning").removeEventListener("click",this._onInningClick),this.shadowRoot.querySelector(".away-name").removeEventListener("click",this._onAwayNameClick),this.shadowRoot.querySelector(".home-name").removeEventListener("click",this._onHomeNameClick)}render(e){this.shadowRoot.querySelector(".inning").textContent=e.inning,this.shadowRoot.querySelector(".away-name").innerHTML=e.awayNameWithLink,this.shadowRoot.querySelector(".home-name").innerHTML=e.homeNameWithLink,this.shadowRoot.querySelector(".away-score").textContent=e.score.away,this.shadowRoot.querySelector(".home-score").textContent=e.score.home;var t=e.baseIcons;this.shadowRoot.getElementById("base-icon-0").textContent=t.charAt(0),this.shadowRoot.getElementById("base-icon-1").textContent=t.charAt(1),this.shadowRoot.getElementById("base-icon-2").textContent=t.charAt(2),this.shadowRoot.querySelector(".balls").textContent=e.count.balls,this.shadowRoot.querySelector(".strikes").textContent=e.count.strikes,this.shadowRoot.querySelector(".outs").textContent=e.count.outs,this.shadowRoot.querySelector(".log").innerHTML=e.log;this.shadowRoot.querySelectorAll("a").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.showStatsModal()})});t=navigator.userAgentData?.platform.toLowerCase()||navigator.userAgent.toLowerCase();let a=t.includes("win")?"window":t.includes("mac")?"apple":"unknown";document.querySelectorAll("game-widget").forEach(e=>{e.setAttribute("logo",a)})}showStatsModal(){var e=document.getElementById("statsModal");e?new bootstrap.Modal(e).show():console.error('Modal element with ID "statsModal" not found')}}customElements.define("game-widget",GameWidgetComponent);class Controller{constructor(){null!=localStorage.getItem("savedState")?this.promptToLoadGame():this.startGame()}handleAfternoonContinueButtonClick=()=>{clearInterval(this.gameMessageInterval),this.model.next(),this.setupCurrentView()};handleCharacterSliders=e=>{this.model.users[0].setCharacter(e),this.view.userPage.drawCharacter(this.model.users[0])};handleLootcrateCardButtons=e=>{this.model.openLootcrateCard(e)};handleLootcrateUpgradeButtons=e=>{this.model.openLootcrateUpgrade(e)};handleShopContinueButtonClick=()=>{clearInterval(this.gameMessageInterval),this.model.next(),this.setupCurrentView()};handleNightContinueButtonClick=()=>{clearInterval(this.gameMessageInterval),this.model.resetPlotDeviceState(),this.model.next(),this.setupCurrentView()};handlePerformanceContinueButtonClick=()=>{clearInterval(this.gameMessageInterval),this.model.next(),this.setupCurrentView()};handlePromptToLoadContinueButtonClick=()=>{this.startGame()};handleShopBuyCardButtonClick=e=>{var t,a=this.model.users[0];this.model.world.shop.cardsOnDisplay[e].isAffordable(a)?(this.model.attemptShopCardPurchase(e,a),this.view.userPage.updateUserCards(a),this.view.markShopCardSold(e),a.cardsPurchased%15==0&&(t=CelestialCard.generateCards()[0],this.prependNewCard(t))):a.hasRoomForThisCard(this.model.world.shop.cardsOnDisplay[e])?this.model.isPurchaseAffordable(this.model.world.shop.cardsOnDisplay[e].cost,a)||View.addAlert("danger",`Oops! Not enough money! You have ${a.valuables.money}<span class="noto">🪙</span>, but that costs ${this.model.world.shop.cardsOnDisplay[e].cost}<span class="noto">🪙</span>`):View.addAlert("danger",`Oops! No room for more cards! You have ${a.getCardsCount()}/${a.maxCards}<span class="noto">🃏</span>. Sell one you own <em><small class="small">(or buy The Occult Hand upgrade)</small></em>`)};handleShopBuyUpgradeButtonClick=e=>{var t,a=this.model.users[0];this.model.world.shop.upgradesOnDisplay[e].isAffordable(a)?(this.model.attemptShopUpgradePurchase(e,a),this.view.userPage.updateUserCards(a),this.view.markShopUpgradeSold(e),a.upgradesPurchased%5==0&&(t=ApocryphaCard.generateCards()[0],this.prependNewUpgrade(t))):this.model.isPurchaseAffordable(this.model.world.shop.upgradesOnDisplay[e].cost,a)||View.addAlert("danger",`Oops! Not enough money! You have ${a.valuables.money}<span class="noto">🪙</span>, but that costs ${this.model.world.shop.upgradesOnDisplay[e].cost}<span class="noto">🪙</span>`)};handleShowPage=e=>{e&&(this.view.showPage(e),"userPage"===e&&(this.model.users[0].hasClickedUserIcon=!0,document.getElementById("userIconNag").classList.add("hide")),this.view.userPage.updateUserInfo(this.model.users[0]),this.view.userPage.bindSellButtons(this.handleSellButtons))};handleSellButtons=e=>{this.model.users[0].sellCard(e),this.view.userPage.markUserCardSold(e)};handleSpeedSelect=e=>{this.speed=e,this.model.users[0].favoriteSpeed=e,this.gameMessageInterval&&(clearInterval(this.gameMessageInterval),this.startGameLoop())};handleStartOverButton=()=>{localStorage.removeItem("savedState"),window.location.reload()};promptToLoadGame(){this.view=new PromptToLoadView,this.view.bindPromptToLoadContinueButtonClick(this.handlePromptToLoadContinueButtonClick),this.view.bindStartOverButton(this.handleStartOverButton)}startGame(){this.model=new Model(125,0),this.view=new View,this.speed=200;let e="";for(var t of this.model.world.league.teams)e+=t.crest.render();document.getElementById("footerFinalRow").innerHTML=e,this.model.users[0].manager.subscribe(this.view.updateUserInfo),this.setupCurrentView(),document.getElementById("loader").style.display="none"}prependNewCard(e){this.model.world.shop.cardsOnDisplay.push(e),this.view.prependNewCard(this.model.world.shop,e),View.addAlert("warning","AMAZING! A <span class='noto'>✨</span>Celestial Card<span class='noto'>✨</span> has materialized in the Trading Card Shop! This FREE card is available for a limited time only!"),document.getElementById("shopCardSlot"+(this.model.world.shop.cardsOnDisplay.length-1)+"Button").addEventListener("click",e=>{var t;"button"===e.target.localName?(t=e.target.value,this.handleShopBuyCardButtonClick(t)):"span"===e.target.localName&&null!=e.target.parentElement&&(t=e.target.parentElement.value,this.handleShopBuyCardButtonClick(t))})}prependNewUpgrade(e){this.model.world.shop.upgradesOnDisplay.push(e),this.view.prependNewUpgrade(this.model.world.shop,e),View.addAlert("danger","WARNING! A dangerous <span class='noto'>🪬</span>Apocrypha Card<span class='noto'>🪬</span> has been conjured in the Forbidden Upgrades. Do NOT under any circumstances accept this 'free' card!"),document.getElementById("secretCardSlot"+(this.model.world.shop.upgradesOnDisplay.length-1)+"Button").addEventListener("click",e=>{var t;"button"===e.target.localName?(t=e.target.value,this.handleShopBuyUpgradeButtonClick(t)):"span"===e.target.localName&&null!=e.target.parentElement&&(t=e.target.parentElement.value,this.handleShopBuyUpgradeButtonClick(t))})}setupAfternoonView(){this.model.reloadTeams(),this.view.setupAfternoonView(this.model),this.view.bindAfternoonContinueButtonClick(this.handleAfternoonContinueButtonClick),this.view.navBar.bindNavBarClick(this.handleShowPage),this.view.userPage.bindSpeedSelect(this.handleSpeedSelect),this.view.userPage.bindCharacterSliders(this.handleCharacterSliders),this.view.userPage.bindSellButtons(this.handleSellButtons),clearInterval(this.gameMessageInterval),this.view.userPage.drawCharacter(this.model.users[0]),this.startGameLoop()}setupCurrentView(){switch(this.model.state){case ModelState.MORNING:this.view=new ShopView,this.setupShopView();break;case ModelState.AFTERNOON:this.view=new AfternoonView,this.setupAfternoonView();break;case ModelState.POSTGAME_AFTERNOON:this.model.next();case ModelState.NIGHT:this.view=new NightView,this.setupNightView();break;case ModelState.PERFORMANCE:this.view=new PerformanceView(this.model),this.setupPerformanceView()}}setupShopView(){this.view.setupShopView(this.model),this.view.homePage.bindShopBuyCardButtonClick(this.handleShopBuyCardButtonClick),this.view.homePage.bindShopBuyUpgradeButtonClick(this.handleShopBuyUpgradeButtonClick),this.view.bindShopContinueButtonClick(this.handleShopContinueButtonClick),this.view.navBar.bindNavBarClick(this.handleShowPage),this.view.userPage.bindSpeedSelect(this.handleSpeedSelect),this.view.userPage.bindCharacterSliders(this.handleCharacterSliders),this.view.userPage.bindSellButtons(this.handleSellButtons),this.view.userPage.drawCharacter(this.model.users[0])}setupNightView(){this.view.setupNightView(this.model),this.view.bindNightContinueButtonClick(this.handleNightContinueButtonClick),this.view.navBar.bindNavBarClick(this.handleShowPage),this.view.userPage.bindSpeedSelect(this.handleSpeedSelect),clearInterval(this.gameMessageInterval),this.startGameLoop(),this.updateNight(),this.view.userPage.drawCharacter(this.model.users[0])}setupPerformanceView(){this.view.setupPerformanceView(this.model),this.view.bindPerformanceContinueButtonClick(this.handlePerformanceContinueButtonClick),this.view.bindPerformanceLootcrateCardButtonClick(this.handleLootcrateCardButtons),this.view.bindPerformanceLootcrateUpgradeButtonClick(this.handleLootcrateUpgradeButtons),this.view.navBar.bindNavBarClick(this.handleShowPage),this.view.userPage.bindSpeedSelect(this.handleSpeedSelect),clearInterval(this.gameMessageInterval),this.view.userPage.drawCharacter(this.model.users[0])}startGameLoop(){this.gameMessageInterval=setInterval(()=>{this.update()},this.speed)}update(){this.model.state===ModelState.AFTERNOON&&this.updateAfternoon(),this.model.state===ModelState.NIGHT&&this.updateNight()}updateAfternoon(){let t=this.model.world.nextGameMessages(this.model.world.year,this.model.world.day);this.view.homePage.addGameTableScores(t),this.view.liveGamesPage.updateGameWidgets(t);for(let e=0;e<t.length;e++)this.view.singleGamePages[e]&&this.view.singleGamePages[e].update(t[e]),this.view.liveGamesPage.widgets[e]&&this.view.liveGamesPage.widgets[e].render(t[e]);this.model.world.newsTicker.update(t);var e=this.model.world.newsTicker.getVisibleTickerItems();this.view.navBar.setTickerItems(e),this.view.updateUserInfo(this.model.users[0]),this.model.world.league.isTodayDone(this.model.world.year,this.model.world.day)&&(this.model.next(),this.model.users[0].handleEvent(new GameEvent(GameEventType.END_OF_DAY)),this.view.showTodayIsDone(),this.view.updateStandings(this.model),clearInterval(this.gameMessageInterval),setTimeout(()=>{this.model.world.newsTicker.update(t),this.view.navBar.setTickerItems(this.model.world.newsTicker.getVisibleTickerItems()),this.view.updateUserInfo(this.model.users[0]),this.view.userPage.updateUserCards(this.model.users[0])},this.speed))}updateNight(){this.view.homePage.addSocialPost(this.model.nextPlotMessage())}}let app=new Controller;